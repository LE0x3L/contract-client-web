{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "name": "evtChangeGovRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum proposalEvent",
          "name": "eventProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "evtProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "evtSwapERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAdd",
          "type": "address"
        }
      ],
      "name": "evtTxERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum assetsEvent",
          "name": "typeEvent",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "evtTxEth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum userEvent",
          "name": "eventUser",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "evtUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "name": "evtVoted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_acceptance",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "AcceptRejectInvitation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CCLFACTORY",
      "outputs": [
        {
          "internalType": "contract ICLFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHAPI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CLHSAFE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        }
      ],
      "name": "ExecProp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrDataPropUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isManager",
              "type": "bool"
            }
          ],
          "internalType": "struct strDataUser[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrProposalsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetArrUsersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetProposalList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "proponent",
              "type": "address"
            },
            {
              "internalType": "enum proposalType",
              "name": "typeProposal",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "propDataId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "rejected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "internalType": "struct strProposal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_GOVERNANCE_MODEL",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOUSE_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_houseName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_housePrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_houseOpen",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "_govModel",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[3]",
          "name": "_govRules",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[5]",
          "name": "_CLC",
          "type": "address[5]"
        },
        {
          "internalType": "address[]",
          "name": "_ManagerWallets",
          "type": "address[]"
        }
      ],
      "name": "Init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropBuyERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newApprovPercentage",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isManager",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropInviteUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRemoveUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_signerWallet",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "PropRequestToJoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSellERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenInCLV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropSwapERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_delayTime",
          "type": "uint256"
        }
      ],
      "name": "PropTxWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "propId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_propId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "VoteProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropGovRules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newApprovPercentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropTxAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOutCLV",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOutCLV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenInCLV",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrDataPropUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proponent",
          "type": "address"
        },
        {
          "internalType": "enum proposalType",
          "name": "typeProposal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "propDataId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rejected",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "arrUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "walletAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isUser",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isManager",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_propId",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_support",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "_justification",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "bulkVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleApprovPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxManagers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govRuleMaxUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "houseOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "housePrivate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapIdUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapInvitationUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapReq2Join",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "justification",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAdmin",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftInvitation",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftMember",
      "outputs": [
        {
          "internalType": "contract CLHNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numManagers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultCLH",
      "outputs": [
        {
          "internalType": "contract CLVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whiteListNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "18": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/proxy/utils/Initializable.sol",
    "47": "contracts/CLCore/CLStorage.sol",
    "48": "contracts/CLCore/CLTypes.sol",
    "50": "contracts/CLHouse/CLHouse.sol"
  },
  "ast": {
    "absolutePath": "contracts/CLHouse/CLHouse.sol",
    "exportedSymbols": {
      "Address": [
        10258
      ],
      "CLBeacon": [
        4903
      ],
      "CLHNFT": [
        5517
      ],
      "CLHouse": [
        2403
      ],
      "CLHouseApi": [
        970
      ],
      "CLStorage": [
        1398
      ],
      "CLVault": [
        5405
      ],
      "Context": [
        10912
      ],
      "Counters": [
        8139
      ],
      "DebugDLGTCLL": [
        9580
      ],
      "ERC165": [
        11207
      ],
      "ERC721": [
        7910
      ],
      "ERC721Burnable": [
        7940
      ],
      "ERC721URIStorage": [
        8065
      ],
      "IBeacon": [
        10280
      ],
      "ICLFactory": [
        5735
      ],
      "ICLHouse": [
        5983
      ],
      "IERC165": [
        10270
      ],
      "IERC20": [
        10890
      ],
      "IERC721": [
        6382
      ],
      "IERC721Metadata": [
        10957
      ],
      "IERC721Receiver": [
        10930
      ],
      "ISwapRouter": [
        6759
      ],
      "IUniswapV3SwapCallback": [
        10812
      ],
      "Initializable": [
        6266
      ],
      "InvalidGovernanceType": [
        9574
      ],
      "Ownable": [
        7043
      ],
      "Strings": [
        11183
      ],
      "TransferHelper": [
        6930
      ],
      "UpgradeableBeacon": [
        6457
      ],
      "__CONTRACT_NAME_HASH__": [
        9606
      ],
      "__CONTRACT_VERSION_HASH__": [
        9611
      ],
      "__GOV_COMMITTEE__": [
        9596
      ],
      "__GOV_DICTATORSHIP__": [
        9591
      ],
      "__GOV_SIMPLE_MAJORITY__": [
        9601
      ],
      "__STR_EIP712DOMAIN_HASH__": [
        9619
      ],
      "__STR_OCBULKVOTE_HASH__": [
        9643
      ],
      "__STR_OCDELUSER_HASH__": [
        9659
      ],
      "__STR_OCINVIT_HASH__": [
        9627
      ],
      "__STR_OCNEWCLH_HASH__": [
        9675
      ],
      "__STR_OCNEWUSER_HASH__": [
        9651
      ],
      "__STR_OCREQUEST_HASH__": [
        9667
      ],
      "__STR_OCVOTE_HASH__": [
        9635
      ],
      "__UPGRADEABLE_CLF_VERSION__": [
        9586
      ],
      "__UPGRADEABLE_CLH_VERSION__": [
        9583
      ],
      "assetsEvent": [
        9689
      ],
      "eCLC": [
        9713
      ],
      "gRule": [
        9707
      ],
      "proposalEvent": [
        9693
      ],
      "proposalType": [
        9703
      ],
      "strDataGovRules": [
        9770
      ],
      "strDataTxAssets": [
        9767
      ],
      "strDataUser": [
        9758
      ],
      "strProposal": [
        9744
      ],
      "strUser": [
        9724
      ],
      "strVote": [
        9751
      ],
      "userEvent": [
        9682
      ]
    },
    "id": 2404,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1815,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:50"
      },
      {
        "absolutePath": "/home/trecetp/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "id": 1816,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2404,
        "sourceUnit": 6267,
        "src": "58:63:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CLCore/CLStorage.sol",
        "file": "../CLCore/CLStorage.sol",
        "id": 1817,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2404,
        "sourceUnit": 1399,
        "src": "122:33:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1819,
              "name": "CLStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1398,
              "src": "347:9:50"
            },
            "id": 1820,
            "nodeType": "InheritanceSpecifier",
            "src": "347:9:50"
          },
          {
            "baseName": {
              "id": 1821,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6266,
              "src": "358:13:50"
            },
            "id": 1822,
            "nodeType": "InheritanceSpecifier",
            "src": "358:13:50"
          }
        ],
        "canonicalName": "CLHouse",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1818,
          "nodeType": "StructuredDocumentation",
          "src": "158:169:50",
          "text": "@title Contract to implement and test the basic fuctions of CLHouses\n @author Leonardo Urrego\n @notice This contract for test only the most basic interactions"
        },
        "fullyImplemented": true,
        "id": 2403,
        "linearizedBaseContracts": [
          2403,
          6266,
          1398
        ],
        "name": "CLHouse",
        "nameLocation": "336:7:50",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1829,
              "nodeType": "Block",
              "src": "445:39:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1826,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6265,
                      "src": "455:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "455:22:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1828,
                  "nodeType": "ExpressionStatement",
                  "src": "455:22:50"
                }
              ]
            },
            "documentation": {
              "id": 1823,
              "nodeType": "StructuredDocumentation",
              "src": "378:48:50",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 1830,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:2:50"
            },
            "returnParameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:50"
            },
            "scope": 2403,
            "src": "431:53:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1887,
              "nodeType": "Block",
              "src": "1493:780:50",
              "statements": [
                {
                  "assignments": [
                    1859,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1859,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "1567:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1887,
                      "src": "1562:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1858,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1562:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1881,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5f5f434c48436f6e7374727563746f7228616464726573732c737472696e672c626f6f6c2c626f6f6c2c627974657333322c75696e743235365b335d2c616464726573735b355d2c616464726573735b5d29",
                            "id": 1870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1695:84:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_864cf15575dd4fb54daf89386597312d3d7664c3d0750f7d3399e4a7b40f9f74",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[5],address[])\""
                            },
                            "value": "__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[5],address[])"
                          },
                          {
                            "id": 1871,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1833,
                            "src": "1797:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1872,
                            "name": "_houseName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "1822:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1873,
                            "name": "_housePrivate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1837,
                            "src": "1850:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1874,
                            "name": "_houseOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1839,
                            "src": "1881:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1875,
                            "name": "_govModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1841,
                            "src": "1909:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1876,
                            "name": "_govRules",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1845,
                            "src": "1936:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            }
                          },
                          {
                            "id": 1877,
                            "name": "_CLC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1849,
                            "src": "1963:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                              "typeString": "address[5] memory"
                            }
                          },
                          {
                            "id": 1878,
                            "name": "_ManagerWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1852,
                            "src": "1985:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_864cf15575dd4fb54daf89386597312d3d7664c3d0750f7d3399e4a7b40f9f74",
                              "typeString": "literal_string \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[5],address[])\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                              "typeString": "uint256[3] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                              "typeString": "address[5] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1868,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1654:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1654:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1654:360:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1860,
                          "name": "_CLC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "1586:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                            "typeString": "address[5] memory"
                          }
                        },
                        "id": 1866,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1863,
                                "name": "eCLC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9713,
                                "src": "1601:4:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_eCLC_$9713_$",
                                  "typeString": "type(enum eCLC)"
                                }
                              },
                              "id": 1864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "CLLConstructorCLH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9708,
                              "src": "1601:22:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_eCLC_$9713",
                                "typeString": "enum eCLC"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_eCLC_$9713",
                                "typeString": "enum eCLC"
                              }
                            ],
                            "id": 1862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1592:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1861,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1592:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1592:33:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1586:41:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "1586:54:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:438:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1561:463:50"
                },
                {
                  "condition": {
                    "id": 1883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2039:14:50",
                    "subExpression": {
                      "id": 1882,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "2040:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1886,
                  "nodeType": "IfStatement",
                  "src": "2035:232:50",
                  "trueBody": {
                    "id": 1885,
                    "nodeType": "Block",
                    "src": "2056:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2079:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2097:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2114:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2108:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2108:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2101:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2136:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "2148:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2148:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "2140:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2196:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2201:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2204:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2181:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2181:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2181:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2233:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2238:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2226:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2226:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2226:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1884,
                        "nodeType": "InlineAssembly",
                        "src": "2070:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1831,
              "nodeType": "StructuredDocumentation",
              "src": "490:654:50",
              "text": "@notice Create a new CLH\n @dev Some parameters can be ignored depending on the governance model\n @param _owner The address of the deployed wallet\n @param _houseName Name given by the owner\n @param _housePrivate If is set to 1, the CLH is set to private\n @param _houseOpen If is set to 1, the CLH is set to Open\n @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n @param _govRules Array for goverment rules see `enum gRule`\n @param _CLC Array for CL Contracts and others see `enum eCLC`\n @param _ManagerWallets Whitelist of address for invitate as managers"
            },
            "functionSelector": "53d1ee2d",
            "id": 1888,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1855,
                    "name": "__UPGRADEABLE_CLH_VERSION__",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9583,
                    "src": "1459:27:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 1856,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1854,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6219,
                  "src": "1444:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "1444:44:50"
              }
            ],
            "name": "Init",
            "nameLocation": "1158:4:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1180:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "1172:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "_houseName",
                  "nameLocation": "1211:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "1197:24:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1837,
                  "mutability": "mutable",
                  "name": "_housePrivate",
                  "nameLocation": "1236:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "1231:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1836,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1839,
                  "mutability": "mutable",
                  "name": "_houseOpen",
                  "nameLocation": "1264:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "1259:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1838,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1841,
                  "mutability": "mutable",
                  "name": "_govModel",
                  "nameLocation": "1292:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "1284:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1840,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1845,
                  "mutability": "mutable",
                  "name": "_govRules",
                  "nameLocation": "1329:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "1311:27:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1842,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1311:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1844,
                    "length": {
                      "hexValue": "33",
                      "id": 1843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1319:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1311:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1849,
                  "mutability": "mutable",
                  "name": "_CLC",
                  "nameLocation": "1366:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "1348:22:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$5_memory_ptr",
                    "typeString": "address[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1846,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1348:7:50",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1848,
                    "length": {
                      "hexValue": "35",
                      "id": 1847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1356:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1348:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$5_storage_ptr",
                      "typeString": "address[5]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1852,
                  "mutability": "mutable",
                  "name": "_ManagerWallets",
                  "nameLocation": "1397:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "1380:32:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1850,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1380:7:50",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1851,
                    "nodeType": "ArrayTypeName",
                    "src": "1380:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1162:256:50"
            },
            "returnParameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:50"
            },
            "scope": 2403,
            "src": "1149:1124:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1924,
              "nodeType": "Block",
              "src": "2782:607:50",
              "statements": [
                {
                  "assignments": [
                    1899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1899,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "2800:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1924,
                      "src": "2792:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1898,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2792:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1903,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1900,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "2816:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 1901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "2816:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2816:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2792:50:50"
                },
                {
                  "assignments": [
                    1905,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1905,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "2916:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1924,
                      "src": "2911:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1904,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2911:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1914,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4578656350726f702875696e7432353629",
                            "id": 1910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3016:19:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            "value": "ExecProp(uint256)"
                          },
                          {
                            "id": 1911,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1891,
                            "src": "3053:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5f3d99b36eccea2d9a38fa911daeb9ce94a9ac486dd03f1648c38f62cafa2119",
                              "typeString": "literal_string \"ExecProp(uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1908,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2975:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "2975:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2975:99:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1906,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1899,
                        "src": "2935:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2935:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2935:149:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2910:174:50"
                },
                {
                  "condition": {
                    "id": 1916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3099:14:50",
                    "subExpression": {
                      "id": 1915,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1905,
                      "src": "3100:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1919,
                  "nodeType": "IfStatement",
                  "src": "3095:232:50",
                  "trueBody": {
                    "id": 1918,
                    "nodeType": "Block",
                    "src": "3116:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3139:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3157:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3174:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3168:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3168:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "3161:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3196:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "3208:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3208:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "3200:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3256:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3261:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3264:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3241:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3241:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3241:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3293:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3298:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3286:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3286:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3286:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1917,
                        "nodeType": "InlineAssembly",
                        "src": "3130:187:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3346:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "537563636573732065786563757465642070726f706f73616c",
                        "id": 1921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3353:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04",
                          "typeString": "literal_string \"Success executed proposal\""
                        },
                        "value": "Success executed proposal"
                      }
                    ],
                    "id": 1922,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3344:38:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_cc5063be902007aa4094c05d7977aa17bd625bcc90d4b58bc658ed91467f2f04_$",
                      "typeString": "tuple(bool,literal_string \"Success executed proposal\")"
                    }
                  },
                  "functionReturnParameters": 1897,
                  "id": 1923,
                  "nodeType": "Return",
                  "src": "3337:45:50"
                }
              ]
            },
            "documentation": {
              "id": 1889,
              "nodeType": "StructuredDocumentation",
              "src": "2279:344:50",
              "text": "@notice Execute (or reject) a proposal computing the votes and the governance model\n @dev Normally is called internally after each vote\n @param _propId ID of the proposal, based on `arrProposals`\n @return status True if the proposal can be execute, false in other cases\n @return message result of the transaction"
            },
            "functionSelector": "5f3d99b3",
            "id": 1925,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ExecProp",
            "nameLocation": "2637:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "2663:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1925,
                  "src": "2655:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2645:31:50"
            },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1894,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2726:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1925,
                  "src": "2721:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2760:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1925,
                  "src": "2746:21:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2746:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2707:70:50"
            },
            "scope": 2403,
            "src": "2628:761:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1962,
              "nodeType": "Block",
              "src": "3841:660:50",
              "statements": [
                {
                  "assignments": [
                    1938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1938,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "3859:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1962,
                      "src": "3851:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1937,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3851:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1942,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1939,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "3875:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 1940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "3875:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3875:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3851:50:50"
                },
                {
                  "assignments": [
                    1944,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1944,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "3975:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 1962,
                      "src": "3970:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1943,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3970:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 1956,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "566f746550726f706f73616c2875696e743235362c626f6f6c2c737472696e672c627974657329",
                            "id": 1949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4076:41:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            "value": "VoteProposal(uint256,bool,string,bytes)"
                          },
                          {
                            "id": 1950,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "4135:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1951,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "4160:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1952,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "4186:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1953,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "4218:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c2b3aa089091839f7325bab8b8ed1dd8ad38b8c301fe29f7fcd75b4947c433c7",
                              "typeString": "literal_string \"VoteProposal(uint256,bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1947,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4034:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "4034:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4034:208:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1945,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1938,
                        "src": "3994:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3994:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3994:258:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3969:283:50"
                },
                {
                  "condition": {
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4267:14:50",
                    "subExpression": {
                      "id": 1957,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1944,
                      "src": "4268:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1961,
                  "nodeType": "IfStatement",
                  "src": "4263:232:50",
                  "trueBody": {
                    "id": 1960,
                    "nodeType": "Block",
                    "src": "4284:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4307:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4325:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4342:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4336:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4336:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "4329:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4364:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "4376:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4376:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "4368:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4424:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4429:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4432:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4409:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4409:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4409:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4461:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "4466:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4454:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4454:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4454:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 1959,
                        "nodeType": "InlineAssembly",
                        "src": "4298:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1926,
              "nodeType": "StructuredDocumentation",
              "src": "3395:275:50",
              "text": "@notice Used to vote a proposal\n @dev After vote the proposal automatically try to be executed\n @param _propId ID of the proposal, based on `arrProposals`\n @param _support True for accept, false to reject\n @param _justification About your vote"
            },
            "functionSelector": "c2b3aa08",
            "id": 1963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "VoteProposal",
            "nameLocation": "3684:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1928,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "3714:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "3706:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3706:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "3736:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "3731:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3731:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "3768:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "3754:28:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3754:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "3805:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 1963,
                  "src": "3792:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3792:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3696:125:50"
            },
            "returnParameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3841:0:50"
            },
            "scope": 2403,
            "src": "3675:826:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2004,
              "nodeType": "Block",
              "src": "5202:759:50",
              "statements": [
                {
                  "assignments": [
                    1982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1982,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "5220:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2004,
                      "src": "5212:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1981,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5212:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1986,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1983,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "5236:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "5236:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5236:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5212:50:50"
                },
                {
                  "assignments": [
                    1988,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1988,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "5336:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2004,
                      "src": "5331:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1987,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5331:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2002,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70496e766974655573657228616464726573732c737472696e672c737472696e672c626f6f6c2c75696e743235362c627974657329",
                            "id": 1993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5437:58:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            "value": "PropInviteUser(address,string,string,bool,uint256,bytes)"
                          },
                          {
                            "id": 1994,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1966,
                            "src": "5513:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1995,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1968,
                            "src": "5542:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1996,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1970,
                            "src": "5565:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1997,
                            "name": "_isManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1972,
                            "src": "5595:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1998,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1974,
                            "src": "5623:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1999,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1976,
                            "src": "5651:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_31a0afa7f676c8f7b485e9d34a7076717af4b3943f1bb7f40d38feb26e5c6635",
                              "typeString": "literal_string \"PropInviteUser(address,string,string,bool,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1991,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5395:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "5395:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5395:280:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1989,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "5355:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "5355:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5355:330:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5330:355:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5705:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5719:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5736:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5730:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5730:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "5723:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5754:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "5766:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5766:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5758:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5810:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5815:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "5818:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5795:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5795:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5795:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5863:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5888:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5893:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5881:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5881:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5881:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "5847:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5839:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5839:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "5836:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5925:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "5941:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5935:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5935:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "5925:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1979,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5925:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1988,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5847:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2003,
                  "nodeType": "InlineAssembly",
                  "src": "5696:259:50"
                }
              ]
            },
            "documentation": {
              "id": 1964,
              "nodeType": "StructuredDocumentation",
              "src": "4507:425:50",
              "text": "@notice Generate a new proposal to invite a new user\n @dev the execution of this proposal only create an invitation \n @param _walletAddr  Address of the new user\n @param _name Can be the nickname or other reference to the User\n @param _description A text for the proposal\n @param _isManager True if is for a manager\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "31a0afa7",
            "id": 2005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropInviteUser",
            "nameLocation": "4946:14:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1966,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "4978:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2005,
                  "src": "4970:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4970:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1968,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5013:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2005,
                  "src": "4999:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1967,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4999:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1970,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "5042:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2005,
                  "src": "5028:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1969,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5028:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1972,
                  "mutability": "mutable",
                  "name": "_isManager",
                  "nameLocation": "5069:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2005,
                  "src": "5064:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1971,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5064:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1974,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "5097:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2005,
                  "src": "5089:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "5130:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2005,
                  "src": "5117:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4960:186:50"
            },
            "returnParameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1979,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "5189:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2005,
                  "src": "5181:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5181:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5179:18:50"
            },
            "scope": 2403,
            "src": "4937:1024:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2040,
              "nodeType": "Block",
              "src": "6448:696:50",
              "statements": [
                {
                  "assignments": [
                    2020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2020,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "6466:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2040,
                      "src": "6458:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2019,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6458:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2021,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "6482:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "6482:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6482:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6458:50:50"
                },
                {
                  "assignments": [
                    2026,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2026,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "6582:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2040,
                      "src": "6577:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2025,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6577:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2038,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052656d6f76655573657228616464726573732c737472696e672c75696e743235362c627974657329",
                            "id": 2031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6683:46:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            "value": "PropRemoveUser(address,string,uint256,bytes)"
                          },
                          {
                            "id": 2032,
                            "name": "_walletAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "6747:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2033,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "6776:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2034,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2012,
                            "src": "6806:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2035,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "6834:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2a57ef8465999602129e676b4a60c0623eb2cc91d38b1a125e7aae8223cea980",
                              "typeString": "literal_string \"PropRemoveUser(address,string,uint256,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2029,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6641:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "6641:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6641:217:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2027,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "6601:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "6601:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:267:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6576:292:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6888:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6902:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6919:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "6913:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6913:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "6906:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6937:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "6949:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6949:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "6941:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "6993:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6998:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7001:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "6978:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6978:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6978:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7046:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "7071:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "7076:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "7064:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7064:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7064:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "7030:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "7022:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7022:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "7019:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7108:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7124:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "7118:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7118:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "7108:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2017,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7108:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2026,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7030:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2039,
                  "nodeType": "InlineAssembly",
                  "src": "6879:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2006,
              "nodeType": "StructuredDocumentation",
              "src": "5967:265:50",
              "text": "@notice Generate a new proposal for remove a user\n @dev The user can be a managaer\n @param _walletAddr user Address to be removed\n @param _description About the proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "2a57ef84",
            "id": 2041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRemoveUser",
            "nameLocation": "6246:14:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "mutability": "mutable",
                  "name": "_walletAddr",
                  "nameLocation": "6278:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "6270:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6270:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2010,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "6313:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "6299:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6299:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2012,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "6343:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "6335:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6335:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2014,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6376:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "6363:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6260:132:50"
            },
            "returnParameters": {
              "id": 2018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "6435:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "6427:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6427:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6425:18:50"
            },
            "scope": 2403,
            "src": "6237:907:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "7685:688:50",
              "statements": [
                {
                  "assignments": [
                    2056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2056,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "7703:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2076,
                      "src": "7695:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2055,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7695:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2060,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2057,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "7719:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "7719:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7719:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7695:50:50"
                },
                {
                  "assignments": [
                    2062,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2062,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "7819:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2076,
                      "src": "7814:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2061,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7814:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2074,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70547857656928616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7920:43:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            "value": "PropTxWei(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2068,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2044,
                            "src": "7981:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2069,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2046,
                            "src": "8002:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2070,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2048,
                            "src": "8033:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2071,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "8063:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7c6385482cc50c34905baf4b5888e8798c5594a0a2bf4d252265bc9209354799",
                              "typeString": "literal_string \"PropTxWei(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2065,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7878:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "7878:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7878:209:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2063,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2056,
                        "src": "7838:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "7838:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:259:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7813:284:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8117:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8131:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8148:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8142:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8142:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "8135:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8166:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "8178:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8178:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8170:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8222:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8227:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "8230:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "8207:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8207:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8207:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8275:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8300:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "8305:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8293:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8293:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8293:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "8259:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "8251:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8251:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "8248:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8337:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8353:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "8347:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8347:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "8337:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2053,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8337:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2062,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8259:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2075,
                  "nodeType": "InlineAssembly",
                  "src": "8108:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2042,
              "nodeType": "StructuredDocumentation",
              "src": "7150:334:50",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "7c638548",
            "id": 2077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxWei",
            "nameLocation": "7498:9:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7525:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "7517:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7517:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "7546:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "7538:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7538:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "7583:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "7569:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7569:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "7613:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "7605:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7605:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7507:122:50"
            },
            "returnParameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "7672:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2077,
                  "src": "7664:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7664:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7662:18:50"
            },
            "scope": 2403,
            "src": "7489:884:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2115,
              "nodeType": "Block",
              "src": "8946:728:50",
              "statements": [
                {
                  "assignments": [
                    2094
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2094,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "8964:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2115,
                      "src": "8956:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2093,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8956:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2098,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2095,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "8980:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "8980:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8980:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8956:50:50"
                },
                {
                  "assignments": [
                    2100,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2100,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "9080:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2115,
                      "src": "9075:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2099,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9075:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2113,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f705478455243323028616464726573732c75696e743235362c616464726573732c737472696e672c75696e7432353629",
                            "id": 2105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9181:53:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            "value": "PropTxERC20(address,uint256,address,string,uint256)"
                          },
                          {
                            "id": 2106,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2080,
                            "src": "9252:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2107,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2082,
                            "src": "9273:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2108,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "9304:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2109,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2086,
                            "src": "9334:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2110,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2088,
                            "src": "9364:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_de5ab14ee76e872eb390c8f0942b0cbe9e6de8609dea31f21b3c6b5cdfc0a34b",
                              "typeString": "literal_string \"PropTxERC20(address,uint256,address,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2103,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9139:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "9139:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9139:249:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2101,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "9099:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "9099:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9099:299:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9074:324:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "9418:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9432:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9449:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9443:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9443:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "9436:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9467:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "9479:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9479:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "9471:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9523:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9528:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "9531:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "9508:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9508:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9508:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9576:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "9601:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "9606:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9594:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9594:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9594:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "9560:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "9552:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9552:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "9549:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9638:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9654:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9648:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9648:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "9638:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2091,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9638:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2100,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "9560:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2114,
                  "nodeType": "InlineAssembly",
                  "src": "9409:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2078,
              "nodeType": "StructuredDocumentation",
              "src": "8379:334:50",
              "text": "@notice generate a new proposal to transfer ETH in weis\n @dev When execute this proposal, the transfer is made\n @param _to Recipient address\n @param _amountOutCLV Amount to transfer (in wei)\n @param _description About this proposal\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "de5ab14e",
            "id": 2116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropTxERC20",
            "nameLocation": "8727:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2080,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8756:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "8748:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8748:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2082,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "8777:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "8769:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8769:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "8808:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "8800:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8800:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "8844:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "8830:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8830:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "8874:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "8866:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8866:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8738:152:50"
            },
            "returnParameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2091,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "8933:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "8925:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8925:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8923:18:50"
            },
            "scope": 2403,
            "src": "8718:956:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2148,
              "nodeType": "Block",
              "src": "10220:669:50",
              "statements": [
                {
                  "assignments": [
                    2129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2129,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "10238:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2148,
                      "src": "10230:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10230:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2133,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2130,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "10254:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "10254:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10254:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10230:50:50"
                },
                {
                  "assignments": [
                    2135,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2135,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "10354:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2148,
                      "src": "10349:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2134,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10349:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70476f7652756c65732875696e743235362c737472696e672c75696e7432353629",
                            "id": 2140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10455:38:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5de58f607a95103acd560c40247e4019876e7711f6d7e22c71e036f549ba4c67",
                              "typeString": "literal_string \"PropGovRules(uint256,string,uint256)\""
                            },
                            "value": "PropGovRules(uint256,string,uint256)"
                          },
                          {
                            "id": 2141,
                            "name": "_newApprovPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2119,
                            "src": "10511:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2142,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2121,
                            "src": "10549:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2143,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2123,
                            "src": "10579:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5de58f607a95103acd560c40247e4019876e7711f6d7e22c71e036f549ba4c67",
                              "typeString": "literal_string \"PropGovRules(uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2138,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10413:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "10413:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10413:190:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2136,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "10373:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "10373:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10373:240:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10348:265:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "10633:250:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10647:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10664:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10658:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10658:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10651:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10682:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "10694:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10694:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "10686:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10738:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10743:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10746:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "10723:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10723:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10723:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10791:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10816:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "10821:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "10809:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10809:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10809:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "10775:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10767:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10767:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "10764:76:50"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10853:20:50",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "10869:3:50"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10863:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10863:10:50"
                        },
                        "variableNames": [
                          {
                            "name": "propId",
                            "nodeType": "YulIdentifier",
                            "src": "10853:6:50"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2126,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10853:6:50",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2135,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "10775:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2147,
                  "nodeType": "InlineAssembly",
                  "src": "10624:259:50"
                }
              ]
            },
            "documentation": {
              "id": 2117,
              "nodeType": "StructuredDocumentation",
              "src": "9680:350:50",
              "text": "@notice Generate a new proposal for change some governance parameters\n @dev When execute this proposal the new values will be set\n @param _newApprovPercentage The new percentaje for accept or reject a proposal\n @param _description About the new proposal \n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "5de58f60",
            "id": 2149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropGovRules",
            "nameLocation": "10044:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "_newApprovPercentage",
                  "nameLocation": "10074:20:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "10066:28:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10066:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "10118:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "10104:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10104:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "10148:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "10140:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10140:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10056:108:50"
            },
            "returnParameters": {
              "id": 2127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2126,
                  "mutability": "mutable",
                  "name": "propId",
                  "nameLocation": "10207:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "10199:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10199:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10197:18:50"
            },
            "scope": 2403,
            "src": "10035:854:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2184,
              "nodeType": "Block",
              "src": "11474:692:50",
              "statements": [
                {
                  "assignments": [
                    2164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2164,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "11492:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2184,
                      "src": "11484:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2163,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11484:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2168,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2165,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "11508:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "11508:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11508:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11484:50:50"
                },
                {
                  "assignments": [
                    2170,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2170,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "11608:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2184,
                      "src": "11603:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2169,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11603:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2182,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7052657175657374546f4a6f696e28737472696e672c737472696e672c616464726573732c627974657329",
                            "id": 2175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11709:48:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_12eab7ff6fe9f7f416b2dc702860595ffaeb66e553c2189821311594c7635b73",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,address,bytes)\""
                            },
                            "value": "PropRequestToJoin(string,string,address,bytes)"
                          },
                          {
                            "id": 2176,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2152,
                            "src": "11775:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2177,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2154,
                            "src": "11798:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2178,
                            "name": "_signerWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2156,
                            "src": "11828:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2179,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2158,
                            "src": "11859:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_12eab7ff6fe9f7f416b2dc702860595ffaeb66e553c2189821311594c7635b73",
                              "typeString": "literal_string \"PropRequestToJoin(string,string,address,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2173,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11667:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "11667:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11667:216:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2171,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2164,
                        "src": "11627:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "11627:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11627:266:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11602:291:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "11913:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11927:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11944:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "11938:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11938:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11931:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11962:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "11974:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11974:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "11966:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12018:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12023:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12026:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "12003:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12003:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12003:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12071:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12096:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12101:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12089:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12089:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12089:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "12055:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12047:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12047:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "12044:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "12140:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "12145:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "12133:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12133:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12133:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2170,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "12055:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2183,
                  "nodeType": "InlineAssembly",
                  "src": "11904:256:50"
                }
              ]
            },
            "documentation": {
              "id": 2150,
              "nodeType": "StructuredDocumentation",
              "src": "10895:364:50",
              "text": "@notice Generate a proposal from a user that want to join to the CLH\n @dev Only avaiable in public CLH\n @param _name Nickname or other user identification\n @param _description About the request\n @param _signerWallet Address of signer to check OffChain signature\n @return propId ID of the new proposal, based on `arrProposals`"
            },
            "functionSelector": "12eab7ff",
            "id": 2185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropRequestToJoin",
            "nameLocation": "11273:17:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "11314:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "11300:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11300:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2154,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "11343:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "11329:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11329:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2156,
                  "mutability": "mutable",
                  "name": "_signerWallet",
                  "nameLocation": "11373:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "11365:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11365:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2158,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "11409:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "11396:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11396:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11290:135:50"
            },
            "returnParameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "11460:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11460:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11458:11:50"
            },
            "scope": 2403,
            "src": "11264:902:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2216,
              "nodeType": "Block",
              "src": "12408:613:50",
              "statements": [
                {
                  "assignments": [
                    2194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2194,
                      "mutability": "mutable",
                      "name": "CLLUserManagement",
                      "nameLocation": "12426:17:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2216,
                      "src": "12418:25:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12418:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2198,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2195,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "12446:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLUserManagement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5666,
                      "src": "12446:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12446:30:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12418:58:50"
                },
                {
                  "assignments": [
                    2200,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2200,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "12550:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2216,
                      "src": "12545:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2199,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12545:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2210,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "41636365707452656a656374496e7669746174696f6e28626f6f6c2c627974657329",
                            "id": 2205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12655:36:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            "value": "AcceptRejectInvitation(bool,bytes)"
                          },
                          {
                            "id": 2206,
                            "name": "_acceptance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2188,
                            "src": "12709:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2207,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "12738:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_81cf22d80f4ec7d62ace7f62bb20df069329fad76ea536d29d67fc68ae1b5019",
                              "typeString": "literal_string \"AcceptRejectInvitation(bool,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2203,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12613:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12613:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12613:149:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2201,
                        "name": "CLLUserManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2194,
                        "src": "12569:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "12569:30:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12569:203:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12544:228:50"
                },
                {
                  "condition": {
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12787:14:50",
                    "subExpression": {
                      "id": 2211,
                      "name": "successDGTCLL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2200,
                      "src": "12788:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2215,
                  "nodeType": "IfStatement",
                  "src": "12783:232:50",
                  "trueBody": {
                    "id": 2214,
                    "nodeType": "Block",
                    "src": "12804:211:50",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "12827:178:50",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12845:22:50",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12862:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12856:5:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12856:11:50"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "12849:3:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12884:28:50",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "12896:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12896:16:50"
                              },
                              "variables": [
                                {
                                  "name": "size",
                                  "nodeType": "YulTypedName",
                                  "src": "12888:4:50",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12944:3:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12949:1:50",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12952:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "12929:14:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12929:28:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12929:28:50"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12981:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12986:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12974:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12974:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12974:17:50"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [],
                        "id": 2213,
                        "nodeType": "InlineAssembly",
                        "src": "12818:187:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2186,
              "nodeType": "StructuredDocumentation",
              "src": "12172:113:50",
              "text": "@notice For an user that have an invitation pending\n @param _acceptance True for accept the invitation"
            },
            "functionSelector": "81cf22d8",
            "id": 2217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AcceptRejectInvitation",
            "nameLocation": "12299:22:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "_acceptance",
                  "nameLocation": "12336:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "12331:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12331:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2190,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "12370:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "12357:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12357:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12321:65:50"
            },
            "returnParameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12408:0:50"
            },
            "scope": 2403,
            "src": "12290:731:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2254,
              "nodeType": "Block",
              "src": "13258:735:50",
              "statements": [
                {
                  "assignments": [
                    2233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2233,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "13276:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2254,
                      "src": "13268:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2232,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13268:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2237,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2234,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "13292:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "13292:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13292:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13268:50:50"
                },
                {
                  "assignments": [
                    2239,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2239,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "13392:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2254,
                      "src": "13387:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2238,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13387:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2252,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053776170455243323028616464726573732c616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13493:55:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            "value": "PropSwapERC20(address,address,uint256,string,uint256)"
                          },
                          {
                            "id": 2245,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2219,
                            "src": "13566:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2246,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2221,
                            "src": "13596:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2247,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2223,
                            "src": "13625:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2248,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "13656:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2249,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2227,
                            "src": "13686:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_152de3b98ea86d627e1f008ef402ac90ecf10b8b7150905cf13cb40560733610",
                              "typeString": "literal_string \"PropSwapERC20(address,address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2242,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13451:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "13451:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13451:259:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2240,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "13411:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "13411:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13411:309:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13386:334:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13740:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13754:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13771:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13765:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13765:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "13758:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13789:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "13801:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13801:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "13793:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13845:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13850:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13853:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13830:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13830:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13830:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13898:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13923:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "13928:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13916:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13916:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13916:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "13882:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13874:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13874:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "13871:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "13967:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "13972:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "13960:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13960:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13960:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2239,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13882:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2253,
                  "nodeType": "InlineAssembly",
                  "src": "13731:256:50"
                }
              ]
            },
            "functionSelector": "152de3b9",
            "id": 2255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSwapERC20",
            "nameLocation": "13036:13:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2219,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "13067:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "13059:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13059:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2221,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "13097:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "13089:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13089:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2223,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "13126:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "13118:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13118:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "13163:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "13149:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13149:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2227,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "13193:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "13185:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13185:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13049:160:50"
            },
            "returnParameters": {
              "id": 2231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2230,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "13244:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13244:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13242:11:50"
            },
            "scope": 2403,
            "src": "13027:966:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2289,
              "nodeType": "Block",
              "src": "14201:698:50",
              "statements": [
                {
                  "assignments": [
                    2269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2269,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "14219:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2289,
                      "src": "14211:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2268,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14211:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2273,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2270,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "14235:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "14235:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14235:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14211:50:50"
                },
                {
                  "assignments": [
                    2275,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2275,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "14335:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2289,
                      "src": "14330:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2274,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14330:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2287,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f7053656c6c455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14436:47:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropSellERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2281,
                            "name": "_tokenOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2257,
                            "src": "14501:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2282,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2259,
                            "src": "14531:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2283,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2261,
                            "src": "14562:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2284,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "14592:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_04f17a9bb89b1e450e234a08e9c473746a395c39a699313d8ca6797b97b374af",
                              "typeString": "literal_string \"PropSellERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2278,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14394:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "14394:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14394:222:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2276,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2269,
                        "src": "14354:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "14354:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14354:272:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14329:297:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "14646:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14660:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14677:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "14671:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14671:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "14664:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "14695:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "14707:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14707:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "14699:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14751:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14756:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14759:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "14736:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14736:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14736:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14804:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14829:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "14834:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14822:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14822:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14822:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "14788:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "14780:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14780:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "14777:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "14873:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "14878:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "14866:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14866:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14866:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2275,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "14788:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2288,
                  "nodeType": "InlineAssembly",
                  "src": "14637:256:50"
                }
              ]
            },
            "functionSelector": "04f17a9b",
            "id": 2290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropSellERC20",
            "nameLocation": "14008:13:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2257,
                  "mutability": "mutable",
                  "name": "_tokenOutCLV",
                  "nameLocation": "14039:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "14031:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14031:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2259,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "14069:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "14061:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14061:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2261,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "14106:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "14092:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2260,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14092:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2263,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "14136:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "14128:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14128:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14021:131:50"
            },
            "returnParameters": {
              "id": 2267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2266,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2290,
                  "src": "14187:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14187:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14185:11:50"
            },
            "scope": 2403,
            "src": "13999:900:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2324,
              "nodeType": "Block",
              "src": "15105:696:50",
              "statements": [
                {
                  "assignments": [
                    2304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2304,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "15123:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2324,
                      "src": "15115:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2303,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15115:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2308,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2305,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "15139:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "15139:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15139:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15115:50:50"
                },
                {
                  "assignments": [
                    2310,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2310,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "15239:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2324,
                      "src": "15234:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2309,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15234:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2322,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50726f70427579455243323028616464726573732c75696e743235362c737472696e672c75696e7432353629",
                            "id": 2315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15340:46:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            "value": "PropBuyERC20(address,uint256,string,uint256)"
                          },
                          {
                            "id": 2316,
                            "name": "_tokenInCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2292,
                            "src": "15404:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2317,
                            "name": "_amountOutCLV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2294,
                            "src": "15433:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2318,
                            "name": "_description",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2296,
                            "src": "15464:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2319,
                            "name": "_delayTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2298,
                            "src": "15494:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2266e1bc09a9739eac0cdf93a2f130fcaf0d67ad5f8d0909c155c6843375d27c",
                              "typeString": "literal_string \"PropBuyERC20(address,uint256,string,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2313,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15298:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "15298:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15298:220:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2311,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2304,
                        "src": "15258:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "15258:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15258:270:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15233:295:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "15548:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15562:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15579:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "15573:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15573:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "15566:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15597:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "15609:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15609:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "15601:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "15653:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15658:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "15661:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "15638:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15638:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15638:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15706:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15731:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "15736:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15724:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15724:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15724:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "15690:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "15682:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15682:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "15679:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "15775:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "15780:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "15768:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15768:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15768:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2310,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "15690:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2323,
                  "nodeType": "InlineAssembly",
                  "src": "15539:256:50"
                }
              ]
            },
            "functionSelector": "2266e1bc",
            "id": 2325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PropBuyERC20",
            "nameLocation": "14914:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2292,
                  "mutability": "mutable",
                  "name": "_tokenInCLV",
                  "nameLocation": "14944:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "14936:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14936:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2294,
                  "mutability": "mutable",
                  "name": "_amountOutCLV",
                  "nameLocation": "14973:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "14965:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14965:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2296,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "15010:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "14996:26:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2295,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14996:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2298,
                  "mutability": "mutable",
                  "name": "_delayTime",
                  "nameLocation": "15040:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "15032:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15032:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14926:130:50"
            },
            "returnParameters": {
              "id": 2302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2301,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "15091:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15091:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15089:11:50"
            },
            "scope": 2403,
            "src": "14905:896:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2359,
              "nodeType": "Block",
              "src": "16210:682:50",
              "statements": [
                {
                  "assignments": [
                    2339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2339,
                      "mutability": "mutable",
                      "name": "CLLGovernance",
                      "nameLocation": "16228:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2359,
                      "src": "16220:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2338,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16220:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2343,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2340,
                        "name": "CCLFACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "16244:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICLFactory_$5735",
                          "typeString": "contract ICLFactory"
                        }
                      },
                      "id": 2341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "CLLGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5671,
                      "src": "16244:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16244:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16220:50:50"
                },
                {
                  "assignments": [
                    2345,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2345,
                      "mutability": "mutable",
                      "name": "successDGTCLL",
                      "nameLocation": "16344:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 2359,
                      "src": "16339:18:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2344,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "16339:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "documentation": "@custom:oz-upgrades-unsafe-allow delegatecall",
                  "id": 2357,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "62756c6b566f74652875696e743235365b5d2c626f6f6c2c737472696e672c627974657329",
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16445:39:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a1c89c9df67037900e8200fdeb8dc1c4034c53148e3fd96bb77dc63379bb6bcb",
                              "typeString": "literal_string \"bulkVote(uint256[],bool,string,bytes)\""
                            },
                            "value": "bulkVote(uint256[],bool,string,bytes)"
                          },
                          {
                            "id": 2351,
                            "name": "_propId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2329,
                            "src": "16502:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 2352,
                            "name": "_support",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2331,
                            "src": "16527:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2353,
                            "name": "_justification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2333,
                            "src": "16553:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 2354,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2335,
                            "src": "16585:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a1c89c9df67037900e8200fdeb8dc1c4034c53148e3fd96bb77dc63379bb6bcb",
                              "typeString": "literal_string \"bulkVote(uint256[],bool,string,bytes)\""
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2348,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16403:3:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "16403:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 2355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16403:206:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2346,
                        "name": "CLLGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "16363:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "16363:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16363:256:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16338:281:50"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "16639:247:50",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16653:22:50",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16670:4:50",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16664:5:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16664:11:50"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "16657:3:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16688:28:50",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "returndatasize",
                            "nodeType": "YulIdentifier",
                            "src": "16700:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16700:16:50"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "16692:4:50",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "16744:3:50"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16749:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "16752:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "16729:14:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16729:28:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16729:28:50"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16797:49:50",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16822:3:50"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "16827:4:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16815:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16815:17:50"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16815:17:50"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "successDGTCLL",
                              "nodeType": "YulIdentifier",
                              "src": "16781:13:50"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "16773:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16773:23:50"
                        },
                        "nodeType": "YulIf",
                        "src": "16770:76:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "16866:3:50"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "16871:4:50"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "16859:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16859:17:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16859:17:50"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2345,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16781:13:50",
                      "valueSize": 1
                    }
                  ],
                  "id": 2358,
                  "nodeType": "InlineAssembly",
                  "src": "16630:256:50"
                }
              ]
            },
            "documentation": {
              "id": 2326,
              "nodeType": "StructuredDocumentation",
              "src": "15808:224:50",
              "text": "@notice Vote for multiple proposal\n @param _propId Array with ID of the proposal to votes\n @param _support is the Vote (True or False) for all proposals\n @param _justification Description of the vote"
            },
            "functionSelector": "a1c89c9d",
            "id": 2360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bulkVote",
            "nameLocation": "16046:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2329,
                  "mutability": "mutable",
                  "name": "_propId",
                  "nameLocation": "16081:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2360,
                  "src": "16064:24:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2327,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16064:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2328,
                    "nodeType": "ArrayTypeName",
                    "src": "16064:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "_support",
                  "nameLocation": "16103:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2360,
                  "src": "16098:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16098:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2333,
                  "mutability": "mutable",
                  "name": "_justification",
                  "nameLocation": "16135:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2360,
                  "src": "16121:28:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16121:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2335,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "16172:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 2360,
                  "src": "16159:23:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2334,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16159:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16054:134:50"
            },
            "returnParameters": {
              "id": 2337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16210:0:50"
            },
            "scope": 2403,
            "src": "16037:855:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2369,
              "nodeType": "Block",
              "src": "17000:39:50",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2366,
                      "name": "arrUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1025,
                      "src": "17017:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strUser_$9724_storage_$dyn_storage",
                        "typeString": "struct strUser storage ref[] storage ref"
                      }
                    },
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "17017:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2365,
                  "id": 2368,
                  "nodeType": "Return",
                  "src": "17010:22:50"
                }
              ]
            },
            "documentation": {
              "id": 2361,
              "nodeType": "StructuredDocumentation",
              "src": "16898:36:50",
              "text": "@notice Length of arrUsers array"
            },
            "functionSelector": "a693649a",
            "id": 2370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrUsersLength",
            "nameLocation": "16948:17:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16965:2:50"
            },
            "returnParameters": {
              "id": 2365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "16991:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16991:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16989:11:50"
            },
            "scope": 2403,
            "src": "16939:100:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2379,
              "nodeType": "Block",
              "src": "17155:43:50",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 2376,
                      "name": "arrProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "17172:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_strProposal_$9744_storage_$dyn_storage",
                        "typeString": "struct strProposal storage ref[] storage ref"
                      }
                    },
                    "id": 2377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "17172:19:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2375,
                  "id": 2378,
                  "nodeType": "Return",
                  "src": "17165:26:50"
                }
              ]
            },
            "documentation": {
              "id": 2371,
              "nodeType": "StructuredDocumentation",
              "src": "17045:40:50",
              "text": "@notice Length of arrProposals array"
            },
            "functionSelector": "4e9d5472",
            "id": 2380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrProposalsLength",
            "nameLocation": "17099:21:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17120:2:50"
            },
            "returnParameters": {
              "id": 2375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "17146:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17146:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17144:11:50"
            },
            "scope": 2403,
            "src": "17090:108:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2390,
              "nodeType": "Block",
              "src": "17377:36:50",
              "statements": [
                {
                  "expression": {
                    "id": 2388,
                    "name": "arrProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1029,
                    "src": "17394:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$9744_storage_$dyn_storage",
                      "typeString": "struct strProposal storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2387,
                  "id": 2389,
                  "nodeType": "Return",
                  "src": "17387:19:50"
                }
              ]
            },
            "documentation": {
              "id": 2381,
              "nodeType": "StructuredDocumentation",
              "src": "17204:95:50",
              "text": "@notice The list of all Proposals\n @return arrProposals the array with all proposals"
            },
            "functionSelector": "b4c62192",
            "id": 2391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetProposalList",
            "nameLocation": "17313:15:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17328:2:50"
            },
            "returnParameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "17354:20:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strProposal_$9744_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strProposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2384,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2383,
                        "name": "strProposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9744,
                        "src": "17354:11:50"
                      },
                      "referencedDeclaration": 9744,
                      "src": "17354:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strProposal_$9744_storage_ptr",
                        "typeString": "struct strProposal"
                      }
                    },
                    "id": 2385,
                    "nodeType": "ArrayTypeName",
                    "src": "17354:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strProposal_$9744_storage_$dyn_storage_ptr",
                      "typeString": "struct strProposal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17352:24:50"
            },
            "scope": 2403,
            "src": "17304:109:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2401,
              "nodeType": "Block",
              "src": "17605:39:50",
              "statements": [
                {
                  "expression": {
                    "id": 2399,
                    "name": "arrDataPropUser",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1033,
                    "src": "17622:15:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataUser_$9758_storage_$dyn_storage",
                      "typeString": "struct strDataUser storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2398,
                  "id": 2400,
                  "nodeType": "Return",
                  "src": "17615:22:50"
                }
              ]
            },
            "documentation": {
              "id": 2392,
              "nodeType": "StructuredDocumentation",
              "src": "17419:105:50",
              "text": "@notice Get complete array of arrDataPropUser\n @return arrDataPropUser the array with all data"
            },
            "functionSelector": "29647ee5",
            "id": 2402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetArrDataPropUser",
            "nameLocation": "17538:18:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17556:2:50"
            },
            "returnParameters": {
              "id": 2398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2397,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2402,
                  "src": "17582:20:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_strDataUser_$9758_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct strDataUser[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2395,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2394,
                        "name": "strDataUser",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9758,
                        "src": "17582:11:50"
                      },
                      "referencedDeclaration": 9758,
                      "src": "17582:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strDataUser_$9758_storage_ptr",
                        "typeString": "struct strDataUser"
                      }
                    },
                    "id": 2396,
                    "nodeType": "ArrayTypeName",
                    "src": "17582:13:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_strDataUser_$9758_storage_$dyn_storage_ptr",
                      "typeString": "struct strDataUser[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17580:24:50"
            },
            "scope": 2403,
            "src": "17529:115:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2404,
        "src": "327:17319:50",
        "usedErrors": []
      }
    ],
    "src": "32:17614:50"
  },
  "bytecode": "60806040523480156200001157600080fd5b506200001c62000022565b620000f1565b60c554600160a81b900460ff1615620000915760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60c55460ff600160a01b90910481161015620000ef5760c5805460ff60a01b191660ff60a01b17905560405160ff81527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612c3780620001016000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80635f3d99b311610151578063a693649a116100c3578063cada7f1911610087578063cada7f19146105e6578063cb85669c146105f9578063de5ab14e14610621578063e68777d714610634578063e810a58e1461063d578063f00d62741461064657600080fd5b8063a693649a1461054e578063b4c6219214610556578063baa4d5e91461056b578063c2b3aa08146105b1578063c347d2fd146105c457600080fd5b806381cf22d81161011557806381cf22d8146104d9578063860228fd146104ec5780639360bfad1461050c5780639c630a881461051f578063a0a625f914610528578063a1c89c9d1461053b57600080fd5b80635f3d99b31461045f5780636285e98c146104805780636c2f34e71461049357806370ff918c146104a65780637c638548146104c657600080fd5b80632266e1bc116101ea5780633a70693d116101ae5780633a70693d146103e75780634e9d5472146103fa57806350f7308a1461040257806353d1ee2d1461042257806359ca2d03146104375780635de58f601461044c57600080fd5b80632266e1bc1461037557806322b4081c1461038857806329647ee5146103ac5780632a57ef84146103c157806331a0afa7146103d457600080fd5b8063152de3b91161023c578063152de3b9146102f95780631707ace81461030c57806319a50f491461032e5780631d5fd3ca146103375780631f2e1339146103405780631f50dd271461036257600080fd5b806304f17a9b14610279578063052f9b0a1461029f57806310790717146102ca57806312eab7ff146102dd5780631343e9a5146102f0575b600080fd5b61028c610287366004611dd0565b610653565b6040519081526020015b60405180910390f35b60c4546102b2906001600160a01b031681565b6040516001600160a01b039091168152602001610296565b6022546102b2906001600160a01b031681565b61028c6102eb366004611e30565b610781565b61028c60055481565b61028c610307366004611ecc565b610855565b61031f61031a366004611f3f565b61092b565b60405161029693929190611fb0565b61028c60025481565b61028c60625481565b60005461035290610100900460ff1681565b6040519015158152602001610296565b60c5546102b2906001600160a01b031681565b61028c610383366004611dd0565b6109f6565b61039b610396366004611f3f565b610aca565b604051610296959493929190611fe6565b6103b4610ba5565b6040516102969190612029565b61028c6103cf3660046120b7565b610cbe565b61028c6103e2366004612132565b610df5565b61028c6103f5366004611f3f565b610f32565b60835461028c565b61028c6104103660046121e5565b60a36020526000908152604090205481565b610435610430366004612316565b610f53565b005b61043f611115565b6040516102969190612419565b61028c61045a36600461242c565b6111a3565b61047261046d366004611f3f565b6112d7565b60405161029692919061247b565b6024546102b2906001600160a01b031681565b60c2546102b2906001600160a01b031681565b61028c6104b43660046121e5565b60a26020526000908152604090205481565b61028c6104d4366004611dd0565b611443565b6104356104e736600461249e565b611517565b61028c6104fa3660046121e5565b60a46020526000908152604090205481565b60c3546102b2906001600160a01b031681565b61028c60045481565b60c1546102b2906001600160a01b031681565b6104356105493660046124eb565b611637565b60825461028c565b61055e6116ff565b60405161029691906125fa565b61057e610579366004611f3f565b61187d565b604080516001600160a01b0395861681526020810194909452918416918301919091529091166060820152608001610296565b6104356105bf3660046126c1565b6118c5565b6105d76105d2366004612703565b6119eb565b60405161029693929190612733565b6023546102b2906001600160a01b031681565b61060c610607366004611f3f565b611aa8565b6040516102969998979695949392919061275f565b61028c61062f3660046127c6565b611ba1565b61028c60035481565b61028c60065481565b6000546103529060ff1681565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd919061281b565b90506000816001600160a01b0316878787876040516024016106f29493929190612838565b60408051601f198184030181529181526020820180516001600160e01b03166304f17a9b60e01b179052516107279190612870565b600060405180830381855af49150503d8060008114610762576040519150601f19603f3d011682016040523d82523d6000602084013e610767565b606091505b505090506040513d806000833e8261077d578082fd5b8082f35b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb919061281b565b90506000816001600160a01b031687878787604051602401610820949392919061288c565b60408051601f198184030181529181526020820180516001600160e01b03166312eab7ff60e01b179052516107279190612870565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf919061281b565b90506000816001600160a01b031688888888886040516024016108f69594939291906128df565b60408051601f198184030181529181526020820180516001600160e01b031663152de3b960e01b179052516107279190612870565b6084818154811061093b57600080fd5b6000918252602090912060039091020180546001820180546001600160a01b0390921693509061096a90612924565b80601f016020809104026020016040519081016040528092919081815260200182805461099690612924565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b5050506002909301549192505060ff1683565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a70919061281b565b90506000816001600160a01b031687878787604051602401610a959493929190612838565b60408051601f198184030181529181526020820180516001600160e01b0316630899b86f60e21b179052516107279190612870565b60828181548110610ada57600080fd5b6000918252602090912060049091020180546001820180546001600160a01b03909216935090610b0990612924565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3590612924565b8015610b825780601f10610b5757610100808354040283529160200191610b82565b820191906000526020600020905b815481529060010190602001808311610b6557829003601f168201915b50505050600283015460039093015491929160ff80821692506101009091041685565b60606084805480602002602001604051908101604052809291908181526020016000905b82821015610cb557600084815260209081902060408051606081019091526003850290910180546001600160a01b031682526001810180549293919291840191610c1290612924565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3e90612924565b8015610c8b5780601f10610c6057610100808354040283529160200191610c8b565b820191906000526020600020905b815481529060010190602001808311610c6e57829003601f168201915b50505091835250506002919091015460ff1615156020918201529082526001929092019101610bc9565b50505050905090565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d38919061281b565b90506000816001600160a01b031687878787604051602401610d5d949392919061295f565b60408051601f198184030181529181526020820180516001600160e01b0316630a95fbe160e21b17905251610d929190612870565b600060405180830381855af49150503d8060008114610dcd576040519150601f19603f3d011682016040523d82523d6000602084013e610dd2565b606091505b505090506040513d806000833e82610de8578082fd5b5051979650505050505050565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6f919061281b565b90506000816001600160a01b0316898989898989604051602401610e989695949392919061299b565b60408051601f198184030181529181526020820180516001600160e01b03166331a0afa760e01b17905251610ecd9190612870565b600060405180830381855af49150503d8060008114610f08576040519150601f19603f3d011682016040523d82523d6000602084013e610f0d565b606091505b505090506040513d806000833e82610f23578082fd5b50519998505050505050505050565b60868181548110610f4257600080fd5b600091825260209091200154905081565b60c554600190600160a81b900460ff16158015610f7e575060c55460ff808316600160a01b90920416105b610fe55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b60c5805460ff60a81b1960ff8416600160a01b021661ffff60a01b1990911617600160a81b17905582516040516000916001600160a01b03169061103b908c908c908c908c908c908c908c908c90602401612a70565b60408051601f198184030181529181526020820180516001600160e01b031663864cf15560e01b179052516110709190612870565b600060405180830381855af49150503d80600081146110ab576040519150601f19603f3d011682016040523d82523d6000602084013e6110b0565b606091505b50509050806110c6576040513d806000833e8082fd5b5060c5805460ff60a81b1916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050505050565b6042805461112290612924565b80601f016020809104026020016040519081016040528092919081815260200182805461114e90612924565b801561119b5780601f106111705761010080835404028352916020019161119b565b820191906000526020600020905b81548152906001019060200180831161117e57829003601f168201915b505050505081565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121d919061281b565b90506000816001600160a01b031686868660405160240161124093929190612b08565b60408051601f198184030181529181526020820180516001600160e01b03166302ef2c7b60e51b179052516112759190612870565b600060405180830381855af49150503d80600081146112b0576040519150601f19603f3d011682016040523d82523d6000602084013e6112b5565b606091505b505090506040513d806000833e826112cb578082fd5b50519695505050505050565b60006060600060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015611330573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611354919061281b565b90506000816001600160a01b03168560405160240161137591815260200190565b60408051601f198184030181529181526020820180516001600160e01b0316635f3d99b360e01b179052516113aa9190612870565b600060405180830381855af49150503d80600081146113e5576040519150601f19603f3d011682016040523d82523d6000602084013e6113ea565b606091505b5050905080611400576040513d806000833e8082fd5b60016040518060400160405280601981526020017f537563636573732065786563757465642070726f706f73616c00000000000000815250935093505050915091565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015611499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bd919061281b565b90506000816001600160a01b0316878787876040516024016114e29493929190612838565b60408051601f198184030181529181526020820180516001600160e01b0316630f8c70a960e31b17905251610d929190612870565b60c1546040805163529382d560e01b815290516000926001600160a01b03169163529382d59160048083019260209291908290030181865afa158015611561573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611585919061281b565b90506000816001600160a01b031684846040516024016115a692919061247b565b60408051601f198184030181529181526020820180516001600160e01b0316631039e45b60e31b179052516115db9190612870565b600060405180830381855af49150503d8060008114611616576040519150601f19603f3d011682016040523d82523d6000602084013e61161b565b606091505b5050905080611631576040513d806000833e8082fd5b50505050565b60c1546040805163a327ab6960e01b815290516000926001600160a01b03169163a327ab699160048083019260209291908290030181865afa158015611681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a5919061281b565b90506000816001600160a01b0316868686866040516024016116ca9493929190612b31565b60408051601f198184030181529181526020820180516001600160e01b031663a1c89c9d60e01b179052516107279190612870565b60606083805480602002602001604051908101604052809291908181526020016000905b82821015610cb55760008481526020908190206040805161012081019091526007850290910180546001600160a01b03811683529192909190830190600160a01b900460ff16600881111561177a5761177a6125c2565b600881111561178b5761178b6125c2565b815260200160018201805461179f90612924565b80601f01602080910402602001604051908101604052809291908181526020018280546117cb90612924565b80156118185780601f106117ed57610100808354040283529160200191611818565b820191906000526020600020905b8154815290600101906020018083116117fb57829003601f168201915b505050918352505060028201546020808301919091526003830154604083015260048301546060830152600583015460ff8082161515608085015261010090910416151560a083015260069092015460c0909101529082526001929092019101611723565b6085818154811061188d57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b03928316945090928216911684565b60c1546040805163a327ab6960e01b815290516000926001600160a01b03169163a327ab699160048083019260209291908290030181865afa15801561190f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611933919061281b565b90506000816001600160a01b0316868686866040516024016119589493929190612b9b565b60408051601f198184030181529181526020820180516001600160e01b0316631856754160e31b1790525161198d9190612870565b600060405180830381855af49150503d80600081146119c8576040519150601f19603f3d011682016040523d82523d6000602084013e6119cd565b606091505b50509050806119e3576040513d806000833e8082fd5b505050505050565b60a56020908152600092835260408084209091529082529020805460018201805460ff8084169461010090940416929190611a2590612924565b80601f0160208091040260200160405190810160405280929190818152602001828054611a5190612924565b8015611a9e5780601f10611a7357610100808354040283529160200191611a9e565b820191906000526020600020905b815481529060010190602001808311611a8157829003601f168201915b5050505050905083565b60838181548110611ab857600080fd5b6000918252602090912060079091020180546001820180546001600160a01b0383169450600160a01b90920460ff169291611af290612924565b80601f0160208091040260200160405190810160405280929190818152602001828054611b1e90612924565b8015611b6b5780601f10611b4057610100808354040283529160200191611b6b565b820191906000526020600020905b815481529060010190602001808311611b4e57829003601f168201915b505050600284015460038501546004860154600587015460069097015495969295919450925060ff808316926101009004169089565b60008060c160009054906101000a90046001600160a01b03166001600160a01b031663a327ab696040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1b919061281b565b90506000816001600160a01b03168888888888604051602401611c42959493929190612bce565b60408051601f198184030181529181526020820180516001600160e01b0316636f2d58a760e11b17905251611c779190612870565b600060405180830381855af49150503d8060008114611cb2576040519150601f19603f3d011682016040523d82523d6000602084013e611cb7565b606091505b505090506040513d806000833e82611ccd578082fd5b505198975050505050505050565b6001600160a01b0381168114611cf057600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b0381118282101715611d2b57611d2b611cf3565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611d5957611d59611cf3565b604052919050565b600082601f830112611d7257600080fd5b81356001600160401b03811115611d8b57611d8b611cf3565b611d9e601f8201601f1916602001611d31565b818152846020838601011115611db357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215611de657600080fd5b8435611df181611cdb565b93506020850135925060408501356001600160401b03811115611e1357600080fd5b611e1f87828801611d61565b949793965093946060013593505050565b60008060008060808587031215611e4657600080fd5b84356001600160401b0380821115611e5d57600080fd5b611e6988838901611d61565b95506020870135915080821115611e7f57600080fd5b611e8b88838901611d61565b945060408701359150611e9d82611cdb565b90925060608601359080821115611eb357600080fd5b50611ec087828801611d61565b91505092959194509250565b600080600080600060a08688031215611ee457600080fd5b8535611eef81611cdb565b94506020860135611eff81611cdb565b93506040860135925060608601356001600160401b03811115611f2157600080fd5b611f2d88828901611d61565b95989497509295608001359392505050565b600060208284031215611f5157600080fd5b5035919050565b60005b83811015611f73578181015183820152602001611f5b565b838111156116315750506000910152565b60008151808452611f9c816020860160208601611f58565b601f01601f19169290920160200192915050565b6001600160a01b0384168152606060208201819052600090611fd490830185611f84565b90508215156040830152949350505050565b6001600160a01b038616815260a06020820181905260009061200a90830187611f84565b6040830195909552509115156060830152151560809091015292915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156120a957888303603f19018552815180516001600160a01b031684528781015160608986018190529061208982870182611f84565b928901511515958901959095525094870194925090860190600101612050565b509098975050505050505050565b600080600080608085870312156120cd57600080fd5b84356120d881611cdb565b935060208501356001600160401b03808211156120f457600080fd5b61210088838901611d61565b9450604087013593506060870135915080821115611eb357600080fd5b8035801515811461212d57600080fd5b919050565b60008060008060008060c0878903121561214b57600080fd5b863561215681611cdb565b955060208701356001600160401b038082111561217257600080fd5b61217e8a838b01611d61565b9650604089013591508082111561219457600080fd5b6121a08a838b01611d61565b95506121ae60608a0161211d565b94506080890135935060a08901359150808211156121cb57600080fd5b506121d889828a01611d61565b9150509295509295509295565b6000602082840312156121f757600080fd5b813561220281611cdb565b9392505050565b600082601f83011261221a57600080fd5b60405160a081018181106001600160401b038211171561223c5761223c611cf3565b6040528060a084018581111561225157600080fd5b845b8181101561227457803561226681611cdb565b835260209283019201612253565b509195945050505050565b60006001600160401b0382111561229857612298611cf3565b5060051b60200190565b600082601f8301126122b357600080fd5b813560206122c86122c38361227f565b611d31565b82815260059290921b840181019181810190868411156122e757600080fd5b8286015b8481101561230b5780356122fe81611cdb565b83529183019183016122eb565b509695505050505050565b6000806000806000806000806101c0898b03121561233357600080fd5b883561233e81611cdb565b97506020898101356001600160401b038082111561235b57600080fd5b6123678d838e01611d61565b995061237560408d0161211d565b985061238360608d0161211d565b975060808c013596508c60bf8d011261239b57600080fd5b6123a3611d09565b9150816101008d018e8111156123b857600080fd5b60a08e015b818110156123d457803585529385019385016123bd565b508197506123e28f82612209565b965050506101a08c01359250808311156123fb57600080fd5b50506124098b828c016122a2565b9150509295985092959890939650565b6020815260006122026020830184611f84565b60008060006060848603121561244157600080fd5b8335925060208401356001600160401b0381111561245e57600080fd5b61246a86828701611d61565b925050604084013590509250925092565b82151581526040602082015260006124966040830184611f84565b949350505050565b600080604083850312156124b157600080fd5b6124ba8361211d565b915060208301356001600160401b038111156124d557600080fd5b6124e185828601611d61565b9150509250929050565b6000806000806080858703121561250157600080fd5b84356001600160401b038082111561251857600080fd5b818701915087601f83011261252c57600080fd5b8135602061253c6122c38361227f565b82815260059290921b8401810191818101908b84111561255b57600080fd5b948201945b8386101561257957853582529482019490820190612560565b9850612588905089820161211d565b9650505060408701359150808211156125a057600080fd5b6125ac88838901611d61565b93506060870135915080821115611eb357600080fd5b634e487b7160e01b600052602160045260246000fd5b600981106125f657634e487b7160e01b600052602160045260246000fd5b9052565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156120a957888303603f19018552815180516001600160a01b03168452610120888201516126548a8701826125d8565b5087820151818987015261266a82870182611f84565b606084810151908801526080808501519088015260a0808501519088015260c08085015115159088015260e08085015115159088015261010093840151939096019290925250509386019390860190600101612621565b600080600080608085870312156126d757600080fd5b843593506126e76020860161211d565b925060408501356001600160401b03808211156125a057600080fd5b6000806040838503121561271657600080fd5b82359150602083013561272881611cdb565b809150509250929050565b831515815282151560208201526060604082015260006127566060830184611f84565b95945050505050565b6001600160a01b038a168152600061012061277d602084018c6125d8565b80604084015261278f8184018b611f84565b60608401999099525050608081019590955260a085019390935290151560c0840152151560e0830152610100909101529392505050565b600080600080600060a086880312156127de57600080fd5b85356127e981611cdb565b945060208601359350604086013561280081611cdb565b925060608601356001600160401b03811115611f2157600080fd5b60006020828403121561282d57600080fd5b815161220281611cdb565b60018060a01b038516815283602082015260806040820152600061285f6080830185611f84565b905082606083015295945050505050565b60008251612882818460208701611f58565b9190910192915050565b60808152600061289f6080830187611f84565b82810360208401526128b18187611f84565b6001600160a01b0386166040850152838103606085015290506128d48185611f84565b979650505050505050565b6001600160a01b038681168252851660208201526040810184905260a06060820181905260009061291290830185611f84565b90508260808301529695505050505050565b600181811c9082168061293857607f821691505b6020821081141561295957634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b038516815260806020820181905260009061298390830186611f84565b84604084015282810360608401526128d48185611f84565b6001600160a01b038716815260c0602082018190526000906129bf90830188611f84565b82810360408401526129d18188611f84565b9050851515606084015284608084015282810360a08401526129f38185611f84565b9998505050505050505050565b8060005b60058110156116315781516001600160a01b0316845260209384019390910190600101612a04565b600081518084526020808501945080840160005b83811015612a655781516001600160a01b031687529582019590820190600101612a40565b509495945050505050565b6001600160a01b03891681526101c0602080830182905260009190612a978483018c611f84565b91508915156040850152881515606085015287608085015260a084018760005b6003811015612ad457815183529183019190830190600101612ab7565b50505050612ae6610100840186612a00565b8281036101a0840152612af98185612a2c565b9b9a5050505050505050505050565b838152606060208201526000612b216060830185611f84565b9050826040830152949350505050565b6080808252855190820181905260009060209060a0840190828901845b82811015612b6a57815184529284019290840190600101612b4e565b505050861515828501528381036040850152612b868187611f84565b91505082810360608401526128d48185611f84565b8481528315156020820152608060408201526000612bbc6080830185611f84565b82810360608401526128d48185611f84565b6001600160a01b038681168252602082018690528416604082015260a06060820181905260009061291290830185611f8456fea2646970667358221220f2b6d9a0bbb4c99016e7fa92f3ee9c5633d09499a3dd29b484b5d8d676f4ffb464736f6c634300080c0033",
  "bytecodeSha1": "0dd782d998c5da43cc69e255a4ca2bdcd63384e9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CLHouse",
  "coverageMap": {
    "branches": {
      "18": {
        "CLHouse.Init": {
          "13": [
            4396,
            4409,
            false
          ]
        }
      },
      "47": {},
      "48": {},
      "50": {
        "CLHouse.AcceptRejectInvitation": {
          "11": [
            12788,
            12801,
            false
          ]
        },
        "CLHouse.ExecProp": {
          "10": [
            3100,
            3113,
            false
          ]
        },
        "CLHouse.Init": {
          "9": [
            2040,
            2053,
            false
          ]
        },
        "CLHouse.VoteProposal": {
          "12": [
            4268,
            4281,
            false
          ]
        }
      }
    },
    "statements": {
      "18": {},
      "47": {},
      "48": {},
      "50": {
        "CLHouse.AcceptRejectInvitation": {
          "6": [
            12783,
            13015
          ]
        },
        "CLHouse.ExecProp": {
          "4": [
            3095,
            3327
          ],
          "5": [
            3337,
            3382
          ]
        },
        "CLHouse.GetArrDataPropUser": {
          "2": [
            17615,
            17637
          ]
        },
        "CLHouse.GetArrProposalsLength": {
          "0": [
            17165,
            17191
          ]
        },
        "CLHouse.GetArrUsersLength": {
          "1": [
            17010,
            17032
          ]
        },
        "CLHouse.GetProposalList": {
          "7": [
            17387,
            17406
          ]
        },
        "CLHouse.Init": {
          "3": [
            2035,
            2267
          ]
        },
        "CLHouse.VoteProposal": {
          "8": [
            4263,
            4495
          ]
        }
      }
    }
  },
  "dependencies": [
    "CLStorage",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Initializable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "327:17319:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13999:900;;;;;;:::i;:::-;;:::i;:::-;;;2099:25:62;;;2087:2;2072:18;13999:900:50;;;;;;;;1606:23:47;;;;;-1:-1:-1;;;;;1606:23:47;;;;;;-1:-1:-1;;;;;2314:32:62;;;2296:51;;2284:2;2269:18;1606:23:47;2135:218:62;673:21:47;;;;;-1:-1:-1;;;;;673:21:47;;;11264:902:50;;;;;;:::i;:::-;;:::i;567:30:47:-;;;;;;13027:966:50;;;;;;:::i;:::-;;:::i;996:36:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;462:23::-;;;;;;852:37;;;;;;410:21;;;;;;;;;;;;;;;5856:14:62;;5849:22;5831:41;;5819:2;5804:18;410:21:47;5691:187:62;1635:27:47;;;;;-1:-1:-1;;;;;1635:27:47;;;14905:896:50;;;;;;:::i;:::-;;:::i;926:25:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;17529:115:50:-;;;:::i;:::-;;;;;;;:::i;6237:907::-;;;;;;:::i;:::-;;:::i;4937:1024::-;;;;;;:::i;:::-;;:::i;1088:44:47:-;;;;;;:::i;:::-;;:::i;17090:108:50:-;17172:12;:19;17090:108;;1220:54:47;;;;;;:::i;:::-;;;;;;;;;;;;;;1149:1124:50;;;;;;:::i;:::-;;:::i;:::-;;792:24:47;;;:::i;:::-;;;;;;;:::i;10035:854:50:-;;;;;;:::i;:::-;;:::i;2628:761::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;728:27:47:-;;;;;-1:-1:-1;;;;;728:27:47;;;1549:23;;;;;-1:-1:-1;;;;;1549:23:47;;;1168:46;;;;;;:::i;:::-;;;;;;;;;;;;;;7489:884:50;;;;;;:::i;:::-;;:::i;12290:731::-;;;;;;:::i;:::-;;:::i;1300:48:47:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1578:22;;;;;-1:-1:-1;;;;;1578:22:47;;;523:38;;;;;;1515:28;;;;;-1:-1:-1;;;;;1515:28:47;;;16037:855:50;;;;;;:::i;:::-;;:::i;16939:100::-;17017:8;:15;16939:100;;17304:109;;;:::i;:::-;;;;;;;:::i;1038:44:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;18762:15:62;;;18744:34;;18809:2;18794:18;;18787:34;;;;18857:15;;;18837:18;;;18830:43;;;;18909:15;;;18904:2;18889:18;;18882:43;18693:3;18678:19;1038:44:47;18475:456:62;3675:826:50;;;;;;:::i;:::-;;:::i;1374:67:47:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;700:22::-;;;;;-1:-1:-1;;;;;700:22:47;;;957:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;8718:956:50:-;;;;;;:::i;:::-;;:::i;491:26:47:-;;;;;;603:33;;;;;;380:24;;;;;;;;;13999:900:50;14187:7;14211:21;14235:10;;;;;;;;;-1:-1:-1;;;;;14235:10:50;-1:-1:-1;;;;;14235:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14211:50;;14330:18;14354:13;-1:-1:-1;;;;;14354:26:50;14501:12;14531:13;14562:12;14592:10;14394:222;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14394:222:50;;;;;;;;;;;;;;-1:-1:-1;;;;;14394:222:50;-1:-1:-1;;;14394:222:50;;;14354:272;;;14394:222;14354:272;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14329:297;;;14677:4;14671:11;14707:16;14759:4;14756:1;14751:3;14736:28;14788:13;14777:76;;14834:4;14829:3;14822:17;14777:76;14878:4;14873:3;14866:17;11264:902;11460:7;11484:21;11508:10;;;;;;;;;-1:-1:-1;;;;;11508:10:50;-1:-1:-1;;;;;11508:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11484:50;;11603:18;11627:13;-1:-1:-1;;;;;11627:26:50;11775:5;11798:12;11828:13;11859:10;11667:216;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11667:216:50;;;;;;;;;;;;;;-1:-1:-1;;;;;11667:216:50;-1:-1:-1;;;11667:216:50;;;11627:266;;;11667:216;11627:266;:::i;13027:966::-;13244:7;13268:21;13292:10;;;;;;;;;-1:-1:-1;;;;;13292:10:50;-1:-1:-1;;;;;13292:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13268:50;;13387:18;13411:13;-1:-1:-1;;;;;13411:26:50;13566:12;13596:11;13625:13;13656:12;13686:10;13451:259;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13451:259:50;;;;;;;;;;;;;;-1:-1:-1;;;;;13451:259:50;-1:-1:-1;;;13451:259:50;;;13411:309;;;13451:259;13411:309;:::i;996:36:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;996:36:47;;;;-1:-1:-1;996:36:47;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;996:36:47;;;;;;;-1:-1:-1;;996:36:47;;;:::o;14905:896:50:-;15091:7;15115:21;15139:10;;;;;;;;;-1:-1:-1;;;;;15139:10:50;-1:-1:-1;;;;;15139:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15115:50;;15234:18;15258:13;-1:-1:-1;;;;;15258:26:50;15404:11;15433:13;15464:12;15494:10;15298:220;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15298:220:50;;;;;;;;;;;;;;-1:-1:-1;;;;;15298:220:50;-1:-1:-1;;;15298:220:50;;;15258:270;;;15298:220;15258:270;:::i;926:25:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;926:25:47;;;;-1:-1:-1;926:25:47;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;926:25:47;;;;;;;;;;;;;;;;;-1:-1:-1;926:25:47;;;;;;:::o;17529:115:50:-;17582:20;17622:15;17615:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17615:22:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17615:22:50;;;-1:-1:-1;;17615:22:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17529:115;:::o;6237:907::-;6427:14;6458:21;6482:10;;;;;;;;;-1:-1:-1;;;;;6482:10:50;-1:-1:-1;;;;;6482:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6458:50;;6577:18;6601:13;-1:-1:-1;;;;;6601:26:50;6747:11;6776:12;6806:10;6834;6641:217;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6641:217:50;;;;;;;;;;;;;;-1:-1:-1;;;;;6641:217:50;-1:-1:-1;;;6641:217:50;;;6601:267;;;6641:217;6601:267;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6576:292;;;6919:4;6913:11;6949:16;7001:4;6998:1;6993:3;6978:28;7030:13;7019:76;;7076:4;7071:3;7064:17;7019:76;-1:-1:-1;7118:10:50;;6237:907;-1:-1:-1;;;;;;;6237:907:50:o;4937:1024::-;5181:14;5212:21;5236:10;;;;;;;;;-1:-1:-1;;;;;5236:10:50;-1:-1:-1;;;;;5236:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5212:50;;5331:18;5355:13;-1:-1:-1;;;;;5355:26:50;5513:11;5542:5;5565:12;5595:10;5623;5651;5395:280;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5395:280:50;;;;;;;;;;;;;;-1:-1:-1;;;;;5395:280:50;-1:-1:-1;;;5395:280:50;;;5355:330;;;5395:280;5355:330;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5330:355;;;5736:4;5730:11;5766:16;5818:4;5815:1;5810:3;5795:28;5847:13;5836:76;;5893:4;5888:3;5881:17;5836:76;-1:-1:-1;5935:10:50;;4937:1024;-1:-1:-1;;;;;;;;;4937:1024:50:o;1088:44:47:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1088:44:47;:::o;1149:1124:50:-;4396:13:18;;247:1:48;;-1:-1:-1;;;4396:13:18;;;;4395:14;:40;;;;-1:-1:-1;4413:12:18;;:22;;;;-1:-1:-1;;;4413:12:18;;;;:22;4395:40;4387:99;;;;-1:-1:-1;;;4387:99:18;;26133:2:62;4387:99:18;;;26115:21:62;26172:2;26152:18;;;26145:30;26211:34;26191:18;;;26184:62;-1:-1:-1;;;26262:18:62;;;26255:44;26316:19;;4387:99:18;;;;;;;;4496:12;:22;;-1:-1:-1;;;;4496:22:18;;;-1:-1:-1;;;4496:22:18;4528:20;-1:-1:-1;;;;4528:20:18;;;;-1:-1:-1;;;4528:20:18;;;1586:41:50;;1654:360:::1;::::0;-1:-1:-1;;;;;;;1586:54:50::1;::::0;1654:360:::1;::::0;1797:6;;1822:10;;1850:13;;1881:10;;1909:9;;1936;;1586:4;;1985:15;;1654:360:::1;;;:::i;:::-;;::::0;;-1:-1:-1;;1654:360:50;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1654:360:50::1;-1:-1:-1::0;;;1654:360:50::1;::::0;;1586:438;::::1;::::0;1654:360;1586:438:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:463;;;2040:13;2035:232;;2114:4;2108:11;2148:16;2204:4;2201:1;2196:3;2181:28;2238:4;2233:3;2226:17;2035:232;-1:-1:-1::0;4569:13:18;:21;;-1:-1:-1;;;;4569:21:18;;;4605:20;;28769:4:62;28757:17;;28739:36;;4605:20:18;;28727:2:62;28712:18;4605:20:18;;;;;;;1149:1124:50;;;;;;;;;:::o;792:24:47:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10035:854:50:-;10199:14;10230:21;10254:10;;;;;;;;;-1:-1:-1;;;;;10254:10:50;-1:-1:-1;;;;;10254:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10230:50;;10349:18;10373:13;-1:-1:-1;;;;;10373:26:50;10511:20;10549:12;10579:10;10413:190;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10413:190:50;;;;;;;;;;;;;;-1:-1:-1;;;;;10413:190:50;-1:-1:-1;;;10413:190:50;;;10373:240;;;10413:190;10373:240;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10348:265;;;10664:4;10658:11;10694:16;10746:4;10743:1;10738:3;10723:28;10775:13;10764:76;;10821:4;10816:3;10809:17;10764:76;-1:-1:-1;10863:10:50;;10035:854;-1:-1:-1;;;;;;10035:854:50:o;2628:761::-;2721:11;2746:21;2792;2816:10;;;;;;;;;-1:-1:-1;;;;;2816:10:50;-1:-1:-1;;;;;2816:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2792:50;;2911:18;2935:13;-1:-1:-1;;;;;2935:26:50;3053:7;2975:99;;;;;;2099:25:62;;2087:2;2072:18;;1953:177;2975:99:50;;;;-1:-1:-1;;2975:99:50;;;;;;;;;;;;;;-1:-1:-1;;;;;2975:99:50;-1:-1:-1;;;2975:99:50;;;2935:149;;;2975:99;2935:149;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2910:174;;;3100:13;3095:232;;3174:4;3168:11;3208:16;3264:4;3261:1;3256:3;3241:28;3298:4;3293:3;3286:17;3095:232;3346:4;3337:45;;;;;;;;;;;;;;;;;;;;;;;2628:761;;;:::o;7489:884::-;7664:14;7695:21;7719:10;;;;;;;;;-1:-1:-1;;;;;7719:10:50;-1:-1:-1;;;;;7719:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7695:50;;7814:18;7838:13;-1:-1:-1;;;;;7838:26:50;7981:3;8002:13;8033:12;8063:10;7878:209;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7878:209:50;;;;;;;;;;;;;;-1:-1:-1;;;;;7878:209:50;-1:-1:-1;;;7878:209:50;;;7838:259;;;7878:209;7838:259;:::i;12290:731::-;12446:10;;:30;;;-1:-1:-1;;;12446:30:50;;;;12418:25;;-1:-1:-1;;;;;12446:10:50;;:28;;:30;;;;;;;;;;;;;;:10;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12418:58;;12545:18;12569:17;-1:-1:-1;;;;;12569:30:50;12709:11;12738:10;12613:149;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12613:149:50;;;;;;;;;;;;;;-1:-1:-1;;;;;12613:149:50;-1:-1:-1;;;12613:149:50;;;12569:203;;;12613:149;12569:203;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12544:228;;;12788:13;12783:232;;12862:4;12856:11;12896:16;12952:4;12949:1;12944:3;12929:28;12986:4;12981:3;12974:17;12783:232;12408:613;;12290:731;;:::o;16037:855::-;16244:10;;:26;;;-1:-1:-1;;;16244:26:50;;;;16220:21;;-1:-1:-1;;;;;16244:10:50;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16220:50;;16339:18;16363:13;-1:-1:-1;;;;;16363:26:50;16502:7;16527:8;16553:14;16585:10;16403:206;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16403:206:50;;;;;;;;;;;;;;-1:-1:-1;;;;;16403:206:50;-1:-1:-1;;;16403:206:50;;;16363:256;;;16403:206;16363:256;:::i;17304:109::-;17354:20;17394:12;17387:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17387:19:50;;;;;;;;;;;;-1:-1:-1;;;17387:19:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17387:19:50;;;-1:-1:-1;;17387:19:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:44:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1038:44:47;;;;-1:-1:-1;1038:44:47;;;;;;;:::o;3675:826:50:-;3875:10;;:26;;;-1:-1:-1;;;3875:26:50;;;;3851:21;;-1:-1:-1;;;;;3875:10:50;;:24;;:26;;;;;;;;;;;;;;:10;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3851:50;;3970:18;3994:13;-1:-1:-1;;;;;3994:26:50;4135:7;4160:8;4186:14;4218:10;4034:208;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4034:208:50;;;;;;;;;;;;;;-1:-1:-1;;;;;4034:208:50;-1:-1:-1;;;4034:208:50;;;3994:258;;;4034:208;3994:258;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3969:283;;;4268:13;4263:232;;4342:4;4336:11;4376:16;4432:4;4429:1;4424:3;4409:28;4466:4;4461:3;4454:17;4263:232;3841:660;;3675:826;;;;:::o;1374:67:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;957:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;957:33:47;;;-1:-1:-1;;;;957:33:47;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;957:33:47;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;957:33:47;-1:-1:-1;957:33:47;;;;;;;;;;;:::o;8718:956:50:-;8925:14;8956:21;8980:10;;;;;;;;;-1:-1:-1;;;;;8980:10:50;-1:-1:-1;;;;;8980:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8956:50;;9075:18;9099:13;-1:-1:-1;;;;;9099:26:50;9252:3;9273:13;9304:12;9334;9364:10;9139:249;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9139:249:50;;;;;;;;;;;;;;-1:-1:-1;;;;;9139:249:50;-1:-1:-1;;;9139:249:50;;;9099:299;;;9139:249;9099:299;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9074:324;;;9449:4;9443:11;9479:16;9531:4;9528:1;9523:3;9508:28;9560:13;9549:76;;9606:4;9601:3;9594:17;9549:76;-1:-1:-1;9648:10:50;;8718:956;-1:-1:-1;;;;;;;;8718:956:50:o;14:131:62:-;-1:-1:-1;;;;;89:31:62;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:127::-;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:251;354:2;348:9;396:2;384:15;;-1:-1:-1;;;;;414:34:62;;450:22;;;411:62;408:88;;;476:18;;:::i;:::-;512:2;505:22;282:251;:::o;538:275::-;609:2;603:9;674:2;655:13;;-1:-1:-1;;651:27:62;639:40;;-1:-1:-1;;;;;694:34:62;;730:22;;;691:62;688:88;;;756:18;;:::i;:::-;792:2;785:22;538:275;;-1:-1:-1;538:275:62:o;818:531::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;968:6;955:20;-1:-1:-1;;;;;990:2:62;987:26;984:52;;;1016:18;;:::i;:::-;1060:55;1103:2;1084:13;;-1:-1:-1;;1080:27:62;1109:4;1076:38;1060:55;:::i;:::-;1140:2;1131:7;1124:19;1186:3;1179:4;1174:2;1166:6;1162:15;1158:26;1155:35;1152:55;;;1203:1;1200;1193:12;1152:55;1268:2;1261:4;1253:6;1249:17;1242:4;1233:7;1229:18;1216:55;1316:1;1291:16;;;1309:4;1287:27;1280:38;;;;1295:7;818:531;-1:-1:-1;;;818:531:62:o;1354:594::-;1450:6;1458;1466;1474;1527:3;1515:9;1506:7;1502:23;1498:33;1495:53;;;1544:1;1541;1534:12;1495:53;1583:9;1570:23;1602:31;1627:5;1602:31;:::i;:::-;1652:5;-1:-1:-1;1704:2:62;1689:18;;1676:32;;-1:-1:-1;1759:2:62;1744:18;;1731:32;-1:-1:-1;;;;;1775:30:62;;1772:50;;;1818:1;1815;1808:12;1772:50;1841;1883:7;1874:6;1863:9;1859:22;1841:50;:::i;:::-;1354:594;;;;-1:-1:-1;1831:60:62;;1938:2;1923:18;1910:32;;-1:-1:-1;;;1354:594:62:o;2675:878::-;2790:6;2798;2806;2814;2867:3;2855:9;2846:7;2842:23;2838:33;2835:53;;;2884:1;2881;2874:12;2835:53;2924:9;2911:23;-1:-1:-1;;;;;2994:2:62;2986:6;2983:14;2980:34;;;3010:1;3007;3000:12;2980:34;3033:50;3075:7;3066:6;3055:9;3051:22;3033:50;:::i;:::-;3023:60;;3136:2;3125:9;3121:18;3108:32;3092:48;;3165:2;3155:8;3152:16;3149:36;;;3181:1;3178;3171:12;3149:36;3204:52;3248:7;3237:8;3226:9;3222:24;3204:52;:::i;:::-;3194:62;;3306:2;3295:9;3291:18;3278:32;3265:45;;3319:31;3344:5;3319:31;:::i;:::-;3369:5;;-1:-1:-1;3427:2:62;3412:18;;3399:32;;3443:16;;;3440:36;;;3472:1;3469;3462:12;3440:36;;3495:52;3539:7;3528:8;3517:9;3513:24;3495:52;:::i;:::-;3485:62;;;2675:878;;;;;;;:::o;3558:736::-;3663:6;3671;3679;3687;3695;3748:3;3736:9;3727:7;3723:23;3719:33;3716:53;;;3765:1;3762;3755:12;3716:53;3804:9;3791:23;3823:31;3848:5;3823:31;:::i;:::-;3873:5;-1:-1:-1;3930:2:62;3915:18;;3902:32;3943:33;3902:32;3943:33;:::i;:::-;3995:7;-1:-1:-1;4049:2:62;4034:18;;4021:32;;-1:-1:-1;4104:2:62;4089:18;;4076:32;-1:-1:-1;;;;;4120:30:62;;4117:50;;;4163:1;4160;4153:12;4117:50;4186;4228:7;4219:6;4208:9;4204:22;4186:50;:::i;:::-;3558:736;;;;-1:-1:-1;3558:736:62;;4283:3;4268:19;4255:33;;3558:736;-1:-1:-1;;;3558:736:62:o;4299:180::-;4358:6;4411:2;4399:9;4390:7;4386:23;4382:32;4379:52;;;4427:1;4424;4417:12;4379:52;-1:-1:-1;4450:23:62;;4299:180;-1:-1:-1;4299:180:62:o;4484:258::-;4556:1;4566:113;4580:6;4577:1;4574:13;4566:113;;;4656:11;;;4650:18;4637:11;;;4630:39;4602:2;4595:10;4566:113;;;4697:6;4694:1;4691:13;4688:48;;;-1:-1:-1;;4732:1:62;4714:16;;4707:27;4484:258::o;4747:::-;4789:3;4827:5;4821:12;4854:6;4849:3;4842:19;4870:63;4926:6;4919:4;4914:3;4910:14;4903:4;4896:5;4892:16;4870:63;:::i;:::-;4987:2;4966:15;-1:-1:-1;;4962:29:62;4953:39;;;;4994:4;4949:50;;4747:258;-1:-1:-1;;4747:258:62:o;5106:398::-;-1:-1:-1;;;;;5305:32:62;;5287:51;;5374:2;5369;5354:18;;5347:30;;;-1:-1:-1;;5394:45:62;;5420:18;;5412:6;5394:45;:::i;:::-;5386:53;;5489:6;5482:14;5475:22;5470:2;5459:9;5455:18;5448:50;5106:398;;;;;;:::o;5883:553::-;-1:-1:-1;;;;;6132:32:62;;6114:51;;6152:3;6196:2;6181:18;;6174:31;;;-1:-1:-1;;6222:46:62;;6248:19;;6240:6;6222:46;:::i;:::-;6299:2;6284:18;;6277:34;;;;-1:-1:-1;6354:14:62;;6347:22;6342:2;6327:18;;6320:50;6414:14;6407:22;6401:3;6386:19;;;6379:51;6214:54;5883:553;-1:-1:-1;;5883:553:62:o;6441:1193::-;6641:4;6670:2;6710;6699:9;6695:18;6740:2;6729:9;6722:21;6763:6;6798;6792:13;6829:6;6821;6814:22;6855:2;6845:12;;6888:2;6877:9;6873:18;6866:25;;6950:2;6940:6;6937:1;6933:14;6922:9;6918:30;6914:39;6988:2;6980:6;6976:15;7009:1;7019:586;7033:6;7030:1;7027:13;7019:586;;;7098:22;;;-1:-1:-1;;7094:36:62;7082:49;;7154:13;;7226:9;;-1:-1:-1;;;;;7222:35:62;7207:51;;7297:11;;;7291:18;7190:4;7329:15;;;7322:27;;;7190:4;7376:48;7408:15;;;7291:18;7376:48;:::i;:::-;7481:11;;;7475:18;7468:26;7461:34;7444:15;;;7437:59;;;;-1:-1:-1;7583:12:62;;;;7362:62;-1:-1:-1;7548:15:62;;;;7055:1;7048:9;7019:586;;;-1:-1:-1;7622:6:62;;6441:1193;-1:-1:-1;;;;;;;;6441:1193:62:o;7639:746::-;7744:6;7752;7760;7768;7821:3;7809:9;7800:7;7796:23;7792:33;7789:53;;;7838:1;7835;7828:12;7789:53;7877:9;7864:23;7896:31;7921:5;7896:31;:::i;:::-;7946:5;-1:-1:-1;8002:2:62;7987:18;;7974:32;-1:-1:-1;;;;;8055:14:62;;;8052:34;;;8082:1;8079;8072:12;8052:34;8105:50;8147:7;8138:6;8127:9;8123:22;8105:50;:::i;:::-;8095:60;;8202:2;8191:9;8187:18;8174:32;8164:42;;8259:2;8248:9;8244:18;8231:32;8215:48;;8288:2;8278:8;8275:16;8272:36;;;8304:1;8301;8294:12;8390:160;8455:20;;8511:13;;8504:21;8494:32;;8484:60;;8540:1;8537;8530:12;8484:60;8390:160;;;:::o;8555:1016::-;8685:6;8693;8701;8709;8717;8725;8778:3;8766:9;8757:7;8753:23;8749:33;8746:53;;;8795:1;8792;8785:12;8746:53;8834:9;8821:23;8853:31;8878:5;8853:31;:::i;:::-;8903:5;-1:-1:-1;8959:2:62;8944:18;;8931:32;-1:-1:-1;;;;;9012:14:62;;;9009:34;;;9039:1;9036;9029:12;9009:34;9062:50;9104:7;9095:6;9084:9;9080:22;9062:50;:::i;:::-;9052:60;;9165:2;9154:9;9150:18;9137:32;9121:48;;9194:2;9184:8;9181:16;9178:36;;;9210:1;9207;9200:12;9178:36;9233:52;9277:7;9266:8;9255:9;9251:24;9233:52;:::i;:::-;9223:62;;9304:35;9335:2;9324:9;9320:18;9304:35;:::i;:::-;9294:45;;9386:3;9375:9;9371:19;9358:33;9348:43;;9444:3;9433:9;9429:19;9416:33;9400:49;;9474:2;9464:8;9461:16;9458:36;;;9490:1;9487;9480:12;9458:36;;9513:52;9557:7;9546:8;9535:9;9531:24;9513:52;:::i;:::-;9503:62;;;8555:1016;;;;;;;;:::o;9576:247::-;9635:6;9688:2;9676:9;9667:7;9663:23;9659:32;9656:52;;;9704:1;9701;9694:12;9656:52;9743:9;9730:23;9762:31;9787:5;9762:31;:::i;:::-;9812:5;9576:247;-1:-1:-1;;;9576:247:62:o;9828:723::-;9878:5;9931:3;9924:4;9916:6;9912:17;9908:27;9898:55;;9949:1;9946;9939:12;9898:55;9982:2;9976:9;10024:3;10016:6;10012:16;10094:6;10082:10;10079:22;-1:-1:-1;;;;;10046:10:62;10043:34;10040:62;10037:88;;;10105:18;;:::i;:::-;10141:2;10134:22;10176:6;10217:3;10205:16;;10233:15;;;10230:35;;;10261:1;10258;10251:12;10230:35;10285:6;10300:221;10316:6;10311:3;10308:15;10300:221;;;10398:3;10385:17;10415:31;10440:5;10415:31;:::i;:::-;10459:18;;10506:4;10497:14;;;;10333;10300:221;;;-1:-1:-1;10539:6:62;;9828:723;-1:-1:-1;;;;;9828:723:62:o;10556:183::-;10616:4;-1:-1:-1;;;;;10641:6:62;10638:30;10635:56;;;10671:18;;:::i;:::-;-1:-1:-1;10716:1:62;10712:14;10728:4;10708:25;;10556:183::o;10744:737::-;10798:5;10851:3;10844:4;10836:6;10832:17;10828:27;10818:55;;10869:1;10866;10859:12;10818:55;10905:6;10892:20;10931:4;10955:60;10971:43;11011:2;10971:43;:::i;:::-;10955:60;:::i;:::-;11049:15;;;11135:1;11131:10;;;;11119:23;;11115:32;;;11080:12;;;;11159:15;;;11156:35;;;11187:1;11184;11177:12;11156:35;11223:2;11215:6;11211:15;11235:217;11251:6;11246:3;11243:15;11235:217;;;11331:3;11318:17;11348:31;11373:5;11348:31;:::i;:::-;11392:18;;11430:12;;;;11268;;11235:217;;;-1:-1:-1;11470:5:62;10744:737;-1:-1:-1;;;;;;10744:737:62:o;11486:1513::-;11683:6;11691;11699;11707;11715;11723;11731;11739;11792:3;11780:9;11771:7;11767:23;11763:33;11760:53;;;11809:1;11806;11799:12;11760:53;11848:9;11835:23;11867:31;11892:5;11867:31;:::i;:::-;11917:5;-1:-1:-1;11941:2:62;11979:18;;;11966:32;-1:-1:-1;;;;;12047:14:62;;;12044:34;;;12074:1;12071;12064:12;12044:34;12097:50;12139:7;12130:6;12119:9;12115:22;12097:50;:::i;:::-;12087:60;;12166:35;12197:2;12186:9;12182:18;12166:35;:::i;:::-;12156:45;;12220:35;12251:2;12240:9;12236:18;12220:35;:::i;:::-;12210:45;;12302:3;12291:9;12287:19;12274:33;12264:43;;12351:7;12345:3;12334:9;12330:19;12326:33;12316:61;;12373:1;12370;12363:12;12316:61;12397:22;;:::i;:::-;12386:33;;12441:3;12482;12471:9;12467:19;12509:7;12501:6;12498:19;12495:39;;;12530:1;12527;12520:12;12495:39;12569:3;12558:9;12554:19;12582:142;12598:6;12593:3;12590:15;12582:142;;;12664:17;;12652:30;;12702:12;;;;12615;;12582:142;;;12586:3;12743:5;12733:15;;12767:41;12800:7;12792:6;12767:41;:::i;:::-;12757:51;;;;12861:3;12850:9;12846:19;12833:33;12817:49;;12891:2;12881:8;12878:16;12875:36;;;12907:1;12904;12897:12;12875:36;;;12930:63;12985:7;12974:8;12963:9;12959:24;12930:63;:::i;:::-;12920:73;;;11486:1513;;;;;;;;;;;:::o;13004:220::-;13153:2;13142:9;13135:21;13116:4;13173:45;13214:2;13203:9;13199:18;13191:6;13173:45;:::i;13229:458::-;13316:6;13324;13332;13385:2;13373:9;13364:7;13360:23;13356:32;13353:52;;;13401:1;13398;13391:12;13353:52;13437:9;13424:23;13414:33;;13498:2;13487:9;13483:18;13470:32;-1:-1:-1;;;;;13517:6:62;13514:30;13511:50;;;13557:1;13554;13547:12;13511:50;13580;13622:7;13613:6;13602:9;13598:22;13580:50;:::i;:::-;13570:60;;;13677:2;13666:9;13662:18;13649:32;13639:42;;13229:458;;;;;:::o;13692:301::-;13877:6;13870:14;13863:22;13852:9;13845:41;13922:2;13917;13906:9;13902:18;13895:30;13826:4;13942:45;13983:2;13972:9;13968:18;13960:6;13942:45;:::i;:::-;13934:53;13692:301;-1:-1:-1;;;;13692:301:62:o;14230:389::-;14304:6;14312;14365:2;14353:9;14344:7;14340:23;14336:32;14333:52;;;14381:1;14378;14371:12;14333:52;14404:26;14420:9;14404:26;:::i;:::-;14394:36;;14481:2;14470:9;14466:18;14453:32;-1:-1:-1;;;;;14500:6:62;14497:30;14494:50;;;14540:1;14537;14530:12;14494:50;14563;14605:7;14596:6;14585:9;14581:22;14563:50;:::i;:::-;14553:60;;;14230:389;;;;;:::o;14851:1382::-;14978:6;14986;14994;15002;15055:3;15043:9;15034:7;15030:23;15026:33;15023:53;;;15072:1;15069;15062:12;15023:53;15112:9;15099:23;-1:-1:-1;;;;;15182:2:62;15174:6;15171:14;15168:34;;;15198:1;15195;15188:12;15168:34;15236:6;15225:9;15221:22;15211:32;;15281:7;15274:4;15270:2;15266:13;15262:27;15252:55;;15303:1;15300;15293:12;15252:55;15339:2;15326:16;15361:4;15385:60;15401:43;15441:2;15401:43;:::i;15385:60::-;15479:15;;;15561:1;15557:10;;;;15549:19;;15545:28;;;15510:12;;;;15585:19;;;15582:39;;;15617:1;15614;15607:12;15582:39;15641:11;;;;15661:142;15677:6;15672:3;15669:15;15661:142;;;15743:17;;15731:30;;15694:12;;;;15781;;;;15661:142;;;15822:5;-1:-1:-1;15846:35:62;;-1:-1:-1;15862:18:62;;;15846:35;:::i;:::-;15836:45;;;;15934:2;15923:9;15919:18;15906:32;15890:48;;15963:2;15953:8;15950:16;15947:36;;;15979:1;15976;15969:12;15947:36;16002:52;16046:7;16035:8;16024:9;16020:24;16002:52;:::i;:::-;15992:62;;16107:2;16096:9;16092:18;16079:32;16063:48;;16136:2;16126:8;16123:16;16120:36;;;16152:1;16149;16142:12;16238:127;16299:10;16294:3;16290:20;16287:1;16280:31;16330:4;16327:1;16320:15;16354:4;16351:1;16344:15;16370:240;16454:1;16447:5;16444:12;16434:143;;16499:10;16494:3;16490:20;16487:1;16480:31;16534:4;16531:1;16524:15;16562:4;16559:1;16552:15;16434:143;16586:18;;16370:240::o;16615:1855::-;16815:4;16844:2;16884;16873:9;16869:18;16914:2;16903:9;16896:21;16937:6;16972;16966:13;17003:6;16995;16988:22;17029:2;17019:12;;17062:2;17051:9;17047:18;17040:25;;17124:2;17114:6;17111:1;17107:14;17096:9;17092:30;17088:39;17162:2;17154:6;17150:15;17183:1;17193:1248;17207:6;17204:1;17201:13;17193:1248;;;17272:22;;;-1:-1:-1;;17268:36:62;17256:49;;17328:13;;17402:9;;-1:-1:-1;;;;;2424:31:62;2412:44;;17364:6;17467:2;17463;17459:11;17453:18;17484:59;17539:2;17531:6;17527:15;17513:12;17484:59;:::i;:::-;;17592:2;17588;17584:11;17578:18;17633:2;17628;17620:6;17616:15;17609:27;17663:50;17709:2;17701:6;17697:15;17681:14;17663:50;:::i;:::-;17736:4;17783:11;;;17777:18;17760:15;;;17753:43;17819:4;17866:11;;;17860:18;17843:15;;;17836:43;17902:4;17949:11;;;17943:18;17926:15;;;17919:43;17985:4;18030:11;;;18024:18;5080:13;5073:21;18087:15;;;5061:34;18126:4;18171:11;;;18165:18;5080:13;5073:21;18228:15;;;5061:34;18268:6;18318:12;;;18312:19;18294:16;;;;18287:45;;;;-1:-1:-1;;18419:12:62;;;;18384:15;;;;17229:1;17222:9;17193:1248;;18936:679;19038:6;19046;19054;19062;19115:3;19103:9;19094:7;19090:23;19086:33;19083:53;;;19132:1;19129;19122:12;19083:53;19168:9;19155:23;19145:33;;19197:35;19228:2;19217:9;19213:18;19197:35;:::i;:::-;19187:45;;19283:2;19272:9;19268:18;19255:32;-1:-1:-1;;;;;19347:2:62;19339:6;19336:14;19333:34;;;19363:1;19360;19353:12;19620:315;19688:6;19696;19749:2;19737:9;19728:7;19724:23;19720:32;19717:52;;;19765:1;19762;19755:12;19717:52;19801:9;19788:23;19778:33;;19861:2;19850:9;19846:18;19833:32;19874:31;19899:5;19874:31;:::i;:::-;19924:5;19914:15;;;19620:315;;;;;:::o;19940:382::-;20147:6;20140:14;20133:22;20122:9;20115:41;20206:6;20199:14;20192:22;20187:2;20176:9;20172:18;20165:50;20251:2;20246;20235:9;20231:18;20224:30;20096:4;20271:45;20312:2;20301:9;20297:18;20289:6;20271:45;:::i;:::-;20263:53;19940:382;-1:-1:-1;;;;;19940:382:62:o;20327:898::-;-1:-1:-1;;;;;20725:32:62;;20707:51;;20666:4;20695:3;20767:56;20819:2;20804:18;;20796:6;20767:56;:::i;:::-;20859:2;20854;20843:9;20839:18;20832:30;20879:45;20920:2;20909:9;20905:18;20897:6;20879:45;:::i;:::-;20955:2;20940:18;;20933:34;;;;-1:-1:-1;;20998:3:62;20983:19;;20976:35;;;;21042:3;21027:19;;21020:35;;;;21099:14;;21092:22;21086:3;21071:19;;21064:51;21159:14;21152:22;21146:3;21131:19;;21124:51;21206:3;21191:19;;;21184:35;20871:53;20327:898;-1:-1:-1;;;20327:898:62:o;21230:736::-;21335:6;21343;21351;21359;21367;21420:3;21408:9;21399:7;21395:23;21391:33;21388:53;;;21437:1;21434;21427:12;21388:53;21476:9;21463:23;21495:31;21520:5;21495:31;:::i;:::-;21545:5;-1:-1:-1;21597:2:62;21582:18;;21569:32;;-1:-1:-1;21653:2:62;21638:18;;21625:32;21666:33;21625:32;21666:33;:::i;:::-;21718:7;-1:-1:-1;21776:2:62;21761:18;;21748:32;-1:-1:-1;;;;;21792:30:62;;21789:50;;;21835:1;21832;21825:12;21971:251;22041:6;22094:2;22082:9;22073:7;22069:23;22065:32;22062:52;;;22110:1;22107;22100:12;22062:52;22142:9;22136:16;22161:31;22186:5;22161:31;:::i;22227:461::-;22489:1;22485;22480:3;22476:11;22472:19;22464:6;22460:32;22449:9;22442:51;22529:6;22524:2;22513:9;22509:18;22502:34;22572:3;22567:2;22556:9;22552:18;22545:31;22423:4;22593:46;22634:3;22623:9;22619:19;22611:6;22593:46;:::i;:::-;22585:54;;22675:6;22670:2;22659:9;22655:18;22648:34;22227:461;;;;;;;:::o;22693:274::-;22822:3;22860:6;22854:13;22876:53;22922:6;22917:3;22910:4;22902:6;22898:17;22876:53;:::i;:::-;22945:16;;;;;22693:274;-1:-1:-1;;22693:274:62:o;22972:643::-;23243:3;23232:9;23225:22;23206:4;23270:46;23311:3;23300:9;23296:19;23288:6;23270:46;:::i;:::-;23364:9;23356:6;23352:22;23347:2;23336:9;23332:18;23325:50;23398:33;23424:6;23416;23398:33;:::i;:::-;-1:-1:-1;;;;;23467:32:62;;23462:2;23447:18;;23440:60;23536:22;;;23531:2;23516:18;;23509:50;23384:47;-1:-1:-1;23576:33:62;23384:47;23594:6;23576:33;:::i;:::-;23568:41;22972:643;-1:-1:-1;;;;;;;22972:643:62:o;23620:563::-;-1:-1:-1;;;;;23919:15:62;;;23901:34;;23971:15;;23966:2;23951:18;;23944:43;24018:2;24003:18;;23996:34;;;23881:3;24061:2;24046:18;;24039:31;;;23844:4;;24087:46;;24113:19;;24105:6;24087:46;:::i;:::-;24079:54;;24170:6;24164:3;24153:9;24149:19;24142:35;23620:563;;;;;;;;:::o;24188:380::-;24267:1;24263:12;;;;24310;;;24331:61;;24385:4;24377:6;24373:17;24363:27;;24331:61;24438:2;24430:6;24427:14;24407:18;24404:38;24401:161;;;24484:10;24479:3;24475:20;24472:1;24465:31;24519:4;24516:1;24509:15;24547:4;24544:1;24537:15;24401:161;;24188:380;;;:::o;24573:551::-;-1:-1:-1;;;;;24824:32:62;;24806:51;;24893:3;24888:2;24873:18;;24866:31;;;-1:-1:-1;;24920:46:62;;24946:19;;24938:6;24920:46;:::i;:::-;25002:6;24997:2;24986:9;24982:18;24975:34;25057:9;25049:6;25045:22;25040:2;25029:9;25025:18;25018:50;25085:33;25111:6;25103;25085:33;:::i;25129:797::-;-1:-1:-1;;;;;25450:32:62;;25432:51;;25519:3;25514:2;25499:18;;25492:31;;;-1:-1:-1;;25546:46:62;;25572:19;;25564:6;25546:46;:::i;:::-;25640:9;25632:6;25628:22;25623:2;25612:9;25608:18;25601:50;25674:33;25700:6;25692;25674:33;:::i;:::-;25660:47;;25757:6;25750:14;25743:22;25738:2;25727:9;25723:18;25716:50;25803:6;25797:3;25786:9;25782:19;25775:35;25859:9;25851:6;25847:22;25841:3;25830:9;25826:19;25819:51;25887:33;25913:6;25905;25887:33;:::i;:::-;25879:41;25129:797;-1:-1:-1;;;;;;;;;25129:797:62:o;26478:352::-;26571:5;26594:1;26604:220;26618:4;26615:1;26612:11;26604:220;;;26681:13;;-1:-1:-1;;;;;26677:39:62;26665:52;;26740:4;26764:12;;;;26799:15;;;;26713:1;26631:9;26604:220;;26835:461;26888:3;26926:5;26920:12;26953:6;26948:3;26941:19;26979:4;27008:2;27003:3;26999:12;26992:19;;27045:2;27038:5;27034:14;27066:1;27076:195;27090:6;27087:1;27084:13;27076:195;;;27155:13;;-1:-1:-1;;;;;27151:39:62;27139:52;;27211:12;;;;27246:15;;;;27187:1;27105:9;27076:195;;;-1:-1:-1;27287:3:62;;26835:461;-1:-1:-1;;;;;26835:461:62:o;27301:1291::-;-1:-1:-1;;;;;27798:32:62;;27780:51;;27768:3;27850:2;27868:18;;;27861:30;;;27739:4;;27768:3;27914:45;27940:18;;;27932:6;27914:45;:::i;:::-;27900:59;;28009:6;28002:14;27995:22;27990:2;27979:9;27975:18;27968:50;28068:6;28061:14;28054:22;28049:2;28038:9;28034:18;28027:50;28114:6;28108:3;28097:9;28093:19;28086:35;28156:3;28145:9;28141:19;28202:6;28226:1;28236:167;28250:4;28247:1;28244:11;28236:167;;;28309:13;;28297:26;;28343:12;;;;28378:15;;;;28270:1;28263:9;28236:167;;;28240:3;;;;28412:53;28460:3;28449:9;28445:19;28437:6;28412:53;:::i;:::-;28514:9;28506:6;28502:22;28496:3;28485:9;28481:19;28474:51;28542:44;28579:6;28571;28542:44;:::i;:::-;28534:52;27301:1291;-1:-1:-1;;;;;;;;;;;27301:1291:62:o;28786:362::-;28991:6;28980:9;28973:25;29034:2;29029;29018:9;29014:18;29007:30;28954:4;29054:45;29095:2;29084:9;29080:18;29072:6;29054:45;:::i;:::-;29046:53;;29135:6;29130:2;29119:9;29115:18;29108:34;28786:362;;;;;;:::o;29457:1010::-;29763:3;29776:22;;;29847:13;;29748:19;;;29869:22;;;29715:4;;29945;;29922:3;29907:19;;;29972:15;;;29715:4;30015:169;30029:6;30026:1;30023:13;30015:169;;;30090:13;;30078:26;;30124:12;;;;30159:15;;;;30051:1;30044:9;30015:169;;;30019:3;;;30234:6;30227:14;30220:22;30215:2;30204:9;30200:18;30193:50;30288:9;30283:3;30279:19;30274:2;30263:9;30259:18;30252:47;30322:30;30348:3;30340:6;30322:30;:::i;:::-;30308:44;;;30400:9;30392:6;30388:22;30383:2;30372:9;30368:18;30361:50;30428:33;30454:6;30446;30428:33;:::i;30472:535::-;30717:6;30706:9;30699:25;30774:6;30767:14;30760:22;30755:2;30744:9;30740:18;30733:50;30819:3;30814:2;30803:9;30799:18;30792:31;30680:4;30846:46;30887:3;30876:9;30872:19;30864:6;30846:46;:::i;:::-;30940:9;30932:6;30928:22;30923:2;30912:9;30908:18;30901:50;30968:33;30994:6;30986;30968:33;:::i;31012:563::-;-1:-1:-1;;;;;31311:15:62;;;31293:34;;31358:2;31343:18;;31336:34;;;31406:15;;31401:2;31386:18;;31379:43;31273:3;31453:2;31438:18;;31431:31;;;31236:4;;31479:46;;31505:19;;31497:6;31479:46;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "Leonardo Urrego",
    "events": {
      "evtUser(uint8,address,string)": {
        "notice": "### Contract events ###"
      }
    },
    "kind": "dev",
    "methods": {
      "AcceptRejectInvitation(bool,bytes)": {
        "notice": "For an user that have an invitation pending",
        "params": {
          "_acceptance": "True for accept the invitation"
        }
      },
      "ExecProp(uint256)": {
        "details": "Normally is called internally after each vote",
        "notice": "Execute (or reject) a proposal computing the votes and the governance model",
        "params": {
          "_propId": "ID of the proposal, based on `arrProposals`"
        },
        "returns": {
          "message": "result of the transaction",
          "status": "True if the proposal can be execute, false in other cases"
        }
      },
      "GetArrDataPropUser()": {
        "notice": "Get complete array of arrDataPropUser",
        "returns": {
          "_0": "arrDataPropUser the array with all data"
        }
      },
      "GetArrProposalsLength()": {
        "notice": "Length of arrProposals array"
      },
      "GetArrUsersLength()": {
        "notice": "Length of arrUsers array"
      },
      "GetProposalList()": {
        "notice": "The list of all Proposals",
        "returns": {
          "_0": "arrProposals the array with all proposals"
        }
      },
      "Init(address,string,bool,bool,bytes32,uint256[3],address[5],address[])": {
        "details": "Some parameters can be ignored depending on the governance model",
        "notice": "Create a new CLH",
        "params": {
          "_CLC": "Array for CL Contracts and others see `enum eCLC`",
          "_ManagerWallets": "Whitelist of address for invitate as managers",
          "_govModel": "keccak256 hash of the governance model, see the __GOV_* constans",
          "_govRules": "Array for goverment rules see `enum gRule`",
          "_houseName": "Name given by the owner",
          "_houseOpen": "If is set to 1, the CLH is set to Open",
          "_housePrivate": "If is set to 1, the CLH is set to private",
          "_owner": "The address of the deployed wallet"
        }
      },
      "PropGovRules(uint256,string,uint256)": {
        "details": "When execute this proposal the new values will be set",
        "notice": "Generate a new proposal for change some governance parameters",
        "params": {
          "_description": "About the new proposal ",
          "_newApprovPercentage": "The new percentaje for accept or reject a proposal"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropInviteUser(address,string,string,bool,uint256,bytes)": {
        "details": "the execution of this proposal only create an invitation ",
        "notice": "Generate a new proposal to invite a new user",
        "params": {
          "_description": "A text for the proposal",
          "_isManager": "True if is for a manager",
          "_name": "Can be the nickname or other reference to the User",
          "_walletAddr": "Address of the new user"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRemoveUser(address,string,uint256,bytes)": {
        "details": "The user can be a managaer",
        "notice": "Generate a new proposal for remove a user",
        "params": {
          "_description": "About the proposal",
          "_walletAddr": "user Address to be removed"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropRequestToJoin(string,string,address,bytes)": {
        "details": "Only avaiable in public CLH",
        "notice": "Generate a proposal from a user that want to join to the CLH",
        "params": {
          "_description": "About the request",
          "_name": "Nickname or other user identification",
          "_signerWallet": "Address of signer to check OffChain signature"
        },
        "returns": {
          "_0": "propId ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxERC20(address,uint256,address,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "PropTxWei(address,uint256,string,uint256)": {
        "details": "When execute this proposal, the transfer is made",
        "notice": "generate a new proposal to transfer ETH in weis",
        "params": {
          "_amountOutCLV": "Amount to transfer (in wei)",
          "_description": "About this proposal",
          "_to": "Recipient address"
        },
        "returns": {
          "propId": "ID of the new proposal, based on `arrProposals`"
        }
      },
      "VoteProposal(uint256,bool,string,bytes)": {
        "details": "After vote the proposal automatically try to be executed",
        "notice": "Used to vote a proposal",
        "params": {
          "_justification": "About your vote",
          "_propId": "ID of the proposal, based on `arrProposals`",
          "_support": "True for accept, false to reject"
        }
      },
      "bulkVote(uint256[],bool,string,bytes)": {
        "notice": "Vote for multiple proposal",
        "params": {
          "_justification": "Description of the vote",
          "_propId": "Array with ID of the proposal to votes",
          "_support": "is the Vote (True or False) for all proposals"
        }
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "housePrivate()": {
        "notice": "### CLH Public Variables ###"
      }
    },
    "notice": "This contract for test only the most basic interactions",
    "title": "Contract to implement and test the basic fuctions of CLHouses",
    "version": 1
  },
  "offset": [
    327,
    17646
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x274 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F3D99B3 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xA693649A GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xCADA7F19 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xCADA7F19 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xCB85669C EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0xDE5AB14E EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xE68777D7 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xE810A58E EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xF00D6274 EQ PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA693649A EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xB4C62192 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xBAA4D5E9 EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xC2B3AA08 EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0xC347D2FD EQ PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81CF22D8 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x81CF22D8 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x860228FD EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x9360BFAD EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x9C630A88 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xA0A625F9 EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0xA1C89C9D EQ PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F3D99B3 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x6285E98C EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x6C2F34E7 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x70FF918C EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x7C638548 EQ PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2266E1BC GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x3A70693D GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x3A70693D EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x4E9D5472 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x50F7308A EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x53D1EE2D EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x59CA2D03 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x5DE58F60 EQ PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2266E1BC EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x22B4081C EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x29647EE5 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x2A57EF84 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x31A0AFA7 EQ PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x152DE3B9 GT PUSH2 0x23C JUMPI DUP1 PUSH4 0x152DE3B9 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x1707ACE8 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x19A50F49 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x1D5FD3CA EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x1F2E1339 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x1F50DD27 EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F17A9B EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x52F9B0A EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x10790717 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x12EAB7FF EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x1343E9A5 EQ PUSH2 0x2F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD0 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xC4 SLOAD PUSH2 0x2B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH2 0x2B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST PUSH2 0x28C PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x31F PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x28C PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH1 0x62 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x352 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x296 JUMP JUMPDEST PUSH1 0xC5 SLOAD PUSH2 0x2B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD0 JUMP JUMPDEST PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0xCBE JUMP JUMPDEST PUSH2 0x28C PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2132 JUMP JUMPDEST PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x83 SLOAD PUSH2 0x28C JUMP JUMPDEST PUSH2 0x28C PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x435 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x2316 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43F PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x45A CALLDATASIZE PUSH1 0x4 PUSH2 0x242C JUMP JUMPDEST PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x472 PUSH2 0x46D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP3 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x24 SLOAD PUSH2 0x2B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC2 SLOAD PUSH2 0x2B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x4B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD0 JUMP JUMPDEST PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x435 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x249E JUMP JUMPDEST PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x4FA CALLDATASIZE PUSH1 0x4 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0xA4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC3 SLOAD PUSH2 0x2B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH2 0x2B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x435 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x82 SLOAD PUSH2 0x28C JUMP JUMPDEST PUSH2 0x55E PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x25FA JUMP JUMPDEST PUSH2 0x57E PUSH2 0x579 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x187D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x296 JUMP JUMPDEST PUSH2 0x435 PUSH2 0x5BF CALLDATASIZE PUSH1 0x4 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x5D7 PUSH2 0x5D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2703 JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x23 SLOAD PUSH2 0x2B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x60C PUSH2 0x607 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x28C PUSH2 0x62F CALLDATASIZE PUSH1 0x4 PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x28C PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x352 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6F2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4F17A9B PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x767 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x77D JUMPI DUP1 DUP3 REVERT JUMPDEST DUP1 DUP3 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x820 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x12EAB7FF PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8F6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x152DE3B9 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x84 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x93B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x96A SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x996 SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA95 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x899B86F PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x82 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0xB09 SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB35 SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB82 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB57 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB82 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB65 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP1 DUP3 AND SWAP3 POP PUSH2 0x100 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x84 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCB5 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xC12 SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC3E SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC8B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC60 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC8B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC6E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xBC9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD5D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x295F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA95FBE1 PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDCD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0xDE8 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6F SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE98 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x299B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x31A0AFA7 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF08 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0xF23 JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x86 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0xC5 SLOAD PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF7E JUMPI POP PUSH1 0xC5 SLOAD PUSH1 0xFF DUP1 DUP4 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV AND LT JUMPDEST PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0xFF DUP5 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL AND PUSH2 0xFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP3 MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x103B SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x24 ADD PUSH2 0x2A70 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x864CF155 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1070 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP PUSH1 0xC5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0xFF DUP3 AND DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x42 DUP1 SLOAD PUSH2 0x1122 SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x114E SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x119B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1170 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x119B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x117E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1240 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B08 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2EF2C7B PUSH1 0xE5 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x12CB JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1330 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1354 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1375 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x5F3D99B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537563636573732065786563757465642070726F706F73616C00000000000000 DUP2 MSTORE POP SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1499 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BD SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x14E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xF8C70A9 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x529382D5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x529382D5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1585 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15A6 SWAP3 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1039E45B PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1616 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x161B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA327AB69 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA327AB69 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1681 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A5 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16CA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B31 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA1C89C9D PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x83 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCB5 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x177A JUMPI PUSH2 0x177A PUSH2 0x25C2 JUMP JUMPDEST PUSH1 0x8 DUP2 GT ISZERO PUSH2 0x178B JUMPI PUSH2 0x178B PUSH2 0x25C2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x179F SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17CB SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x85 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x188D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP SWAP1 SWAP3 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0xC1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA327AB69 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA327AB69 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x190F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1933 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1958 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x18567541 PUSH1 0xE3 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x198D SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x19E3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP1 DUP3 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP2 SWAP1 PUSH2 0x1A25 SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A51 SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A9E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A73 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A9E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A81 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x83 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0x1AF2 SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B1E SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B40 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B4E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0x6 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA327AB69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1B SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C42 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BCE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6F2D58A7 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x1C77 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x40 MLOAD RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY DUP3 PUSH2 0x1CCD JUMPI DUP1 DUP3 REVERT JUMPDEST POP MLOAD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D2B JUMPI PUSH2 0x1D2B PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D59 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8B PUSH2 0x1CF3 JUMP JUMPDEST PUSH2 0x1D9E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1D31 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1DF1 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E1F DUP8 DUP3 DUP9 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E69 DUP9 DUP4 DUP10 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E8B DUP9 DUP4 DUP10 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1E9D DUP3 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC0 DUP8 DUP3 DUP9 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1EEF DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1EFF DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1F21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2D DUP9 DUP3 DUP10 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F73 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F5B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1631 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1F9C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1F58 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1FD4 SWAP1 DUP4 ADD DUP6 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x200A SWAP1 DUP4 ADD DUP8 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP2 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20A9 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x60 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x2089 DUP3 DUP8 ADD DUP3 PUSH2 0x1F84 JUMP JUMPDEST SWAP3 DUP10 ADD MLOAD ISZERO ISZERO SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2050 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x20D8 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2100 DUP9 DUP4 DUP10 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x212D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x214B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2156 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x217E DUP11 DUP4 DUP12 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A0 DUP11 DUP4 DUP12 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP6 POP PUSH2 0x21AE PUSH1 0x60 DUP11 ADD PUSH2 0x211D JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D8 DUP10 DUP3 DUP11 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2202 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x223C JUMPI PUSH2 0x223C PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0xA0 DUP5 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2274 JUMPI DUP1 CALLDATALOAD PUSH2 0x2266 DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2253 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2298 JUMPI PUSH2 0x2298 PUSH2 0x1CF3 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x22C8 PUSH2 0x22C3 DUP4 PUSH2 0x227F JUMP JUMPDEST PUSH2 0x1D31 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x22E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x230B JUMPI DUP1 CALLDATALOAD PUSH2 0x22FE DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x22EB JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x233E DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x235B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2367 DUP14 DUP4 DUP15 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP10 POP PUSH2 0x2375 PUSH1 0x40 DUP14 ADD PUSH2 0x211D JUMP JUMPDEST SWAP9 POP PUSH2 0x2383 PUSH1 0x60 DUP14 ADD PUSH2 0x211D JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP7 POP DUP13 PUSH1 0xBF DUP14 ADD SLT PUSH2 0x239B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A3 PUSH2 0x1D09 JUMP JUMPDEST SWAP2 POP DUP2 PUSH2 0x100 DUP14 ADD DUP15 DUP2 GT ISZERO PUSH2 0x23B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA0 DUP15 ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23D4 JUMPI DUP1 CALLDATALOAD DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 DUP6 ADD PUSH2 0x23BD JUMP JUMPDEST POP DUP2 SWAP8 POP PUSH2 0x23E2 DUP16 DUP3 PUSH2 0x2209 JUMP JUMPDEST SWAP7 POP POP POP PUSH2 0x1A0 DUP13 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x23FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x2409 DUP12 DUP3 DUP13 ADD PUSH2 0x22A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2202 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x245E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x246A DUP7 DUP3 DUP8 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2496 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F84 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24BA DUP4 PUSH2 0x211D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24E1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x252C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x253C PUSH2 0x22C3 DUP4 PUSH2 0x227F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP12 DUP5 GT ISZERO PUSH2 0x255B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x2579 JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x2560 JUMP JUMPDEST SWAP9 POP PUSH2 0x2588 SWAP1 POP DUP10 DUP3 ADD PUSH2 0x211D JUMP JUMPDEST SWAP7 POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x25A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25AC DUP9 DUP4 DUP10 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x9 DUP2 LT PUSH2 0x25F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20A9 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH2 0x120 DUP9 DUP3 ADD MLOAD PUSH2 0x2654 DUP11 DUP8 ADD DUP3 PUSH2 0x25D8 JUMP JUMPDEST POP DUP8 DUP3 ADD MLOAD DUP2 DUP10 DUP8 ADD MSTORE PUSH2 0x266A DUP3 DUP8 ADD DUP3 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x60 DUP5 DUP2 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP6 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0xA0 DUP1 DUP6 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0xC0 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH1 0xE0 DUP1 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 DUP9 ADD MSTORE PUSH2 0x100 SWAP4 DUP5 ADD MLOAD SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x26E7 PUSH1 0x20 DUP7 ADD PUSH2 0x211D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x25A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2728 DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP4 ISZERO ISZERO DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2756 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F84 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x0 PUSH2 0x120 PUSH2 0x277D PUSH1 0x20 DUP5 ADD DUP13 PUSH2 0x25D8 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x278F DUP2 DUP5 ADD DUP12 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0x80 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x27DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x27E9 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2800 DUP2 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1F21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x282D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2202 DUP2 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x285F PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2882 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1F58 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x289F PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1F84 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x28B1 DUP2 DUP8 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x40 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x60 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x28D4 DUP2 DUP6 PUSH2 0x1F84 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2912 SWAP1 DUP4 ADD DUP6 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2938 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2959 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2983 SWAP1 DUP4 ADD DUP7 PUSH2 0x1F84 JUMP JUMPDEST DUP5 PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x28D4 DUP2 DUP6 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x29BF SWAP1 DUP4 ADD DUP9 PUSH2 0x1F84 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x29D1 DUP2 DUP9 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 POP DUP6 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP5 PUSH1 0x80 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x29F3 DUP2 DUP6 PUSH2 0x1F84 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x1631 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A65 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2A40 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP2 MSTORE PUSH2 0x1C0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x2A97 DUP5 DUP4 ADD DUP13 PUSH2 0x1F84 JUMP JUMPDEST SWAP2 POP DUP10 ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP8 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP8 PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2AD4 JUMPI DUP2 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2AB7 JUMP JUMPDEST POP POP POP POP PUSH2 0x2AE6 PUSH2 0x100 DUP5 ADD DUP7 PUSH2 0x2A00 JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x2AF9 DUP2 DUP6 PUSH2 0x2A2C JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2B21 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1F84 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP6 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0xA0 DUP5 ADD SWAP1 DUP3 DUP10 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B6A JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2B4E JUMP JUMPDEST POP POP POP DUP7 ISZERO ISZERO DUP3 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2B86 DUP2 DUP8 PUSH2 0x1F84 JUMP JUMPDEST SWAP2 POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x28D4 DUP2 DUP6 PUSH2 0x1F84 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2BBC PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1F84 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x28D4 DUP2 DUP6 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2912 SWAP1 DUP4 ADD DUP6 PUSH2 0x1F84 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xB6 0xD9 LOG0 0xBB 0xB4 0xC9 SWAP1 AND 0xE7 STATICCALL SWAP3 RETURN 0xEE SWAP13 JUMP CALLER 0xD0 SWAP5 SWAP10 LOG3 0xDD 0x29 0xB4 DUP5 0xB5 0xD8 0xD6 PUSH23 0xF4FFB464736F6C634300080C0033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "CALLVALUE",
      "path": "50"
    },
    "6": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "8": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "12": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "16": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "17": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "POP",
      "path": "50"
    },
    "18": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "21": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "LT",
      "path": "50"
    },
    "22": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x274"
    },
    "25": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "26": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "29": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "SHR",
      "path": "50"
    },
    "32": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "33": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x5F3D99B3"
    },
    "38": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "GT",
      "path": "50"
    },
    "39": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x151"
    },
    "42": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "43": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "44": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA693649A"
    },
    "49": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "GT",
      "path": "50"
    },
    "50": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "54": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "55": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCADA7F19"
    },
    "60": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "GT",
      "path": "50"
    },
    "61": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "65": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "66": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCADA7F19"
    },
    "71": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "72": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5E6"
    },
    "75": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "76": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "77": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xCB85669C"
    },
    "82": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "83": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5F9"
    },
    "86": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "87": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "88": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xDE5AB14E"
    },
    "93": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "94": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x621"
    },
    "97": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "98": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "99": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xE68777D7"
    },
    "104": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "105": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x634"
    },
    "108": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "109": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "110": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xE810A58E"
    },
    "115": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "116": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x63D"
    },
    "119": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "120": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "121": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xF00D6274"
    },
    "126": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "127": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x646"
    },
    "130": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "131": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "134": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "135": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "136": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "137": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA693649A"
    },
    "142": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "143": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x54E"
    },
    "146": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "147": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "148": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xB4C62192"
    },
    "153": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "154": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x556"
    },
    "157": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "158": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "159": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xBAA4D5E9"
    },
    "164": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "165": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x56B"
    },
    "168": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "169": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "170": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xC2B3AA08"
    },
    "175": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "176": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5B1"
    },
    "179": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "180": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "181": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xC347D2FD"
    },
    "186": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "187": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5C4"
    },
    "190": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "191": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "194": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "195": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "196": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "197": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x81CF22D8"
    },
    "202": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "GT",
      "path": "50"
    },
    "203": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "207": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "208": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x81CF22D8"
    },
    "213": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "214": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4D9"
    },
    "217": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "218": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "219": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x860228FD"
    },
    "224": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "225": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4EC"
    },
    "228": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "229": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "230": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x9360BFAD"
    },
    "235": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "236": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x50C"
    },
    "239": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "240": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "241": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x9C630A88"
    },
    "246": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "247": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x51F"
    },
    "250": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "251": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "252": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA0A625F9"
    },
    "257": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "258": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x528"
    },
    "261": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "262": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "263": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA1C89C9D"
    },
    "268": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "269": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x53B"
    },
    "272": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "273": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "276": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "277": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "278": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "279": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x5F3D99B3"
    },
    "284": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "285": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x45F"
    },
    "288": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "289": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "290": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x6285E98C"
    },
    "295": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "296": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x480"
    },
    "299": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "300": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "301": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x6C2F34E7"
    },
    "306": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "307": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x493"
    },
    "310": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "311": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "312": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x70FF918C"
    },
    "317": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "318": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4A6"
    },
    "321": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "322": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "323": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x7C638548"
    },
    "328": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "329": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4C6"
    },
    "332": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "333": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "335": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "336": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "337": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "338": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "339": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2266E1BC"
    },
    "344": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "GT",
      "path": "50"
    },
    "345": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1EA"
    },
    "348": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "349": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "350": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x3A70693D"
    },
    "355": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "GT",
      "path": "50"
    },
    "356": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1AE"
    },
    "359": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "360": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "361": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x3A70693D"
    },
    "366": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "367": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3E7"
    },
    "370": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "371": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "372": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x4E9D5472"
    },
    "377": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "378": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3FA"
    },
    "381": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "382": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "383": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x50F7308A"
    },
    "388": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "389": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x402"
    },
    "392": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "393": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "394": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x53D1EE2D"
    },
    "399": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "400": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x422"
    },
    "403": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "404": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "405": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x59CA2D03"
    },
    "410": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "411": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x437"
    },
    "414": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "415": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "416": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x5DE58F60"
    },
    "421": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "422": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x44C"
    },
    "425": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "426": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "428": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "429": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "430": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "431": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "432": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2266E1BC"
    },
    "437": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "438": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x375"
    },
    "441": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "442": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "443": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x22B4081C"
    },
    "448": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "449": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x388"
    },
    "452": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "453": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "454": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x29647EE5"
    },
    "459": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "460": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3AC"
    },
    "463": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "464": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "465": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x2A57EF84"
    },
    "470": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "471": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3C1"
    },
    "474": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "475": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "476": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x31A0AFA7"
    },
    "481": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "482": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3D4"
    },
    "485": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "486": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "488": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "489": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "490": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "491": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "492": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x152DE3B9"
    },
    "497": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "GT",
      "path": "50"
    },
    "498": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x23C"
    },
    "501": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "502": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "503": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x152DE3B9"
    },
    "508": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "509": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2F9"
    },
    "512": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "513": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "514": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1707ACE8"
    },
    "519": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "520": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x30C"
    },
    "523": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "524": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "525": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x19A50F49"
    },
    "530": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "531": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x32E"
    },
    "534": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "535": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "536": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1D5FD3CA"
    },
    "541": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "542": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x337"
    },
    "545": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "546": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "547": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1F2E1339"
    },
    "552": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "553": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x340"
    },
    "556": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "557": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "558": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1F50DD27"
    },
    "563": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "564": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x362"
    },
    "567": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "568": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "570": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "571": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "572": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "573": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "574": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x4F17A9B"
    },
    "579": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "580": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x279"
    },
    "583": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "584": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "585": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x52F9B0A"
    },
    "590": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "591": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x29F"
    },
    "594": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "595": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "596": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x10790717"
    },
    "601": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "602": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2CA"
    },
    "605": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "606": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "607": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x12EAB7FF"
    },
    "612": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "613": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2DD"
    },
    "616": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "617": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "618": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x1343E9A5"
    },
    "623": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "EQ",
      "path": "50"
    },
    "624": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2F0"
    },
    "627": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "628": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "629": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "631": {
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "DUP1",
      "path": "50"
    },
    "632": {
      "first_revert": true,
      "fn": null,
      "offset": [
        327,
        17646
      ],
      "op": "REVERT",
      "path": "50"
    },
    "633": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "634": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "637": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x287"
    },
    "640": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "641": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "643": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DD0"
    },
    "646": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13999,
        14899
      ],
      "op": "JUMP",
      "path": "50"
    },
    "647": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "648": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x653"
    },
    "651": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        13999,
        14899
      ],
      "op": "JUMP",
      "path": "50"
    },
    "652": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "653": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "655": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "656": {
      "op": "SWAP1"
    },
    "657": {
      "op": "DUP2"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "663": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "665": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "666": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "DUP1",
      "path": "50"
    },
    "667": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "668": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "SUB",
      "path": "50"
    },
    "669": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "670": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "RETURN",
      "path": "50"
    },
    "671": {
      "offset": [
        1606,
        1629
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "672": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC4"
    },
    "674": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "675": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B2"
    },
    "678": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "685": {
      "op": "SHL"
    },
    "686": {
      "op": "SUB"
    },
    "687": {
      "offset": [
        1606,
        1629
      ],
      "op": "AND",
      "path": "47"
    },
    "688": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "DUP2",
      "path": "47"
    },
    "689": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "JUMP",
      "path": "47"
    },
    "690": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "691": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "693": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        1606,
        1629
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "700": {
      "op": "SHL"
    },
    "701": {
      "op": "SUB"
    },
    "702": {
      "op": "SWAP1"
    },
    "703": {
      "op": "SWAP2"
    },
    "704": {
      "op": "AND"
    },
    "705": {
      "op": "DUP2"
    },
    "706": {
      "op": "MSTORE"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "709": {
      "op": "ADD"
    },
    "710": {
      "offset": [
        1606,
        1629
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x296"
    },
    "713": {
      "op": "JUMP"
    },
    "714": {
      "offset": [
        673,
        694
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "715": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x22"
    },
    "717": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "718": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B2"
    },
    "721": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "op": "SUB"
    },
    "730": {
      "offset": [
        673,
        694
      ],
      "op": "AND",
      "path": "47"
    },
    "731": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "DUP2",
      "path": "47"
    },
    "732": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        673,
        694
      ],
      "op": "JUMP",
      "path": "47"
    },
    "733": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "734": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "737": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2EB"
    },
    "740": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "741": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "743": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1E30"
    },
    "746": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11264,
        12166
      ],
      "op": "JUMP",
      "path": "50"
    },
    "747": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "748": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x781"
    },
    "751": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11264,
        12166
      ],
      "op": "JUMP",
      "path": "50"
    },
    "752": {
      "offset": [
        567,
        597
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "753": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        567,
        597
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "756": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        567,
        597
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x5"
    },
    "758": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        567,
        597
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "759": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        567,
        597
      ],
      "op": "DUP2",
      "path": "47"
    },
    "760": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        567,
        597
      ],
      "op": "JUMP",
      "path": "47"
    },
    "761": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "762": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "765": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x307"
    },
    "768": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "769": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "771": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1ECC"
    },
    "774": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13027,
        13993
      ],
      "op": "JUMP",
      "path": "50"
    },
    "775": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "776": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x855"
    },
    "779": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13027,
        13993
      ],
      "op": "JUMP",
      "path": "50"
    },
    "780": {
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "781": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x31F"
    },
    "784": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x31A"
    },
    "787": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "788": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "790": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1F3F"
    },
    "793": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        996,
        1032
      ],
      "op": "JUMP",
      "path": "47"
    },
    "794": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "795": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x92B"
    },
    "798": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        996,
        1032
      ],
      "op": "JUMP",
      "path": "47"
    },
    "799": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "800": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "802": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "803": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x296"
    },
    "806": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "807": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "808": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "809": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "810": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1FB0"
    },
    "813": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        996,
        1032
      ],
      "op": "JUMP",
      "path": "47"
    },
    "814": {
      "offset": [
        462,
        485
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "815": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "818": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "820": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "821": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "DUP2",
      "path": "47"
    },
    "822": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        462,
        485
      ],
      "op": "JUMP",
      "path": "47"
    },
    "823": {
      "offset": [
        852,
        889
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "824": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        852,
        889
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "827": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        852,
        889
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x62"
    },
    "829": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        852,
        889
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "830": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        852,
        889
      ],
      "op": "DUP2",
      "path": "47"
    },
    "831": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        852,
        889
      ],
      "op": "JUMP",
      "path": "47"
    },
    "832": {
      "offset": [
        410,
        431
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "833": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "835": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "836": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x352"
    },
    "839": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "840": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "843": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "844": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "DIV",
      "path": "47"
    },
    "845": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "847": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "AND",
      "path": "47"
    },
    "848": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "DUP2",
      "path": "47"
    },
    "849": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "JUMP",
      "path": "47"
    },
    "850": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "851": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "853": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        410,
        431
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "854": {
      "op": "SWAP1"
    },
    "855": {
      "op": "ISZERO"
    },
    "856": {
      "op": "ISZERO"
    },
    "857": {
      "op": "DUP2"
    },
    "858": {
      "op": "MSTORE"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "861": {
      "op": "ADD"
    },
    "862": {
      "offset": [
        410,
        431
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x296"
    },
    "865": {
      "op": "JUMP"
    },
    "866": {
      "offset": [
        1635,
        1662
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "867": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1635,
        1662
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC5"
    },
    "869": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1635,
        1662
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "870": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1635,
        1662
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B2"
    },
    "873": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1635,
        1662
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "op": "SUB"
    },
    "882": {
      "offset": [
        1635,
        1662
      ],
      "op": "AND",
      "path": "47"
    },
    "883": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1635,
        1662
      ],
      "op": "DUP2",
      "path": "47"
    },
    "884": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        1635,
        1662
      ],
      "op": "JUMP",
      "path": "47"
    },
    "885": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "886": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "889": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x383"
    },
    "892": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "893": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "895": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DD0"
    },
    "898": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14905,
        15801
      ],
      "op": "JUMP",
      "path": "50"
    },
    "899": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "900": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x9F6"
    },
    "903": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        14905,
        15801
      ],
      "op": "JUMP",
      "path": "50"
    },
    "904": {
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "905": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x39B"
    },
    "908": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x396"
    },
    "911": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "912": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "914": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1F3F"
    },
    "917": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        926,
        951
      ],
      "op": "JUMP",
      "path": "47"
    },
    "918": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "919": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xACA"
    },
    "922": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        926,
        951
      ],
      "op": "JUMP",
      "path": "47"
    },
    "923": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "924": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "926": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "927": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x296"
    },
    "930": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "931": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "932": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "933": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "934": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "935": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "936": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1FE6"
    },
    "939": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        926,
        951
      ],
      "op": "JUMP",
      "path": "47"
    },
    "940": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "941": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3B4"
    },
    "944": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBA5"
    },
    "947": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17529,
        17644
      ],
      "op": "JUMP",
      "path": "50"
    },
    "948": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "949": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "951": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "952": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x296"
    },
    "955": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "956": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "957": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2029"
    },
    "960": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17529,
        17644
      ],
      "op": "JUMP",
      "path": "50"
    },
    "961": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "962": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "965": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3CF"
    },
    "968": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "969": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "971": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x20B7"
    },
    "974": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6237,
        7144
      ],
      "op": "JUMP",
      "path": "50"
    },
    "975": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "976": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCBE"
    },
    "979": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6237,
        7144
      ],
      "op": "JUMP",
      "path": "50"
    },
    "980": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "981": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "984": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x3E2"
    },
    "987": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "988": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "990": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2132"
    },
    "993": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4937,
        5961
      ],
      "op": "JUMP",
      "path": "50"
    },
    "994": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "995": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDF5"
    },
    "998": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        4937,
        5961
      ],
      "op": "JUMP",
      "path": "50"
    },
    "999": {
      "offset": [
        1088,
        1132
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1000": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "1003": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x3F5"
    },
    "1006": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1007": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1009": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1F3F"
    },
    "1012": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1088,
        1132
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1013": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1014": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xF32"
    },
    "1017": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        1088,
        1132
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1018": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17090,
        17198
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1019": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17172,
        17184
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 0,
      "value": "0x83"
    },
    "1021": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17172,
        17191
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1022": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17090,
        17198
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "1025": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        17090,
        17198
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1026": {
      "offset": [
        1220,
        1274
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1027": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "1030": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x410"
    },
    "1033": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1034": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1036": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x21E5"
    },
    "1039": {
      "fn": "CLHouse.GetArrProposalsLength",
      "jump": "i",
      "offset": [
        1220,
        1274
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1040": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1041": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA3"
    },
    "1043": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1045": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1046": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1048": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1049": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1050": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1051": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1053": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1054": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1055": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1056": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1057": {
      "fn": "CLHouse.GetArrProposalsLength",
      "offset": [
        1220,
        1274
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1058": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1059": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x435"
    },
    "1062": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x430"
    },
    "1065": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1066": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1068": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2316"
    },
    "1071": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1149,
        2273
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1072": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1073": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF53"
    },
    "1076": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1149,
        2273
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1077": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1078": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "STOP",
      "path": "50"
    },
    "1079": {
      "offset": [
        792,
        816
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1080": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x43F"
    },
    "1083": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1115"
    },
    "1086": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        792,
        816
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1087": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1088": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1090": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1091": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x296"
    },
    "1094": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1095": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1096": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2419"
    },
    "1099": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        792,
        816
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1100": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1101": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "1104": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x45A"
    },
    "1107": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1108": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1110": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x242C"
    },
    "1113": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10035,
        10889
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1114": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1115": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x11A3"
    },
    "1118": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10035,
        10889
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1119": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1120": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x472"
    },
    "1123": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x46D"
    },
    "1126": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1127": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1129": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1F3F"
    },
    "1132": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2628,
        3389
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1133": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1134": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12D7"
    },
    "1137": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2628,
        3389
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1138": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1139": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1141": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1142": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x296"
    },
    "1145": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1146": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1147": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1148": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x247B"
    },
    "1151": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2628,
        3389
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1152": {
      "offset": [
        728,
        755
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1153": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        728,
        755
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x24"
    },
    "1155": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        728,
        755
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1156": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        728,
        755
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B2"
    },
    "1159": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        728,
        755
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "op": "SUB"
    },
    "1168": {
      "offset": [
        728,
        755
      ],
      "op": "AND",
      "path": "47"
    },
    "1169": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        728,
        755
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1170": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        728,
        755
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1171": {
      "offset": [
        1549,
        1572
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1172": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1549,
        1572
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC2"
    },
    "1174": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1549,
        1572
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1175": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1549,
        1572
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B2"
    },
    "1178": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1549,
        1572
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1185": {
      "op": "SHL"
    },
    "1186": {
      "op": "SUB"
    },
    "1187": {
      "offset": [
        1549,
        1572
      ],
      "op": "AND",
      "path": "47"
    },
    "1188": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1549,
        1572
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1189": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1549,
        1572
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1190": {
      "offset": [
        1168,
        1214
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1191": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "1194": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x4B4"
    },
    "1197": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1198": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1200": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x21E5"
    },
    "1203": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        1168,
        1214
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1204": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1205": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA2"
    },
    "1207": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1209": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1210": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1212": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1213": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1214": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1215": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1217": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1218": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1219": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1220": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1221": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        1168,
        1214
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1222": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1223": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "1226": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4D4"
    },
    "1229": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1230": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1232": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1DD0"
    },
    "1235": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7489,
        8373
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1236": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1237": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1443"
    },
    "1240": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7489,
        8373
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1241": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1242": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x435"
    },
    "1245": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x4E7"
    },
    "1248": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1249": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1251": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x249E"
    },
    "1254": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12290,
        13021
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1255": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1256": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1517"
    },
    "1259": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12290,
        13021
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1260": {
      "offset": [
        1300,
        1348
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1261": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "1264": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x4FA"
    },
    "1267": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1268": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1270": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x21E5"
    },
    "1273": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        1300,
        1348
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1274": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1275": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA4"
    },
    "1277": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "1279": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1280": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1282": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1283": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1284": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "1285": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1287": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1288": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "1289": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1290": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1291": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1300,
        1348
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1292": {
      "offset": [
        1578,
        1600
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1293": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1578,
        1600
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC3"
    },
    "1295": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1578,
        1600
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1296": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1578,
        1600
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B2"
    },
    "1299": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1578,
        1600
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "op": "SUB"
    },
    "1308": {
      "offset": [
        1578,
        1600
      ],
      "op": "AND",
      "path": "47"
    },
    "1309": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1578,
        1600
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1310": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1578,
        1600
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1311": {
      "offset": [
        523,
        561
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1312": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "1315": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1317": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1318": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1319": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        523,
        561
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1320": {
      "offset": [
        1515,
        1543
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1321": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1515,
        1543
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xC1"
    },
    "1323": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1515,
        1543
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1324": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1515,
        1543
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B2"
    },
    "1327": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1515,
        1543
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1334": {
      "op": "SHL"
    },
    "1335": {
      "op": "SUB"
    },
    "1336": {
      "offset": [
        1515,
        1543
      ],
      "op": "AND",
      "path": "47"
    },
    "1337": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1515,
        1543
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1338": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        1515,
        1543
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1339": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1340": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x435"
    },
    "1343": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x549"
    },
    "1346": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1347": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1349": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x24EB"
    },
    "1352": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16037,
        16892
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1353": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1354": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1637"
    },
    "1357": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16037,
        16892
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1358": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16939,
        17039
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1359": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        17017,
        17025
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 1,
      "value": "0x82"
    },
    "1361": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        17017,
        17032
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1362": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16939,
        17039
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "1365": {
      "fn": "CLHouse.GetArrUsersLength",
      "offset": [
        16939,
        17039
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1366": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1367": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x55E"
    },
    "1370": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x16FF"
    },
    "1373": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17304,
        17413
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1374": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1375": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1377": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1378": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x296"
    },
    "1381": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1382": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1383": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x25FA"
    },
    "1386": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17304,
        17413
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1387": {
      "offset": [
        1038,
        1082
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1388": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x57E"
    },
    "1391": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x579"
    },
    "1394": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1395": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1397": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1F3F"
    },
    "1400": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1038,
        1082
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1401": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1402": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x187D"
    },
    "1405": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        1038,
        1082
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1406": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1407": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1409": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP1",
      "path": "47"
    },
    "1410": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "op": "SUB"
    },
    "1419": {
      "op": "SWAP6"
    },
    "1420": {
      "op": "DUP7"
    },
    "1421": {
      "op": "AND"
    },
    "1422": {
      "op": "DUP2"
    },
    "1423": {
      "op": "MSTORE"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1426": {
      "op": "DUP2"
    },
    "1427": {
      "op": "ADD"
    },
    "1428": {
      "op": "SWAP5"
    },
    "1429": {
      "op": "SWAP1"
    },
    "1430": {
      "op": "SWAP5"
    },
    "1431": {
      "op": "MSTORE"
    },
    "1432": {
      "op": "SWAP2"
    },
    "1433": {
      "op": "DUP5"
    },
    "1434": {
      "op": "AND"
    },
    "1435": {
      "op": "SWAP2"
    },
    "1436": {
      "op": "DUP4"
    },
    "1437": {
      "op": "ADD"
    },
    "1438": {
      "op": "SWAP2"
    },
    "1439": {
      "op": "SWAP1"
    },
    "1440": {
      "op": "SWAP2"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "SWAP1"
    },
    "1443": {
      "op": "SWAP2"
    },
    "1444": {
      "op": "AND"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1452": {
      "op": "ADD"
    },
    "1453": {
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x296"
    },
    "1456": {
      "op": "JUMP"
    },
    "1457": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1458": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x435"
    },
    "1461": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x5BF"
    },
    "1464": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1465": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1467": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x26C1"
    },
    "1470": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3675,
        4501
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1471": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1472": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x18C5"
    },
    "1475": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3675,
        4501
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1476": {
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1477": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5D7"
    },
    "1480": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x5D2"
    },
    "1483": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1484": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1486": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2703"
    },
    "1489": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1490": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1491": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x19EB"
    },
    "1494": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1495": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1496": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1498": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1499": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x296"
    },
    "1502": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "1503": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "1504": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1505": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1506": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2733"
    },
    "1509": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1510": {
      "offset": [
        700,
        722
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1511": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x23"
    },
    "1513": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1514": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2B2"
    },
    "1517": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1524": {
      "op": "SHL"
    },
    "1525": {
      "op": "SUB"
    },
    "1526": {
      "offset": [
        700,
        722
      ],
      "op": "AND",
      "path": "47"
    },
    "1527": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1528": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        700,
        722
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1529": {
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1530": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x60C"
    },
    "1533": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x607"
    },
    "1536": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "CALLDATASIZE",
      "path": "47"
    },
    "1537": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "1539": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1F3F"
    },
    "1542": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        957,
        990
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1543": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1544": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1AA8"
    },
    "1547": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        957,
        990
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1548": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1549": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "1551": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "1552": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x296"
    },
    "1555": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP10",
      "path": "47"
    },
    "1556": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP9",
      "path": "47"
    },
    "1557": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP8",
      "path": "47"
    },
    "1558": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP7",
      "path": "47"
    },
    "1559": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "1560": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "1561": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "1562": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "1563": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "1564": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1565": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x275F"
    },
    "1568": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        957,
        990
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1569": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1570": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28C"
    },
    "1573": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x62F"
    },
    "1576": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1577": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1579": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x27C6"
    },
    "1582": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8718,
        9674
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1583": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1584": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1BA1"
    },
    "1587": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8718,
        9674
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1588": {
      "offset": [
        491,
        517
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1589": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "1592": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "1594": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1595": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1596": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        491,
        517
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1597": {
      "offset": [
        603,
        636
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1598": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x28C"
    },
    "1601": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x6"
    },
    "1603": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1604": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1605": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        603,
        636
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1606": {
      "offset": [
        380,
        404
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "1607": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "1609": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "1610": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x352"
    },
    "1613": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "1614": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "1616": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "AND",
      "path": "47"
    },
    "1617": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "DUP2",
      "path": "47"
    },
    "1618": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        380,
        404
      ],
      "op": "JUMP",
      "path": "47"
    },
    "1619": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        13999,
        14899
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1620": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14187,
        14194
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1622": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14211,
        14232
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1623": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "1625": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1627": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1628": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1629": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1630": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "1633": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "EXP",
      "path": "50"
    },
    "1634": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1635": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "DIV",
      "path": "50"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "op": "SUB"
    },
    "1644": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14245
      ],
      "op": "AND",
      "path": "50"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1651": {
      "op": "SHL"
    },
    "1652": {
      "op": "SUB"
    },
    "1653": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14259
      ],
      "op": "AND",
      "path": "50"
    },
    "1654": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14259
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "1659": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1661": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1662": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1663": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "1668": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "AND",
      "path": "50"
    },
    "1669": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "1671": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "SHL",
      "path": "50"
    },
    "1672": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1673": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1674": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1676": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "ADD",
      "path": "50"
    },
    "1677": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1679": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1681": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1682": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1683": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1684": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "SUB",
      "path": "50"
    },
    "1685": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1686": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP7",
      "path": "50"
    },
    "1687": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "GAS",
      "path": "50"
    },
    "1688": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "1689": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1690": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1691": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1692": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6A9"
    },
    "1695": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1696": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1697": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1699": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1700": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "1701": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1702": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1704": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1705": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1706": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "POP",
      "path": "50"
    },
    "1707": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "POP",
      "path": "50"
    },
    "1708": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "POP",
      "path": "50"
    },
    "1709": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "POP",
      "path": "50"
    },
    "1710": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1712": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1713": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1714": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1716": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "NOT",
      "path": "50"
    },
    "1717": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1719": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1720": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "ADD",
      "path": "50"
    },
    "1721": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "AND",
      "path": "50"
    },
    "1722": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1723": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "ADD",
      "path": "50"
    },
    "1724": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1725": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1727": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1728": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "POP",
      "path": "50"
    },
    "1729": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1730": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "ADD",
      "path": "50"
    },
    "1731": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1732": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6CD"
    },
    "1735": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1736": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1737": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "1740": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14235,
        14261
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1741": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14235,
        14261
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1742": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14211,
        14261
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1743": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14211,
        14261
      ],
      "op": "POP",
      "path": "50"
    },
    "1744": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14330,
        14348
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1746": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14367
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "op": "SUB"
    },
    "1755": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14380
      ],
      "op": "AND",
      "path": "50"
    },
    "1756": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14501,
        14513
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1757": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14531,
        14544
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1758": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14562,
        14574
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1759": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14592,
        14602
      ],
      "op": "DUP8",
      "path": "50"
    },
    "1760": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1762": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1763": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "1765": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "ADD",
      "path": "50"
    },
    "1766": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6F2"
    },
    "1769": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "1770": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "1771": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "1772": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1773": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1774": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2838"
    },
    "1777": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14394,
        14616
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1778": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1779": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1781": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1782": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1785": {
      "op": "NOT"
    },
    "1786": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1787": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1788": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SUB",
      "path": "50"
    },
    "1789": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "ADD",
      "path": "50"
    },
    "1790": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1791": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1792": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1793": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1794": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1795": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1797": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1798": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "ADD",
      "path": "50"
    },
    "1799": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1800": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "AND",
      "path": "50"
    },
    "1810": {
      "op": "PUSH4",
      "value": "0x4F17A9B"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "OR",
      "path": "50"
    },
    "1819": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1820": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1821": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1822": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x727"
    },
    "1825": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1826": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14394,
        14616
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1827": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "1830": {
      "fn": "CLHouse.PropSellERC20",
      "jump": "i",
      "offset": [
        14354,
        14626
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1831": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1832": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1834": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1836": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1837": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1838": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1839": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "SUB",
      "path": "50"
    },
    "1840": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1841": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP6",
      "path": "50"
    },
    "1842": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "GAS",
      "path": "50"
    },
    "1843": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "1844": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1845": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "POP",
      "path": "50"
    },
    "1846": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "POP",
      "path": "50"
    },
    "1847": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1848": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1849": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1851": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1852": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "EQ",
      "path": "50"
    },
    "1853": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x762"
    },
    "1856": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1857": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1859": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1860": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1861": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "POP",
      "path": "50"
    },
    "1862": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "1864": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "NOT",
      "path": "50"
    },
    "1865": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "1867": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1868": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "ADD",
      "path": "50"
    },
    "1869": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "AND",
      "path": "50"
    },
    "1870": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1871": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "ADD",
      "path": "50"
    },
    "1872": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1874": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1875": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1876": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1877": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1878": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1879": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1881": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1883": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "DUP5",
      "path": "50"
    },
    "1884": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "ADD",
      "path": "50"
    },
    "1885": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "1886": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x767"
    },
    "1889": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1890": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1891": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "1893": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "1894": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "POP",
      "path": "50"
    },
    "1895": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1896": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14354,
        14626
      ],
      "op": "POP",
      "path": "50"
    },
    "1897": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14329,
        14626
      ],
      "op": "POP",
      "path": "50"
    },
    "1898": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14329,
        14626
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1899": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14329,
        14626
      ],
      "op": "POP",
      "path": "50"
    },
    "1900": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14677,
        14681
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1902": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14671,
        14682
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1903": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14707,
        14723
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1904": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14759,
        14763
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1905": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14756,
        14757
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1907": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14751,
        14754
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1908": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14736,
        14764
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "1909": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14788,
        14801
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1910": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14777,
        14853
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x77D"
    },
    "1913": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14777,
        14853
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1914": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14834,
        14838
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1915": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14829,
        14832
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1916": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14822,
        14839
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1917": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14777,
        14853
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1918": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14878,
        14882
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1919": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14873,
        14876
      ],
      "op": "DUP3",
      "path": "50"
    },
    "1920": {
      "fn": "CLHouse.PropSellERC20",
      "offset": [
        14866,
        14883
      ],
      "op": "RETURN",
      "path": "50"
    },
    "1921": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11264,
        12166
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1922": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11460,
        11467
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1924": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11484,
        11505
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1925": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "1927": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1929": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1930": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "1931": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1932": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "1935": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "EXP",
      "path": "50"
    },
    "1936": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "1937": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "DIV",
      "path": "50"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "SUB"
    },
    "1946": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11518
      ],
      "op": "AND",
      "path": "50"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1953": {
      "op": "SHL"
    },
    "1954": {
      "op": "SUB"
    },
    "1955": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11532
      ],
      "op": "AND",
      "path": "50"
    },
    "1956": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11532
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "1961": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1963": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1964": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1965": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "1970": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "AND",
      "path": "50"
    },
    "1971": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "1973": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "SHL",
      "path": "50"
    },
    "1974": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1975": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "1976": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1978": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "ADD",
      "path": "50"
    },
    "1979": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1981": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "1983": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "1984": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1985": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP4",
      "path": "50"
    },
    "1986": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "SUB",
      "path": "50"
    },
    "1987": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1988": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP7",
      "path": "50"
    },
    "1989": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "GAS",
      "path": "50"
    },
    "1990": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "1991": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1992": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1993": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1994": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7D7"
    },
    "1997": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1998": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "1999": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2001": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2002": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2003": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2004": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2006": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2007": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2008": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "POP",
      "path": "50"
    },
    "2009": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "POP",
      "path": "50"
    },
    "2010": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "POP",
      "path": "50"
    },
    "2011": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "POP",
      "path": "50"
    },
    "2012": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2014": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2015": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2016": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2018": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "NOT",
      "path": "50"
    },
    "2019": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2021": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2022": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "ADD",
      "path": "50"
    },
    "2023": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "AND",
      "path": "50"
    },
    "2024": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2025": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "ADD",
      "path": "50"
    },
    "2026": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2027": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2029": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2030": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "POP",
      "path": "50"
    },
    "2031": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2032": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "ADD",
      "path": "50"
    },
    "2033": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2034": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x7FB"
    },
    "2037": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2038": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2039": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "2042": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11508,
        11534
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2043": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11508,
        11534
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2044": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11484,
        11534
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2045": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11484,
        11534
      ],
      "op": "POP",
      "path": "50"
    },
    "2046": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11603,
        11621
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2048": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11627,
        11640
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2055": {
      "op": "SHL"
    },
    "2056": {
      "op": "SUB"
    },
    "2057": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11627,
        11653
      ],
      "op": "AND",
      "path": "50"
    },
    "2058": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11775,
        11780
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2059": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11798,
        11810
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2060": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11828,
        11841
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2061": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11859,
        11869
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2062": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2064": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2065": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2067": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "ADD",
      "path": "50"
    },
    "2068": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x820"
    },
    "2071": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "2072": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2073": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2074": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2075": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2076": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x288C"
    },
    "2079": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11667,
        11883
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2080": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2081": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2083": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2084": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2087": {
      "op": "NOT"
    },
    "2088": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2089": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2090": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SUB",
      "path": "50"
    },
    "2091": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "ADD",
      "path": "50"
    },
    "2092": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2093": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2094": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2095": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2096": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2097": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2099": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2100": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "ADD",
      "path": "50"
    },
    "2101": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2102": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "SUB"
    },
    "2111": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "AND",
      "path": "50"
    },
    "2112": {
      "op": "PUSH4",
      "value": "0x12EAB7FF"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2119": {
      "op": "SHL"
    },
    "2120": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "OR",
      "path": "50"
    },
    "2121": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2122": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2123": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11627,
        11893
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2124": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11627,
        11893
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x727"
    },
    "2127": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11627,
        11893
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2128": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11667,
        11883
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2129": {
      "fn": "CLHouse.PropRequestToJoin",
      "offset": [
        11627,
        11893
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "2132": {
      "fn": "CLHouse.PropRequestToJoin",
      "jump": "i",
      "offset": [
        11627,
        11893
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2133": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13027,
        13993
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2134": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13244,
        13251
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2136": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13268,
        13289
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2137": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "2139": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2141": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2142": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2143": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2144": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "2147": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "EXP",
      "path": "50"
    },
    "2148": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2149": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "DIV",
      "path": "50"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2156": {
      "op": "SHL"
    },
    "2157": {
      "op": "SUB"
    },
    "2158": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13302
      ],
      "op": "AND",
      "path": "50"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "op": "SUB"
    },
    "2167": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13316
      ],
      "op": "AND",
      "path": "50"
    },
    "2168": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13316
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "2173": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2175": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2176": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2177": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "2182": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "AND",
      "path": "50"
    },
    "2183": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "2185": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "SHL",
      "path": "50"
    },
    "2186": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2187": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2188": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2190": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "ADD",
      "path": "50"
    },
    "2191": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2193": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2195": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2196": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2197": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2198": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "SUB",
      "path": "50"
    },
    "2199": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2200": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP7",
      "path": "50"
    },
    "2201": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "GAS",
      "path": "50"
    },
    "2202": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "2203": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2204": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2205": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2206": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x8AB"
    },
    "2209": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2210": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2211": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2213": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2214": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2215": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2216": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2218": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2219": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2220": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "POP",
      "path": "50"
    },
    "2221": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "POP",
      "path": "50"
    },
    "2222": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "POP",
      "path": "50"
    },
    "2223": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "POP",
      "path": "50"
    },
    "2224": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2226": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2227": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2228": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2230": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "NOT",
      "path": "50"
    },
    "2231": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2233": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2234": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "ADD",
      "path": "50"
    },
    "2235": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "AND",
      "path": "50"
    },
    "2236": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2237": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "ADD",
      "path": "50"
    },
    "2238": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2239": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2241": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2242": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "POP",
      "path": "50"
    },
    "2243": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2244": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "ADD",
      "path": "50"
    },
    "2245": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2246": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x8CF"
    },
    "2249": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2250": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2251": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "2254": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13292,
        13318
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2255": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13292,
        13318
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2256": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13268,
        13318
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2257": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13268,
        13318
      ],
      "op": "POP",
      "path": "50"
    },
    "2258": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13387,
        13405
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2260": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13411,
        13424
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "op": "SUB"
    },
    "2269": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13411,
        13437
      ],
      "op": "AND",
      "path": "50"
    },
    "2270": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13566,
        13578
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2271": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13596,
        13607
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2272": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13625,
        13638
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2273": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13656,
        13668
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2274": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13686,
        13696
      ],
      "op": "DUP9",
      "path": "50"
    },
    "2275": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2277": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2278": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2280": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "ADD",
      "path": "50"
    },
    "2281": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x8F6"
    },
    "2284": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "2285": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "2286": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2287": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2288": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2289": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2290": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x28DF"
    },
    "2293": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13451,
        13710
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2294": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2295": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2297": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2298": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2301": {
      "op": "NOT"
    },
    "2302": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2303": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2304": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SUB",
      "path": "50"
    },
    "2305": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "ADD",
      "path": "50"
    },
    "2306": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2307": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2308": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2309": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2310": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2311": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2313": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2314": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "ADD",
      "path": "50"
    },
    "2315": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2316": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "AND",
      "path": "50"
    },
    "2326": {
      "op": "PUSH4",
      "value": "0x152DE3B9"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "OR",
      "path": "50"
    },
    "2335": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2336": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2337": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13411,
        13720
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2338": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13411,
        13720
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x727"
    },
    "2341": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13411,
        13720
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2342": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13451,
        13710
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2343": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        13411,
        13720
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "2346": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        13411,
        13720
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2347": {
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2348": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x84"
    },
    "2350": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2351": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2352": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2353": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2354": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "LT",
      "path": "47"
    },
    "2355": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x93B"
    },
    "2358": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2359": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2361": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2362": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "REVERT",
      "path": "47"
    },
    "2363": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2364": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2366": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2367": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2368": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2369": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2371": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2372": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2373": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2374": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "2376": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2377": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2378": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MUL",
      "path": "47"
    },
    "2379": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2380": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2381": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2382": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2384": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2385": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2386": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2387": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "op": "SUB"
    },
    "2396": {
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2397": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2398": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "AND",
      "path": "47"
    },
    "2399": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2402": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x96A"
    },
    "2405": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2406": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "2409": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        996,
        1032
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2410": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2411": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2412": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2414": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2415": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2417": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2418": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2419": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DIV",
      "path": "47"
    },
    "2420": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MUL",
      "path": "47"
    },
    "2421": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2423": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2424": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2426": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "2427": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2428": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2429": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2430": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2432": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2433": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2434": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2435": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2436": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2437": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2438": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2439": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2440": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2442": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2443": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2444": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2445": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2446": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x996"
    },
    "2449": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2450": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "2453": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "i",
      "offset": [
        996,
        1032
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2454": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2455": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2456": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "2457": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9E3"
    },
    "2460": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2461": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2462": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2464": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "LT",
      "path": "47"
    },
    "2465": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9B8"
    },
    "2468": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2469": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "2472": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2473": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2474": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2475": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DIV",
      "path": "47"
    },
    "2476": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MUL",
      "path": "47"
    },
    "2477": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2478": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2479": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2480": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2482": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2483": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2484": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9E3"
    },
    "2487": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2488": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2489": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2490": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2491": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2492": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2493": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2495": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2496": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2498": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2500": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2501": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2502": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2503": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2504": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2505": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2506": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2507": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2508": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2510": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2511": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2512": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2514": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2515": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2516": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2517": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "GT",
      "path": "47"
    },
    "2518": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x9C6"
    },
    "2521": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2522": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2523": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2524": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SUB",
      "path": "47"
    },
    "2525": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2527": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "AND",
      "path": "47"
    },
    "2528": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2529": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2530": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2531": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2532": {
      "op": "POP"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "2537": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2538": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2539": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "ADD",
      "path": "47"
    },
    "2540": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2541": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2542": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2543": {
      "op": "POP"
    },
    "2544": {
      "op": "POP"
    },
    "2545": {
      "offset": [
        996,
        1032
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "2547": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "AND",
      "path": "47"
    },
    "2548": {
      "fn": "CLHouse.PropSwapERC20",
      "offset": [
        996,
        1032
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2549": {
      "fn": "CLHouse.PropSwapERC20",
      "jump": "o",
      "offset": [
        996,
        1032
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2550": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        14905,
        15801
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2551": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15091,
        15098
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2553": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15115,
        15136
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2554": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "2556": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2558": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2559": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2560": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2561": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "2564": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "EXP",
      "path": "50"
    },
    "2565": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2566": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "DIV",
      "path": "50"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2573": {
      "op": "SHL"
    },
    "2574": {
      "op": "SUB"
    },
    "2575": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15149
      ],
      "op": "AND",
      "path": "50"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15163
      ],
      "op": "AND",
      "path": "50"
    },
    "2585": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15163
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "2590": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2592": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2593": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2594": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "2599": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "AND",
      "path": "50"
    },
    "2600": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "2602": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "SHL",
      "path": "50"
    },
    "2603": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2604": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2605": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "2607": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "ADD",
      "path": "50"
    },
    "2608": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2610": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2612": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2613": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2614": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP4",
      "path": "50"
    },
    "2615": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "SUB",
      "path": "50"
    },
    "2616": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2617": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP7",
      "path": "50"
    },
    "2618": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "GAS",
      "path": "50"
    },
    "2619": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "2620": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2621": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2622": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "2623": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA4C"
    },
    "2626": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2627": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2628": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2630": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2631": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "2632": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2633": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2635": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2636": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2637": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "POP",
      "path": "50"
    },
    "2638": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "POP",
      "path": "50"
    },
    "2639": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "POP",
      "path": "50"
    },
    "2640": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "POP",
      "path": "50"
    },
    "2641": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2643": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2644": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "2645": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2647": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "NOT",
      "path": "50"
    },
    "2648": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "2650": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2651": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "ADD",
      "path": "50"
    },
    "2652": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "AND",
      "path": "50"
    },
    "2653": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2654": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "ADD",
      "path": "50"
    },
    "2655": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2656": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2658": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2659": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "POP",
      "path": "50"
    },
    "2660": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2661": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "ADD",
      "path": "50"
    },
    "2662": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2663": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA70"
    },
    "2666": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2667": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2668": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "2671": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        15139,
        15165
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2672": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15139,
        15165
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2673": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15115,
        15165
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2674": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15115,
        15165
      ],
      "op": "POP",
      "path": "50"
    },
    "2675": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15234,
        15252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2677": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15258,
        15271
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "op": "SUB"
    },
    "2686": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15258,
        15284
      ],
      "op": "AND",
      "path": "50"
    },
    "2687": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15404,
        15415
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2688": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15433,
        15446
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2689": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15464,
        15476
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2690": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15494,
        15504
      ],
      "op": "DUP8",
      "path": "50"
    },
    "2691": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2693": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2694": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "2696": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "ADD",
      "path": "50"
    },
    "2697": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xA95"
    },
    "2700": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "2701": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "2702": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "2703": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2704": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2705": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2838"
    },
    "2708": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        15298,
        15518
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2709": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2710": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2712": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2713": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2716": {
      "op": "NOT"
    },
    "2717": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2718": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "DUP5",
      "path": "50"
    },
    "2719": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SUB",
      "path": "50"
    },
    "2720": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "ADD",
      "path": "50"
    },
    "2721": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2722": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2723": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2724": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "DUP2",
      "path": "50"
    },
    "2725": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2726": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2728": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "DUP3",
      "path": "50"
    },
    "2729": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "ADD",
      "path": "50"
    },
    "2730": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2731": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "SUB"
    },
    "2740": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "AND",
      "path": "50"
    },
    "2741": {
      "op": "PUSH4",
      "value": "0x899B86F"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "OR",
      "path": "50"
    },
    "2750": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2751": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "2752": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15258,
        15528
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2753": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15258,
        15528
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x727"
    },
    "2756": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15258,
        15528
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "2757": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15298,
        15518
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2758": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        15258,
        15528
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "2761": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        15258,
        15528
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2762": {
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2763": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x82"
    },
    "2765": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2766": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2767": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2768": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2769": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "LT",
      "path": "47"
    },
    "2770": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xADA"
    },
    "2773": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2774": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2776": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2777": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "REVERT",
      "path": "47"
    },
    "2778": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2779": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2781": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2782": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2783": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2784": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2786": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2787": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2788": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2789": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "2791": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2792": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2793": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MUL",
      "path": "47"
    },
    "2794": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2795": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2796": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2797": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2799": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2800": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2801": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2802": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2809": {
      "op": "SHL"
    },
    "2810": {
      "op": "SUB"
    },
    "2811": {
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2812": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2813": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "AND",
      "path": "47"
    },
    "2814": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2815": {
      "op": "POP"
    },
    "2816": {
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2817": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB09"
    },
    "2820": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2821": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "2824": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        926,
        951
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2825": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2826": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2827": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2829": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2830": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2832": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2833": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2834": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DIV",
      "path": "47"
    },
    "2835": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MUL",
      "path": "47"
    },
    "2836": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2838": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2839": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2841": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "2842": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2843": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2844": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2845": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "2847": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2848": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2849": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2850": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2851": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2852": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2853": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2854": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2855": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2857": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2858": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2859": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2860": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2861": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB35"
    },
    "2864": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2865": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "2868": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "i",
      "offset": [
        926,
        951
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2869": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2870": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2871": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "2872": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB82"
    },
    "2875": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2876": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2877": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2879": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "LT",
      "path": "47"
    },
    "2880": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB57"
    },
    "2883": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2884": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "2887": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2888": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2889": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2890": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DIV",
      "path": "47"
    },
    "2891": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MUL",
      "path": "47"
    },
    "2892": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2893": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2894": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2895": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2897": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2898": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2899": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB82"
    },
    "2902": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2903": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2904": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2905": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2906": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2907": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2908": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2910": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2911": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2913": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "2915": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "2916": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2917": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2918": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2919": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2920": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP2",
      "path": "47"
    },
    "2921": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "2922": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2923": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "2925": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2926": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2927": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "2929": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2930": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2931": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2932": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "GT",
      "path": "47"
    },
    "2933": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xB65"
    },
    "2936": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "2937": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2938": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2939": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SUB",
      "path": "47"
    },
    "2940": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "2942": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "AND",
      "path": "47"
    },
    "2943": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2944": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2945": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2946": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "2947": {
      "op": "POP"
    },
    "2948": {
      "op": "POP"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "2953": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP4",
      "path": "47"
    },
    "2954": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2955": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2956": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "2958": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2959": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "2960": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "ADD",
      "path": "47"
    },
    "2961": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "2962": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2963": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2964": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2965": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "2967": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP1",
      "path": "47"
    },
    "2968": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP3",
      "path": "47"
    },
    "2969": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "AND",
      "path": "47"
    },
    "2970": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "2971": {
      "op": "POP"
    },
    "2972": {
      "offset": [
        926,
        951
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "2975": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "2976": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "2977": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DIV",
      "path": "47"
    },
    "2978": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "AND",
      "path": "47"
    },
    "2979": {
      "fn": "CLHouse.PropBuyERC20",
      "offset": [
        926,
        951
      ],
      "op": "DUP6",
      "path": "47"
    },
    "2980": {
      "fn": "CLHouse.PropBuyERC20",
      "jump": "o",
      "offset": [
        926,
        951
      ],
      "op": "JUMP",
      "path": "47"
    },
    "2981": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2982": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17582,
        17602
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "2984": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17622,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 2,
      "value": "0x84"
    },
    "2986": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2987": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2988": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2989": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2991": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MUL",
      "path": "50"
    },
    "2992": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "2994": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "2995": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "2997": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "2998": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "2999": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3000": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3001": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3003": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3004": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3005": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3006": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3007": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3008": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3009": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3010": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3011": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3013": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3014": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3016": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3017": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3018": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3019": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3020": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "LT",
      "path": "50"
    },
    "3021": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3022": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCB5"
    },
    "3025": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3026": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3028": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3029": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3030": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3031": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3033": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3034": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3035": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3036": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3037": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3039": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3040": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3041": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3043": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3044": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3045": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3046": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3047": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3048": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3"
    },
    "3050": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3051": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MUL",
      "path": "50"
    },
    "3052": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3053": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3054": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3055": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3056": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "op": "SUB"
    },
    "3065": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "AND",
      "path": "50"
    },
    "3066": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3067": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3068": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "3070": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3071": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3072": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3073": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3074": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3075": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3076": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3077": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3078": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3079": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3080": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3081": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3082": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC12"
    },
    "3085": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3086": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2924"
    },
    "3089": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3090": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3091": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3092": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3094": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3095": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3097": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3098": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3099": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DIV",
      "path": "50"
    },
    "3100": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MUL",
      "path": "50"
    },
    "3101": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3103": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3104": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3106": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3107": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3108": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3109": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3110": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3112": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3113": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3114": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3115": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3116": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3117": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3118": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3119": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3120": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3122": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3123": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3124": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3125": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3126": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC3E"
    },
    "3129": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3130": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2924"
    },
    "3133": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "i",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3134": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3135": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3136": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3137": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC8B"
    },
    "3140": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3141": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3142": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3144": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "LT",
      "path": "50"
    },
    "3145": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC60"
    },
    "3148": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3149": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3152": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3153": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3154": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3155": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DIV",
      "path": "50"
    },
    "3156": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MUL",
      "path": "50"
    },
    "3157": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3158": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3159": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3160": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3162": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3163": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3164": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC8B"
    },
    "3167": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3168": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3169": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3170": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3171": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3172": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3173": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3175": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3176": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3178": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3180": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "3181": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3182": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3183": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3184": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3185": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3186": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3187": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3188": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "3190": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3191": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3192": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3194": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3195": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3196": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3197": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "GT",
      "path": "50"
    },
    "3198": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC6E"
    },
    "3201": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3202": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3203": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3204": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SUB",
      "path": "50"
    },
    "3205": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3207": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "AND",
      "path": "50"
    },
    "3208": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3209": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3210": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3211": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3212": {
      "op": "POP"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3216": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3217": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "op": "POP"
    },
    "3220": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "3222": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3223": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3224": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3225": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3226": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3227": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "3229": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "AND",
      "path": "50"
    },
    "3230": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3231": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3232": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3234": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3235": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3236": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3237": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3238": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3239": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3240": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3241": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "3243": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3244": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3245": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3246": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3247": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3248": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "ADD",
      "path": "50"
    },
    "3249": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBC9"
    },
    "3252": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3253": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3254": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "POP",
      "path": "50"
    },
    "3255": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "POP",
      "path": "50"
    },
    "3256": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "POP",
      "path": "50"
    },
    "3257": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "POP",
      "path": "50"
    },
    "3258": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3259": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17615,
        17637
      ],
      "op": "POP",
      "path": "50"
    },
    "3260": {
      "fn": "CLHouse.GetArrDataPropUser",
      "offset": [
        17529,
        17644
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3261": {
      "fn": "CLHouse.GetArrDataPropUser",
      "jump": "o",
      "offset": [
        17529,
        17644
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3262": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3263": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6427,
        6441
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3265": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6458,
        6479
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3266": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "3268": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3270": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3271": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3272": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3273": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3276": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "EXP",
      "path": "50"
    },
    "3277": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3278": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "DIV",
      "path": "50"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "op": "SUB"
    },
    "3287": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6492
      ],
      "op": "AND",
      "path": "50"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3294": {
      "op": "SHL"
    },
    "3295": {
      "op": "SUB"
    },
    "3296": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6506
      ],
      "op": "AND",
      "path": "50"
    },
    "3297": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6506
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "3302": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3304": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3305": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3306": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "3311": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "AND",
      "path": "50"
    },
    "3312": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "3314": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "SHL",
      "path": "50"
    },
    "3315": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3316": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3317": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3319": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "ADD",
      "path": "50"
    },
    "3320": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3322": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3324": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3325": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3326": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3327": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "SUB",
      "path": "50"
    },
    "3328": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3329": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3330": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "GAS",
      "path": "50"
    },
    "3331": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "3332": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3333": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3334": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3335": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD14"
    },
    "3338": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3339": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3340": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3342": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3343": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3344": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3345": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3347": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3348": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3349": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "POP",
      "path": "50"
    },
    "3350": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "POP",
      "path": "50"
    },
    "3351": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "POP",
      "path": "50"
    },
    "3352": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "POP",
      "path": "50"
    },
    "3353": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3355": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3356": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3357": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3359": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "NOT",
      "path": "50"
    },
    "3360": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3362": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3363": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "ADD",
      "path": "50"
    },
    "3364": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "AND",
      "path": "50"
    },
    "3365": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3366": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "ADD",
      "path": "50"
    },
    "3367": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3368": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3370": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3371": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "POP",
      "path": "50"
    },
    "3372": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3373": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "ADD",
      "path": "50"
    },
    "3374": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3375": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD38"
    },
    "3378": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3379": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3380": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "3383": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6482,
        6508
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3384": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6482,
        6508
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3385": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6458,
        6508
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3386": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6458,
        6508
      ],
      "op": "POP",
      "path": "50"
    },
    "3387": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6577,
        6595
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3389": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6614
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3396": {
      "op": "SHL"
    },
    "3397": {
      "op": "SUB"
    },
    "3398": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6627
      ],
      "op": "AND",
      "path": "50"
    },
    "3399": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6747,
        6758
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3400": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6776,
        6788
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3401": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6806,
        6816
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3402": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6834,
        6844
      ],
      "op": "DUP8",
      "path": "50"
    },
    "3403": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3405": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3406": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "3408": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "ADD",
      "path": "50"
    },
    "3409": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD5D"
    },
    "3412": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "3413": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3414": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3415": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3416": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3417": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x295F"
    },
    "3420": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6641,
        6858
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3421": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3422": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3424": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3425": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3428": {
      "op": "NOT"
    },
    "3429": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3430": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3431": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SUB",
      "path": "50"
    },
    "3432": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "ADD",
      "path": "50"
    },
    "3433": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3434": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3435": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3436": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3437": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3438": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3440": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3441": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "ADD",
      "path": "50"
    },
    "3442": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3443": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3450": {
      "op": "SHL"
    },
    "3451": {
      "op": "SUB"
    },
    "3452": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "AND",
      "path": "50"
    },
    "3453": {
      "op": "PUSH4",
      "value": "0xA95FBE1"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3460": {
      "op": "SHL"
    },
    "3461": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "OR",
      "path": "50"
    },
    "3462": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3463": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3464": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3465": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD92"
    },
    "3468": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3469": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6641,
        6858
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3470": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "3473": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "i",
      "offset": [
        6601,
        6868
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3474": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3475": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3477": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3479": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3480": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3481": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3482": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "SUB",
      "path": "50"
    },
    "3483": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3484": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3485": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "GAS",
      "path": "50"
    },
    "3486": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "3487": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3488": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "POP",
      "path": "50"
    },
    "3489": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "POP",
      "path": "50"
    },
    "3490": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3491": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3492": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3494": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3495": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "EQ",
      "path": "50"
    },
    "3496": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDCD"
    },
    "3499": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3500": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3502": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3503": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3504": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "POP",
      "path": "50"
    },
    "3505": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3507": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "NOT",
      "path": "50"
    },
    "3508": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "3510": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3511": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "ADD",
      "path": "50"
    },
    "3512": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "AND",
      "path": "50"
    },
    "3513": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3514": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "ADD",
      "path": "50"
    },
    "3515": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3517": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3518": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3519": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3520": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3521": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3522": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3524": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3526": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3527": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "ADD",
      "path": "50"
    },
    "3528": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3529": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDD2"
    },
    "3532": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3533": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3534": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3536": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3537": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "POP",
      "path": "50"
    },
    "3538": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3539": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6601,
        6868
      ],
      "op": "POP",
      "path": "50"
    },
    "3540": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6576,
        6868
      ],
      "op": "POP",
      "path": "50"
    },
    "3541": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6576,
        6868
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3542": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6576,
        6868
      ],
      "op": "POP",
      "path": "50"
    },
    "3543": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6919,
        6923
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3545": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6913,
        6924
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3546": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6949,
        6965
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3547": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7001,
        7005
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3548": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6998,
        6999
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3550": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6993,
        6996
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3551": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6978,
        7006
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3552": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7030,
        7043
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3553": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7019,
        7095
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xDE8"
    },
    "3556": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7019,
        7095
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3557": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7076,
        7080
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3558": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7071,
        7074
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3559": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7064,
        7081
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3560": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7019,
        7095
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3561": {
      "op": "POP"
    },
    "3562": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7118,
        7128
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3563": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        7118,
        7128
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "3564": {
      "fn": "CLHouse.PropRemoveUser",
      "offset": [
        6237,
        7144
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "3565": {
      "op": "POP"
    },
    "3566": {
      "op": "POP"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "op": "POP"
    },
    "3569": {
      "op": "POP"
    },
    "3570": {
      "op": "POP"
    },
    "3571": {
      "op": "POP"
    },
    "3572": {
      "fn": "CLHouse.PropRemoveUser",
      "jump": "o",
      "offset": [
        6237,
        7144
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3573": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3574": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5181,
        5195
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3576": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5212,
        5233
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3577": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "3579": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3581": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3582": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3583": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3584": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "3587": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "EXP",
      "path": "50"
    },
    "3588": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3589": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "DIV",
      "path": "50"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3596": {
      "op": "SHL"
    },
    "3597": {
      "op": "SUB"
    },
    "3598": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5246
      ],
      "op": "AND",
      "path": "50"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3605": {
      "op": "SHL"
    },
    "3606": {
      "op": "SUB"
    },
    "3607": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5260
      ],
      "op": "AND",
      "path": "50"
    },
    "3608": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5260
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "3613": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3615": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3616": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3617": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "3622": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "AND",
      "path": "50"
    },
    "3623": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "3625": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "SHL",
      "path": "50"
    },
    "3626": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3627": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3628": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "3630": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "ADD",
      "path": "50"
    },
    "3631": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3633": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3635": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3636": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3637": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3638": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "SUB",
      "path": "50"
    },
    "3639": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3640": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP7",
      "path": "50"
    },
    "3641": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "GAS",
      "path": "50"
    },
    "3642": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "3643": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3644": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3645": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "3646": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE4B"
    },
    "3649": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3650": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3651": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3653": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3654": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3655": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3656": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3658": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3659": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3660": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "POP",
      "path": "50"
    },
    "3661": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "POP",
      "path": "50"
    },
    "3662": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "POP",
      "path": "50"
    },
    "3663": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "POP",
      "path": "50"
    },
    "3664": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3666": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3667": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3668": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3670": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "NOT",
      "path": "50"
    },
    "3671": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3673": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3674": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "ADD",
      "path": "50"
    },
    "3675": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "AND",
      "path": "50"
    },
    "3676": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3677": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "ADD",
      "path": "50"
    },
    "3678": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3679": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3681": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3682": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "POP",
      "path": "50"
    },
    "3683": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3684": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "ADD",
      "path": "50"
    },
    "3685": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3686": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE6F"
    },
    "3689": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3690": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3691": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "3694": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5236,
        5262
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3695": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5236,
        5262
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3696": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5212,
        5262
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3697": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5212,
        5262
      ],
      "op": "POP",
      "path": "50"
    },
    "3698": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5331,
        5349
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3700": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5368
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3707": {
      "op": "SHL"
    },
    "3708": {
      "op": "SUB"
    },
    "3709": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5381
      ],
      "op": "AND",
      "path": "50"
    },
    "3710": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5513,
        5524
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3711": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5542,
        5547
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3712": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5565,
        5577
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3713": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5595,
        5605
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3714": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5623,
        5633
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3715": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5651,
        5661
      ],
      "op": "DUP10",
      "path": "50"
    },
    "3716": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3718": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3719": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "3721": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "ADD",
      "path": "50"
    },
    "3722": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xE98"
    },
    "3725": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "3726": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "3727": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "3728": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3729": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "3730": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3731": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3732": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x299B"
    },
    "3735": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5395,
        5675
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3736": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3737": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3739": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3740": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3743": {
      "op": "NOT"
    },
    "3744": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3745": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3746": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SUB",
      "path": "50"
    },
    "3747": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "ADD",
      "path": "50"
    },
    "3748": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3749": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3750": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3751": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3752": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3753": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3755": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3756": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "ADD",
      "path": "50"
    },
    "3757": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3758": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "op": "SUB"
    },
    "3767": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "AND",
      "path": "50"
    },
    "3768": {
      "op": "PUSH4",
      "value": "0x31A0AFA7"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "OR",
      "path": "50"
    },
    "3777": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3778": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3779": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3780": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xECD"
    },
    "3783": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3784": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5395,
        5675
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3785": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "3788": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "i",
      "offset": [
        5355,
        5685
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3789": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3790": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3792": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3794": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3795": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3796": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3797": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "SUB",
      "path": "50"
    },
    "3798": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3799": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP6",
      "path": "50"
    },
    "3800": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "GAS",
      "path": "50"
    },
    "3801": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "3802": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3803": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "POP",
      "path": "50"
    },
    "3804": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "POP",
      "path": "50"
    },
    "3805": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3806": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3807": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3809": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3810": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "EQ",
      "path": "50"
    },
    "3811": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF08"
    },
    "3814": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3815": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3817": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3818": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3819": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "POP",
      "path": "50"
    },
    "3820": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "3822": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "NOT",
      "path": "50"
    },
    "3823": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "3825": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3826": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "ADD",
      "path": "50"
    },
    "3827": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "AND",
      "path": "50"
    },
    "3828": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3829": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "ADD",
      "path": "50"
    },
    "3830": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3832": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3833": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3834": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3835": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "3836": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3837": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3839": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "3841": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3842": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "ADD",
      "path": "50"
    },
    "3843": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3844": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF0D"
    },
    "3847": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3848": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3849": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "3851": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3852": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "POP",
      "path": "50"
    },
    "3853": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3854": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5355,
        5685
      ],
      "op": "POP",
      "path": "50"
    },
    "3855": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5330,
        5685
      ],
      "op": "POP",
      "path": "50"
    },
    "3856": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5330,
        5685
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3857": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5330,
        5685
      ],
      "op": "POP",
      "path": "50"
    },
    "3858": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5736,
        5740
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3860": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5730,
        5741
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3861": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5766,
        5782
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "3862": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5818,
        5822
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3863": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5815,
        5816
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3865": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5810,
        5813
      ],
      "op": "DUP4",
      "path": "50"
    },
    "3866": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5795,
        5823
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "3867": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5847,
        5860
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3868": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5836,
        5912
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xF23"
    },
    "3871": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5836,
        5912
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3872": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5893,
        5897
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3873": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5888,
        5891
      ],
      "op": "DUP3",
      "path": "50"
    },
    "3874": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5881,
        5898
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3875": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5836,
        5912
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3876": {
      "op": "POP"
    },
    "3877": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5935,
        5945
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3878": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        5935,
        5945
      ],
      "op": "SWAP10",
      "path": "50"
    },
    "3879": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        4937,
        5961
      ],
      "op": "SWAP9",
      "path": "50"
    },
    "3880": {
      "op": "POP"
    },
    "3881": {
      "op": "POP"
    },
    "3882": {
      "op": "POP"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "op": "POP"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "POP"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        4937,
        5961
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3890": {
      "offset": [
        1088,
        1132
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3891": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x86"
    },
    "3893": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3894": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3895": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3896": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3897": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "LT",
      "path": "47"
    },
    "3898": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0xF42"
    },
    "3901": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "3902": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "3904": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "DUP1",
      "path": "47"
    },
    "3905": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "REVERT",
      "path": "47"
    },
    "3906": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "3907": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "3909": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3910": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "DUP3",
      "path": "47"
    },
    "3911": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "3912": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "3914": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3915": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "3916": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "3917": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "ADD",
      "path": "47"
    },
    "3918": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "3919": {
      "fn": "CLHouse.PropInviteUser",
      "offset": [
        1088,
        1132
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "3920": {
      "op": "POP"
    },
    "3921": {
      "offset": [
        1088,
        1132
      ],
      "op": "DUP2",
      "path": "47"
    },
    "3922": {
      "fn": "CLHouse.PropInviteUser",
      "jump": "o",
      "offset": [
        1088,
        1132
      ],
      "op": "JUMP",
      "path": "47"
    },
    "3923": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3924": {
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "3926": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3927": {
      "offset": [
        247,
        248
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x1"
    },
    "3929": {
      "fn": "CLHouse.Init",
      "offset": [
        247,
        248
      ],
      "op": "SWAP1",
      "path": "48"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3934": {
      "op": "SHL"
    },
    "3935": {
      "offset": [
        4396,
        4409
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3936": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "DIV",
      "path": "18"
    },
    "3937": {
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3939": {
      "branch": 13,
      "fn": "CLHouse.Init",
      "offset": [
        4396,
        4409
      ],
      "op": "AND",
      "path": "18"
    },
    "3940": {
      "offset": [
        4395,
        4409
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3941": {
      "offset": [
        4395,
        4435
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3942": {
      "fn": "CLHouse.Init",
      "offset": [
        4395,
        4435
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3943": {
      "fn": "CLHouse.Init",
      "offset": [
        4395,
        4435
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF7E"
    },
    "3946": {
      "branch": 13,
      "offset": [
        4395,
        4435
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3947": {
      "op": "POP"
    },
    "3948": {
      "offset": [
        4413,
        4425
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "3950": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3951": {
      "offset": [
        4413,
        4435
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3953": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3954": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3955": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4435
      ],
      "op": "AND",
      "path": "18"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3960": {
      "op": "SHL"
    },
    "3961": {
      "offset": [
        4413,
        4425
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3962": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3963": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "DIV",
      "path": "18"
    },
    "3964": {
      "fn": "CLHouse.Init",
      "offset": [
        4413,
        4425
      ],
      "op": "AND",
      "path": "18"
    },
    "3965": {
      "offset": [
        4413,
        4435
      ],
      "op": "LT",
      "path": "18"
    },
    "3966": {
      "offset": [
        4395,
        4435
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3967": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFE5"
    },
    "3970": {
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3971": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3973": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3980": {
      "op": "SHL"
    },
    "3981": {
      "offset": [
        4387,
        4486
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3982": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3985": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3987": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3988": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "ADD",
      "path": "18"
    },
    "3989": {
      "op": "MSTORE"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4032": {
      "op": "DUP3"
    },
    "4033": {
      "op": "ADD"
    },
    "4034": {
      "op": "MSTORE"
    },
    "4035": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "4052": {
      "op": "SHL"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4055": {
      "op": "DUP3"
    },
    "4056": {
      "op": "ADD"
    },
    "4057": {
      "op": "MSTORE"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4060": {
      "op": "ADD"
    },
    "4061": {
      "offset": [
        4387,
        4486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4063": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4064": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4065": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4066": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SUB",
      "path": "18"
    },
    "4067": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4068": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "18"
    },
    "4069": {
      "fn": "CLHouse.Init",
      "offset": [
        4387,
        4486
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4070": {
      "offset": [
        4496,
        4508
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "4072": {
      "offset": [
        4496,
        4518
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4073": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4078": {
      "op": "SHL"
    },
    "4079": {
      "op": "NOT"
    },
    "4080": {
      "offset": [
        4496,
        4518
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4082": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4083": {
      "fn": "CLHouse.Init",
      "offset": [
        4496,
        4518
      ],
      "op": "AND",
      "path": "18"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4088": {
      "op": "SHL"
    },
    "4089": {
      "offset": [
        4496,
        4518
      ],
      "op": "MUL",
      "path": "18"
    },
    "4090": {
      "offset": [
        4528,
        4548
      ],
      "op": "AND",
      "path": "18"
    },
    "4091": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4096": {
      "op": "SHL"
    },
    "4097": {
      "op": "NOT"
    },
    "4098": {
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4099": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4100": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "AND",
      "path": "18"
    },
    "4101": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "OR",
      "path": "18"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4106": {
      "op": "SHL"
    },
    "4107": {
      "offset": [
        4528,
        4548
      ],
      "op": "OR",
      "path": "18"
    },
    "4108": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4109": {
      "fn": "CLHouse.Init",
      "offset": [
        4528,
        4548
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4110": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        1627
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4111": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        1627
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4112": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4114": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4117": {
      "op": "SWAP2"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4124": {
      "op": "SHL"
    },
    "4125": {
      "op": "SUB"
    },
    "4126": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        1640
      ],
      "op": "AND",
      "path": "50"
    },
    "4127": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        1640
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4128": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x103B"
    },
    "4131": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4132": {
      "fn": "CLHouse.Init",
      "offset": [
        1797,
        1803
      ],
      "op": "DUP13",
      "path": "50"
    },
    "4133": {
      "fn": "CLHouse.Init",
      "offset": [
        1797,
        1803
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4134": {
      "fn": "CLHouse.Init",
      "offset": [
        1822,
        1832
      ],
      "op": "DUP13",
      "path": "50"
    },
    "4135": {
      "fn": "CLHouse.Init",
      "offset": [
        1822,
        1832
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4136": {
      "fn": "CLHouse.Init",
      "offset": [
        1850,
        1863
      ],
      "op": "DUP13",
      "path": "50"
    },
    "4137": {
      "fn": "CLHouse.Init",
      "offset": [
        1850,
        1863
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4138": {
      "fn": "CLHouse.Init",
      "offset": [
        1881,
        1891
      ],
      "op": "DUP13",
      "path": "50"
    },
    "4139": {
      "fn": "CLHouse.Init",
      "offset": [
        1881,
        1891
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4140": {
      "fn": "CLHouse.Init",
      "offset": [
        1909,
        1918
      ],
      "op": "DUP13",
      "path": "50"
    },
    "4141": {
      "fn": "CLHouse.Init",
      "offset": [
        1909,
        1918
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4142": {
      "fn": "CLHouse.Init",
      "offset": [
        1936,
        1945
      ],
      "op": "DUP13",
      "path": "50"
    },
    "4143": {
      "fn": "CLHouse.Init",
      "offset": [
        1936,
        1945
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4144": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        1590
      ],
      "op": "DUP13",
      "path": "50"
    },
    "4145": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        1590
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4146": {
      "fn": "CLHouse.Init",
      "offset": [
        1985,
        2000
      ],
      "op": "DUP13",
      "path": "50"
    },
    "4147": {
      "fn": "CLHouse.Init",
      "offset": [
        1985,
        2000
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4148": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4150": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "ADD",
      "path": "50"
    },
    "4151": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2A70"
    },
    "4154": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1654,
        2014
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4155": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4156": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4158": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4159": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4162": {
      "op": "NOT"
    },
    "4163": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4164": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4165": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "SUB",
      "path": "50"
    },
    "4166": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "ADD",
      "path": "50"
    },
    "4167": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4168": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4169": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4170": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4171": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4172": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4174": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4175": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "ADD",
      "path": "50"
    },
    "4176": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4177": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4184": {
      "op": "SHL"
    },
    "4185": {
      "op": "SUB"
    },
    "4186": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "AND",
      "path": "50"
    },
    "4187": {
      "op": "PUSH4",
      "value": "0x864CF155"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4194": {
      "op": "SHL"
    },
    "4195": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "OR",
      "path": "50"
    },
    "4196": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4197": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4198": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4199": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1070"
    },
    "4202": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4203": {
      "fn": "CLHouse.Init",
      "offset": [
        1654,
        2014
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4204": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "4207": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        1586,
        2024
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4208": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4209": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4211": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4213": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4214": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4215": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4216": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "SUB",
      "path": "50"
    },
    "4217": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4218": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4219": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "GAS",
      "path": "50"
    },
    "4220": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "4221": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4222": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "POP",
      "path": "50"
    },
    "4223": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "POP",
      "path": "50"
    },
    "4224": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4225": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4226": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4228": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4229": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "EQ",
      "path": "50"
    },
    "4230": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10AB"
    },
    "4233": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4234": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4236": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4237": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4238": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "POP",
      "path": "50"
    },
    "4239": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4241": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "NOT",
      "path": "50"
    },
    "4242": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "4244": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4245": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "ADD",
      "path": "50"
    },
    "4246": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "AND",
      "path": "50"
    },
    "4247": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4248": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "ADD",
      "path": "50"
    },
    "4249": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4251": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4252": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4253": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4254": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4255": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4256": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4258": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4260": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4261": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "ADD",
      "path": "50"
    },
    "4262": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4263": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10B0"
    },
    "4266": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4267": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4268": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4270": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4271": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "POP",
      "path": "50"
    },
    "4272": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4273": {
      "fn": "CLHouse.Init",
      "offset": [
        1586,
        2024
      ],
      "op": "POP",
      "path": "50"
    },
    "4274": {
      "fn": "CLHouse.Init",
      "offset": [
        1561,
        2024
      ],
      "op": "POP",
      "path": "50"
    },
    "4275": {
      "fn": "CLHouse.Init",
      "offset": [
        1561,
        2024
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4276": {
      "fn": "CLHouse.Init",
      "offset": [
        1561,
        2024
      ],
      "op": "POP",
      "path": "50"
    },
    "4277": {
      "branch": 9,
      "fn": "CLHouse.Init",
      "offset": [
        2040,
        2053
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 3
    },
    "4278": {
      "fn": "CLHouse.Init",
      "offset": [
        2035,
        2267
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10C6"
    },
    "4281": {
      "branch": 9,
      "fn": "CLHouse.Init",
      "offset": [
        2035,
        2267
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4282": {
      "fn": "CLHouse.Init",
      "offset": [
        2114,
        2118
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4284": {
      "fn": "CLHouse.Init",
      "offset": [
        2108,
        2119
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4285": {
      "fn": "CLHouse.Init",
      "offset": [
        2148,
        2164
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4286": {
      "fn": "CLHouse.Init",
      "offset": [
        2204,
        2208
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4287": {
      "fn": "CLHouse.Init",
      "offset": [
        2201,
        2202
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4289": {
      "fn": "CLHouse.Init",
      "offset": [
        2196,
        2199
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4290": {
      "fn": "CLHouse.Init",
      "offset": [
        2181,
        2209
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4291": {
      "fn": "CLHouse.Init",
      "offset": [
        2238,
        2242
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4292": {
      "fn": "CLHouse.Init",
      "offset": [
        2233,
        2236
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4293": {
      "fn": "CLHouse.Init",
      "offset": [
        2226,
        2243
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4294": {
      "fn": "CLHouse.Init",
      "offset": [
        2035,
        2267
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4295": {
      "op": "POP"
    },
    "4296": {
      "offset": [
        4569,
        4582
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC5"
    },
    "4298": {
      "offset": [
        4569,
        4590
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4299": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4304": {
      "op": "SHL"
    },
    "4305": {
      "op": "NOT"
    },
    "4306": {
      "offset": [
        4569,
        4590
      ],
      "op": "AND",
      "path": "18"
    },
    "4307": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4308": {
      "fn": "CLHouse.Init",
      "offset": [
        4569,
        4590
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4309": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4311": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4314": {
      "op": "DUP3"
    },
    "4315": {
      "op": "AND"
    },
    "4316": {
      "op": "DUP2"
    },
    "4317": {
      "op": "MSTORE"
    },
    "4318": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
    },
    "4351": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "offset": [
        4605,
        4625
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4357": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4358": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4359": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4360": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SUB",
      "path": "18"
    },
    "4361": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4362": {
      "fn": "CLHouse.Init",
      "offset": [
        4605,
        4625
      ],
      "op": "LOG1",
      "path": "18"
    },
    "4363": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4364": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4365": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4366": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4367": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4368": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4369": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4370": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4371": {
      "fn": "CLHouse.Init",
      "offset": [
        1149,
        2273
      ],
      "op": "POP",
      "path": "50"
    },
    "4372": {
      "fn": "CLHouse.Init",
      "jump": "o",
      "offset": [
        1149,
        2273
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4373": {
      "offset": [
        792,
        816
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4374": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x42"
    },
    "4376": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4377": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4378": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1122"
    },
    "4381": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4382": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "4385": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        792,
        816
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4386": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4387": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4388": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "4390": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4391": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4393": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4394": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4395": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DIV",
      "path": "47"
    },
    "4396": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MUL",
      "path": "47"
    },
    "4397": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4399": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4400": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "4402": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "4403": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4404": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4405": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4406": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "4408": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4409": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4410": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "4411": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4412": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4413": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4414": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4415": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4416": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4418": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4419": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4420": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4421": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4422": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x114E"
    },
    "4425": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4426": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "4429": {
      "fn": "CLHouse.Init",
      "jump": "i",
      "offset": [
        792,
        816
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4430": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4431": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4432": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "4433": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x119B"
    },
    "4436": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "4437": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4438": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "4440": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "LT",
      "path": "47"
    },
    "4441": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1170"
    },
    "4444": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "4445": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "4448": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4449": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP4",
      "path": "47"
    },
    "4450": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4451": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DIV",
      "path": "47"
    },
    "4452": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MUL",
      "path": "47"
    },
    "4453": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP4",
      "path": "47"
    },
    "4454": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4455": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4456": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4458": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4459": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4460": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x119B"
    },
    "4463": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4464": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4465": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4466": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4467": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4468": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4469": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "4471": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4472": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4474": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "4476": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "4477": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4478": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4479": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4480": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "4481": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4482": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "4483": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4484": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "4486": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4487": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4488": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "4490": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4491": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP1",
      "path": "47"
    },
    "4492": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP4",
      "path": "47"
    },
    "4493": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "GT",
      "path": "47"
    },
    "4494": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x117E"
    },
    "4497": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "4498": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4499": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "4500": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SUB",
      "path": "47"
    },
    "4501": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "4503": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "AND",
      "path": "47"
    },
    "4504": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP3",
      "path": "47"
    },
    "4505": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "ADD",
      "path": "47"
    },
    "4506": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "4507": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "4508": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "POP",
      "path": "47"
    },
    "4509": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "POP",
      "path": "47"
    },
    "4510": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "POP",
      "path": "47"
    },
    "4511": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "POP",
      "path": "47"
    },
    "4512": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "POP",
      "path": "47"
    },
    "4513": {
      "fn": "CLHouse.Init",
      "offset": [
        792,
        816
      ],
      "op": "DUP2",
      "path": "47"
    },
    "4514": {
      "fn": "CLHouse.Init",
      "jump": "o",
      "offset": [
        792,
        816
      ],
      "op": "JUMP",
      "path": "47"
    },
    "4515": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4516": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10199,
        10213
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4518": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10230,
        10251
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4519": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "4521": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4523": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4524": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "4525": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4526": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "4529": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "EXP",
      "path": "50"
    },
    "4530": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4531": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "DIV",
      "path": "50"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4538": {
      "op": "SHL"
    },
    "4539": {
      "op": "SUB"
    },
    "4540": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10264
      ],
      "op": "AND",
      "path": "50"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4547": {
      "op": "SHL"
    },
    "4548": {
      "op": "SUB"
    },
    "4549": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10278
      ],
      "op": "AND",
      "path": "50"
    },
    "4550": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10278
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "4555": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4557": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4558": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4559": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "4564": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "AND",
      "path": "50"
    },
    "4565": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "4567": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "SHL",
      "path": "50"
    },
    "4568": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4569": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4570": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "4572": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "ADD",
      "path": "50"
    },
    "4573": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4575": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4577": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4578": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4579": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4580": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "SUB",
      "path": "50"
    },
    "4581": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4582": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4583": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "GAS",
      "path": "50"
    },
    "4584": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "4585": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4586": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4587": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4588": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x11F9"
    },
    "4591": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4592": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4593": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4595": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4596": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4597": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4598": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4600": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4601": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4602": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "POP",
      "path": "50"
    },
    "4603": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "POP",
      "path": "50"
    },
    "4604": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "POP",
      "path": "50"
    },
    "4605": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "POP",
      "path": "50"
    },
    "4606": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4608": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4609": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4610": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4612": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "NOT",
      "path": "50"
    },
    "4613": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4615": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4616": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "ADD",
      "path": "50"
    },
    "4617": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "AND",
      "path": "50"
    },
    "4618": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4619": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "ADD",
      "path": "50"
    },
    "4620": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4621": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4623": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4624": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "POP",
      "path": "50"
    },
    "4625": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4626": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "ADD",
      "path": "50"
    },
    "4627": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4628": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x121D"
    },
    "4631": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4632": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4633": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "4636": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10254,
        10280
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4637": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10254,
        10280
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4638": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10230,
        10280
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4639": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10230,
        10280
      ],
      "op": "POP",
      "path": "50"
    },
    "4640": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10349,
        10367
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4642": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10386
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4649": {
      "op": "SHL"
    },
    "4650": {
      "op": "SUB"
    },
    "4651": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10399
      ],
      "op": "AND",
      "path": "50"
    },
    "4652": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10511,
        10531
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4653": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10549,
        10561
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4654": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10579,
        10589
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4655": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4657": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4658": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4660": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "ADD",
      "path": "50"
    },
    "4661": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1240"
    },
    "4664": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "4665": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "4666": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4667": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4668": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B08"
    },
    "4671": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10413,
        10603
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4672": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4673": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4675": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4676": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4679": {
      "op": "NOT"
    },
    "4680": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4681": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4682": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "SUB",
      "path": "50"
    },
    "4683": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "ADD",
      "path": "50"
    },
    "4684": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4685": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4686": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4687": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4688": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4689": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4691": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4692": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "ADD",
      "path": "50"
    },
    "4693": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4694": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "op": "SUB"
    },
    "4703": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "AND",
      "path": "50"
    },
    "4704": {
      "op": "PUSH4",
      "value": "0x2EF2C7B"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4711": {
      "op": "SHL"
    },
    "4712": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "OR",
      "path": "50"
    },
    "4713": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4714": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4715": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4716": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1275"
    },
    "4719": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4720": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10413,
        10603
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4721": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "4724": {
      "fn": "CLHouse.PropGovRules",
      "jump": "i",
      "offset": [
        10373,
        10613
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4725": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4726": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4728": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4730": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4731": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4732": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4733": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "SUB",
      "path": "50"
    },
    "4734": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4735": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4736": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "GAS",
      "path": "50"
    },
    "4737": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "4738": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4739": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "POP",
      "path": "50"
    },
    "4740": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "POP",
      "path": "50"
    },
    "4741": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4742": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4743": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4745": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4746": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "EQ",
      "path": "50"
    },
    "4747": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12B0"
    },
    "4750": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4751": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4753": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4754": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4755": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "POP",
      "path": "50"
    },
    "4756": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4758": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "NOT",
      "path": "50"
    },
    "4759": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "4761": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4762": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "ADD",
      "path": "50"
    },
    "4763": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "AND",
      "path": "50"
    },
    "4764": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4765": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "ADD",
      "path": "50"
    },
    "4766": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4768": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4769": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4770": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4771": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4772": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4773": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4775": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4777": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4778": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "ADD",
      "path": "50"
    },
    "4779": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4780": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12B5"
    },
    "4783": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4784": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4785": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4787": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4788": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "POP",
      "path": "50"
    },
    "4789": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4790": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10373,
        10613
      ],
      "op": "POP",
      "path": "50"
    },
    "4791": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10348,
        10613
      ],
      "op": "POP",
      "path": "50"
    },
    "4792": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10348,
        10613
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4793": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10348,
        10613
      ],
      "op": "POP",
      "path": "50"
    },
    "4794": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10664,
        10668
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4796": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10658,
        10669
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4797": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10694,
        10710
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4798": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10746,
        10750
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4799": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10743,
        10744
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4801": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10738,
        10741
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4802": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10723,
        10751
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4803": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10775,
        10788
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4804": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10764,
        10840
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x12CB"
    },
    "4807": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10764,
        10840
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4808": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10821,
        10825
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4809": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10816,
        10819
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4810": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10809,
        10826
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4811": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10764,
        10840
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10863,
        10873
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4814": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10863,
        10873
      ],
      "op": "SWAP7",
      "path": "50"
    },
    "4815": {
      "fn": "CLHouse.PropGovRules",
      "offset": [
        10035,
        10889
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "4816": {
      "op": "POP"
    },
    "4817": {
      "op": "POP"
    },
    "4818": {
      "op": "POP"
    },
    "4819": {
      "op": "POP"
    },
    "4820": {
      "op": "POP"
    },
    "4821": {
      "op": "POP"
    },
    "4822": {
      "fn": "CLHouse.PropGovRules",
      "jump": "o",
      "offset": [
        10035,
        10889
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4823": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4824": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2721,
        2732
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4826": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2746,
        2767
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "4828": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2792,
        2813
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4830": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "4832": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4834": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4835": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "4836": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4837": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "4840": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "EXP",
      "path": "50"
    },
    "4841": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4842": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "DIV",
      "path": "50"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "op": "SUB"
    },
    "4851": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2826
      ],
      "op": "AND",
      "path": "50"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4858": {
      "op": "SHL"
    },
    "4859": {
      "op": "SUB"
    },
    "4860": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2840
      ],
      "op": "AND",
      "path": "50"
    },
    "4861": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2840
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "4866": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4868": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4869": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4870": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "4875": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "AND",
      "path": "50"
    },
    "4876": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "4878": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "SHL",
      "path": "50"
    },
    "4879": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4880": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4881": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "4883": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "ADD",
      "path": "50"
    },
    "4884": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "4886": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4888": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4889": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4890": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP4",
      "path": "50"
    },
    "4891": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "SUB",
      "path": "50"
    },
    "4892": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4893": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP7",
      "path": "50"
    },
    "4894": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "GAS",
      "path": "50"
    },
    "4895": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "4896": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4897": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4898": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "4899": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1330"
    },
    "4902": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4903": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4904": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4906": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4907": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "4908": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4909": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4911": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4912": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4913": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "POP",
      "path": "50"
    },
    "4914": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "POP",
      "path": "50"
    },
    "4915": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "POP",
      "path": "50"
    },
    "4916": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "POP",
      "path": "50"
    },
    "4917": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4919": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4920": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "4921": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4923": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "NOT",
      "path": "50"
    },
    "4924": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "4926": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4927": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "ADD",
      "path": "50"
    },
    "4928": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "AND",
      "path": "50"
    },
    "4929": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP3",
      "path": "50"
    },
    "4930": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "ADD",
      "path": "50"
    },
    "4931": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4932": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4934": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4935": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "POP",
      "path": "50"
    },
    "4936": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4937": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "ADD",
      "path": "50"
    },
    "4938": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4939": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1354"
    },
    "4942": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4943": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4944": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "4947": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2816,
        2842
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4948": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2816,
        2842
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4949": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2792,
        2842
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4950": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2792,
        2842
      ],
      "op": "POP",
      "path": "50"
    },
    "4951": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2911,
        2929
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4953": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        2948
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4960": {
      "op": "SHL"
    },
    "4961": {
      "op": "SUB"
    },
    "4962": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        2961
      ],
      "op": "AND",
      "path": "50"
    },
    "4963": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3053,
        3060
      ],
      "op": "DUP6",
      "path": "50"
    },
    "4964": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4966": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4967": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "4969": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "ADD",
      "path": "50"
    },
    "4970": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1375"
    },
    "4973": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4974": {
      "op": "DUP2"
    },
    "4975": {
      "op": "MSTORE"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4978": {
      "op": "ADD"
    },
    "4979": {
      "op": "SWAP1"
    },
    "4980": {
      "op": "JUMP"
    },
    "4981": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4982": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "4984": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4985": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4988": {
      "op": "NOT"
    },
    "4989": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4990": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "DUP5",
      "path": "50"
    },
    "4991": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "SUB",
      "path": "50"
    },
    "4992": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "ADD",
      "path": "50"
    },
    "4993": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4994": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4995": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4996": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4997": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "4998": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5000": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5001": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "ADD",
      "path": "50"
    },
    "5002": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5003": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5010": {
      "op": "SHL"
    },
    "5011": {
      "op": "SUB"
    },
    "5012": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "AND",
      "path": "50"
    },
    "5013": {
      "op": "PUSH4",
      "value": "0x5F3D99B3"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5020": {
      "op": "SHL"
    },
    "5021": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "OR",
      "path": "50"
    },
    "5022": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5023": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5024": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5025": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13AA"
    },
    "5028": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5029": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2975,
        3074
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5030": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "5033": {
      "fn": "CLHouse.ExecProp",
      "jump": "i",
      "offset": [
        2935,
        3084
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5034": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5035": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5037": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5039": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5040": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5041": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5042": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "SUB",
      "path": "50"
    },
    "5043": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5044": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5045": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "GAS",
      "path": "50"
    },
    "5046": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "5047": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5048": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "POP",
      "path": "50"
    },
    "5049": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "POP",
      "path": "50"
    },
    "5050": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5051": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5052": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5054": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5055": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "EQ",
      "path": "50"
    },
    "5056": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13E5"
    },
    "5059": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5060": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5062": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5063": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5064": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "POP",
      "path": "50"
    },
    "5065": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5067": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "NOT",
      "path": "50"
    },
    "5068": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "5070": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5071": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "ADD",
      "path": "50"
    },
    "5072": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "AND",
      "path": "50"
    },
    "5073": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5074": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "ADD",
      "path": "50"
    },
    "5075": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5077": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5078": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5079": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5080": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5081": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5082": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5084": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5086": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5087": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "ADD",
      "path": "50"
    },
    "5088": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5089": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x13EA"
    },
    "5092": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5093": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5094": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "5096": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5097": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "POP",
      "path": "50"
    },
    "5098": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5099": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2935,
        3084
      ],
      "op": "POP",
      "path": "50"
    },
    "5100": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2910,
        3084
      ],
      "op": "POP",
      "path": "50"
    },
    "5101": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2910,
        3084
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5102": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2910,
        3084
      ],
      "op": "POP",
      "path": "50"
    },
    "5103": {
      "branch": 10,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3100,
        3113
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 4
    },
    "5104": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3095,
        3327
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1400"
    },
    "5107": {
      "branch": 10,
      "fn": "CLHouse.ExecProp",
      "offset": [
        3095,
        3327
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5108": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3174,
        3178
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5110": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3168,
        3179
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5111": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3208,
        3224
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5112": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3264,
        3268
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5113": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3261,
        3262
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5115": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3256,
        3259
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5116": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3241,
        3269
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5117": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3298,
        3302
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5118": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3293,
        3296
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5119": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3286,
        3303
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5120": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3095,
        3327
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5121": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3346,
        3350
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 5,
      "value": "0x1"
    },
    "5123": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5125": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5126": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5127": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5129": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "ADD",
      "path": "50"
    },
    "5130": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5132": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5133": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5134": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x19"
    },
    "5136": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5137": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5138": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5140": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "ADD",
      "path": "50"
    },
    "5141": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x537563636573732065786563757465642070726F706F73616C00000000000000"
    },
    "5174": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5175": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5176": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "POP",
      "path": "50"
    },
    "5177": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5178": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "POP",
      "path": "50"
    },
    "5179": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5180": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "POP",
      "path": "50"
    },
    "5181": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "POP",
      "path": "50"
    },
    "5182": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        3337,
        3382
      ],
      "op": "POP",
      "path": "50"
    },
    "5183": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5184": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "POP",
      "path": "50"
    },
    "5185": {
      "fn": "CLHouse.ExecProp",
      "offset": [
        2628,
        3389
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5186": {
      "fn": "CLHouse.ExecProp",
      "jump": "o",
      "offset": [
        2628,
        3389
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5187": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7489,
        8373
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5188": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7664,
        7678
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5190": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7695,
        7716
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5191": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5193": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5195": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5196": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5197": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5198": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "5201": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "EXP",
      "path": "50"
    },
    "5202": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5203": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "DIV",
      "path": "50"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5210": {
      "op": "SHL"
    },
    "5211": {
      "op": "SUB"
    },
    "5212": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7729
      ],
      "op": "AND",
      "path": "50"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5219": {
      "op": "SHL"
    },
    "5220": {
      "op": "SUB"
    },
    "5221": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7743
      ],
      "op": "AND",
      "path": "50"
    },
    "5222": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7743
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "5227": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5229": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5230": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5231": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "5236": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "AND",
      "path": "50"
    },
    "5237": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "5239": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "SHL",
      "path": "50"
    },
    "5240": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5241": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5242": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5244": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "ADD",
      "path": "50"
    },
    "5245": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5247": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5249": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5250": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5251": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5252": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "SUB",
      "path": "50"
    },
    "5253": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5254": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5255": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "GAS",
      "path": "50"
    },
    "5256": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5257": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5258": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5259": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5260": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1499"
    },
    "5263": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5264": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5265": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5267": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5268": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5269": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5270": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5272": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5273": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5274": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "POP",
      "path": "50"
    },
    "5275": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "POP",
      "path": "50"
    },
    "5276": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "POP",
      "path": "50"
    },
    "5277": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "POP",
      "path": "50"
    },
    "5278": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5280": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5281": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5282": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5284": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "NOT",
      "path": "50"
    },
    "5285": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5287": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5288": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "ADD",
      "path": "50"
    },
    "5289": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "AND",
      "path": "50"
    },
    "5290": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5291": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "ADD",
      "path": "50"
    },
    "5292": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5293": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5295": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5296": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "POP",
      "path": "50"
    },
    "5297": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5298": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "ADD",
      "path": "50"
    },
    "5299": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5300": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x14BD"
    },
    "5303": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5304": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5305": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "5308": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7719,
        7745
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5309": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7719,
        7745
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5310": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7695,
        7745
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5311": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7695,
        7745
      ],
      "op": "POP",
      "path": "50"
    },
    "5312": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7814,
        7832
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5314": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7838,
        7851
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5321": {
      "op": "SHL"
    },
    "5322": {
      "op": "SUB"
    },
    "5323": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7838,
        7864
      ],
      "op": "AND",
      "path": "50"
    },
    "5324": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7981,
        7984
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5325": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8002,
        8015
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5326": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8033,
        8045
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5327": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        8063,
        8073
      ],
      "op": "DUP8",
      "path": "50"
    },
    "5328": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5330": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5331": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5333": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "ADD",
      "path": "50"
    },
    "5334": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x14E2"
    },
    "5337": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "5338": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5339": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5340": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5341": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5342": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2838"
    },
    "5345": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7878,
        8087
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5346": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5347": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5349": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5350": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5353": {
      "op": "NOT"
    },
    "5354": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5355": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5356": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SUB",
      "path": "50"
    },
    "5357": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "ADD",
      "path": "50"
    },
    "5358": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5359": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5360": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5361": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5362": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5363": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5365": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5366": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "ADD",
      "path": "50"
    },
    "5367": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5368": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5375": {
      "op": "SHL"
    },
    "5376": {
      "op": "SUB"
    },
    "5377": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "AND",
      "path": "50"
    },
    "5378": {
      "op": "PUSH4",
      "value": "0xF8C70A9"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5385": {
      "op": "SHL"
    },
    "5386": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "OR",
      "path": "50"
    },
    "5387": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5388": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5389": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7838,
        8097
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5390": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7838,
        8097
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD92"
    },
    "5393": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7838,
        8097
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5394": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7878,
        8087
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5395": {
      "fn": "CLHouse.PropTxWei",
      "offset": [
        7838,
        8097
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "5398": {
      "fn": "CLHouse.PropTxWei",
      "jump": "i",
      "offset": [
        7838,
        8097
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5399": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5400": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12456
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5402": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12456
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5403": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5405": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5406": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5407": {
      "op": "PUSH4",
      "value": "0x529382D5"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5414": {
      "op": "SHL"
    },
    "5415": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5416": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5417": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5418": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5419": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12418,
        12443
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5421": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12418,
        12443
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5428": {
      "op": "SHL"
    },
    "5429": {
      "op": "SUB"
    },
    "5430": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12456
      ],
      "op": "AND",
      "path": "50"
    },
    "5431": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12456
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5432": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12474
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0x529382D5"
    },
    "5437": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12474
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5438": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5440": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5441": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5442": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "ADD",
      "path": "50"
    },
    "5443": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5444": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5446": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5447": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5448": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5449": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5450": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5451": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SUB",
      "path": "50"
    },
    "5452": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "ADD",
      "path": "50"
    },
    "5453": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5454": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12456
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5455": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "GAS",
      "path": "50"
    },
    "5456": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5457": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5458": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5459": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5460": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1561"
    },
    "5463": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5464": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5465": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5467": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5468": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5469": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5470": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5472": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5473": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5474": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "POP",
      "path": "50"
    },
    "5475": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "POP",
      "path": "50"
    },
    "5476": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "POP",
      "path": "50"
    },
    "5477": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "POP",
      "path": "50"
    },
    "5478": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5480": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5481": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5482": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5484": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "NOT",
      "path": "50"
    },
    "5485": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5487": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5488": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "ADD",
      "path": "50"
    },
    "5489": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "AND",
      "path": "50"
    },
    "5490": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5491": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "ADD",
      "path": "50"
    },
    "5492": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5493": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5495": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5496": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "POP",
      "path": "50"
    },
    "5497": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5498": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "ADD",
      "path": "50"
    },
    "5499": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5500": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1585"
    },
    "5503": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5504": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5505": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "5508": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12446,
        12476
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5509": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12446,
        12476
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5510": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12418,
        12476
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5511": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12418,
        12476
      ],
      "op": "POP",
      "path": "50"
    },
    "5512": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12545,
        12563
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5514": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12586
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5521": {
      "op": "SHL"
    },
    "5522": {
      "op": "SUB"
    },
    "5523": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12599
      ],
      "op": "AND",
      "path": "50"
    },
    "5524": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12709,
        12720
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5525": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12738,
        12748
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5526": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5528": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5529": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5531": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "ADD",
      "path": "50"
    },
    "5532": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x15A6"
    },
    "5535": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5536": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5537": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5538": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x247B"
    },
    "5541": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12613,
        12762
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5542": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5543": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5545": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5546": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5549": {
      "op": "NOT"
    },
    "5550": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5551": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5552": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "SUB",
      "path": "50"
    },
    "5553": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "ADD",
      "path": "50"
    },
    "5554": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5555": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5556": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5557": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5558": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5559": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5561": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5562": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "ADD",
      "path": "50"
    },
    "5563": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5564": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5571": {
      "op": "SHL"
    },
    "5572": {
      "op": "SUB"
    },
    "5573": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "AND",
      "path": "50"
    },
    "5574": {
      "op": "PUSH4",
      "value": "0x1039E45B"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5581": {
      "op": "SHL"
    },
    "5582": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "OR",
      "path": "50"
    },
    "5583": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5584": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5585": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5586": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x15DB"
    },
    "5589": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5590": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12613,
        12762
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5591": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "5594": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "i",
      "offset": [
        12569,
        12772
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5595": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5596": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5598": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5600": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5601": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5602": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5603": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "SUB",
      "path": "50"
    },
    "5604": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5605": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5606": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "GAS",
      "path": "50"
    },
    "5607": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "5608": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5609": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "POP",
      "path": "50"
    },
    "5610": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "POP",
      "path": "50"
    },
    "5611": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5612": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5613": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5615": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5616": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "EQ",
      "path": "50"
    },
    "5617": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1616"
    },
    "5620": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5621": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5623": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5624": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5625": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "POP",
      "path": "50"
    },
    "5626": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5628": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "NOT",
      "path": "50"
    },
    "5629": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "5631": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5632": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "ADD",
      "path": "50"
    },
    "5633": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "AND",
      "path": "50"
    },
    "5634": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5635": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "ADD",
      "path": "50"
    },
    "5636": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5638": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5639": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5640": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5641": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5642": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5643": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5645": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5647": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5648": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "ADD",
      "path": "50"
    },
    "5649": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5650": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x161B"
    },
    "5653": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5654": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5655": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "5657": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5658": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "POP",
      "path": "50"
    },
    "5659": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5660": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12569,
        12772
      ],
      "op": "POP",
      "path": "50"
    },
    "5661": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12544,
        12772
      ],
      "op": "POP",
      "path": "50"
    },
    "5662": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12544,
        12772
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5663": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12544,
        12772
      ],
      "op": "POP",
      "path": "50"
    },
    "5664": {
      "branch": 11,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12788,
        12801
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 6
    },
    "5665": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12783,
        13015
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1631"
    },
    "5668": {
      "branch": 11,
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12783,
        13015
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5669": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12862,
        12866
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5671": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12856,
        12867
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5672": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12896,
        12912
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5673": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12952,
        12956
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5674": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12949,
        12950
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5676": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12944,
        12947
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5677": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12929,
        12957
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5678": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12986,
        12990
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5679": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12981,
        12984
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5680": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12974,
        12991
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5681": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12783,
        13015
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5682": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12408,
        13021
      ],
      "op": "POP",
      "path": "50"
    },
    "5683": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12408,
        13021
      ],
      "op": "POP",
      "path": "50"
    },
    "5684": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "POP",
      "path": "50"
    },
    "5685": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "offset": [
        12290,
        13021
      ],
      "op": "POP",
      "path": "50"
    },
    "5686": {
      "fn": "CLHouse.AcceptRejectInvitation",
      "jump": "o",
      "offset": [
        12290,
        13021
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5687": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16037,
        16892
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5688": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16254
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "5690": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16254
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5691": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5693": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5694": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5695": {
      "op": "PUSH4",
      "value": "0xA327AB69"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5702": {
      "op": "SHL"
    },
    "5703": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5704": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5705": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5706": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5707": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16220,
        16241
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5709": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16220,
        16241
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5716": {
      "op": "SHL"
    },
    "5717": {
      "op": "SUB"
    },
    "5718": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16254
      ],
      "op": "AND",
      "path": "50"
    },
    "5719": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16254
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5720": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16268
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "5725": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16268
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5726": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "5728": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5729": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5730": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "ADD",
      "path": "50"
    },
    "5731": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5732": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5734": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5735": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5736": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5737": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5738": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5739": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SUB",
      "path": "50"
    },
    "5740": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "ADD",
      "path": "50"
    },
    "5741": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5742": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16254
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5743": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "GAS",
      "path": "50"
    },
    "5744": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "5745": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5746": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5747": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5748": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1681"
    },
    "5751": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5752": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5753": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5755": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5756": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "5757": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5758": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5760": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5761": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5762": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "POP",
      "path": "50"
    },
    "5763": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "POP",
      "path": "50"
    },
    "5764": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "POP",
      "path": "50"
    },
    "5765": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "POP",
      "path": "50"
    },
    "5766": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5768": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5769": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "5770": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5772": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "NOT",
      "path": "50"
    },
    "5773": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "5775": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5776": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "ADD",
      "path": "50"
    },
    "5777": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "AND",
      "path": "50"
    },
    "5778": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5779": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "ADD",
      "path": "50"
    },
    "5780": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5781": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5783": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5784": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "POP",
      "path": "50"
    },
    "5785": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5786": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "ADD",
      "path": "50"
    },
    "5787": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5788": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x16A5"
    },
    "5791": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5792": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5793": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "5796": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16244,
        16270
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5797": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16244,
        16270
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5798": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16220,
        16270
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5799": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16220,
        16270
      ],
      "op": "POP",
      "path": "50"
    },
    "5800": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16339,
        16357
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5802": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16363,
        16376
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5809": {
      "op": "SHL"
    },
    "5810": {
      "op": "SUB"
    },
    "5811": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16363,
        16389
      ],
      "op": "AND",
      "path": "50"
    },
    "5812": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16502,
        16509
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5813": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16527,
        16535
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5814": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16553,
        16567
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5815": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16585,
        16595
      ],
      "op": "DUP7",
      "path": "50"
    },
    "5816": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5818": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5819": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "5821": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "ADD",
      "path": "50"
    },
    "5822": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x16CA"
    },
    "5825": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "5826": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5827": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5828": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5829": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5830": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B31"
    },
    "5833": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16403,
        16609
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5834": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5835": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5837": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5838": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5841": {
      "op": "NOT"
    },
    "5842": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5843": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5844": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SUB",
      "path": "50"
    },
    "5845": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "ADD",
      "path": "50"
    },
    "5846": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5847": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5848": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5849": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5850": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5851": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5853": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5854": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "ADD",
      "path": "50"
    },
    "5855": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5856": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5863": {
      "op": "SHL"
    },
    "5864": {
      "op": "SUB"
    },
    "5865": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "AND",
      "path": "50"
    },
    "5866": {
      "op": "PUSH4",
      "value": "0xA1C89C9D"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5873": {
      "op": "SHL"
    },
    "5874": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "OR",
      "path": "50"
    },
    "5875": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5876": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5877": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16363,
        16619
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5878": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16363,
        16619
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x727"
    },
    "5881": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16363,
        16619
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5882": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16403,
        16609
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5883": {
      "fn": "CLHouse.bulkVote",
      "offset": [
        16363,
        16619
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "5886": {
      "fn": "CLHouse.bulkVote",
      "jump": "i",
      "offset": [
        16363,
        16619
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5887": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17304,
        17413
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5888": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17354,
        17374
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "5890": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17394,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 7,
      "value": "0x83"
    },
    "5892": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5893": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5894": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5895": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5897": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MUL",
      "path": "50"
    },
    "5898": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5900": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "5901": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5903": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5904": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5905": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5906": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "5907": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5909": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5910": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5911": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5912": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5913": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5914": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5915": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5916": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5917": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5919": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "5920": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5922": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5923": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5924": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5925": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5926": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "LT",
      "path": "50"
    },
    "5927": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5928": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xCB5"
    },
    "5931": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5932": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5934": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP5",
      "path": "50"
    },
    "5935": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5936": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5937": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "5939": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5940": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5941": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5942": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "5943": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "5945": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5946": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5947": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x120"
    },
    "5950": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5951": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "5952": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5953": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5954": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5955": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x7"
    },
    "5957": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5958": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MUL",
      "path": "50"
    },
    "5959": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5960": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5961": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "5962": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5963": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5970": {
      "op": "SHL"
    },
    "5971": {
      "op": "SUB"
    },
    "5972": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5973": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "AND",
      "path": "50"
    },
    "5974": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5975": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "5976": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5977": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5978": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5979": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5980": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5981": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5982": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "5983": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5988": {
      "op": "SHL"
    },
    "5989": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5990": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DIV",
      "path": "50"
    },
    "5991": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "5993": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "AND",
      "path": "50"
    },
    "5994": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x8"
    },
    "5996": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "5997": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "GT",
      "path": "50"
    },
    "5998": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5999": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x177A"
    },
    "6002": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6003": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x177A"
    },
    "6006": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x25C2"
    },
    "6009": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6010": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6011": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x8"
    },
    "6013": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6014": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "GT",
      "path": "50"
    },
    "6015": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6016": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x178B"
    },
    "6019": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6020": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x178B"
    },
    "6023": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x25C2"
    },
    "6026": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6027": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6028": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6029": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6030": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6032": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6033": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6035": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6036": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6037": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6038": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6039": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x179F"
    },
    "6042": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6043": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2924"
    },
    "6046": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6047": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6048": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6049": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6051": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6052": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6054": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6055": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6056": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DIV",
      "path": "50"
    },
    "6057": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MUL",
      "path": "50"
    },
    "6058": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6060": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6061": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6063": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6064": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6065": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6066": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6067": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6069": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6070": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6071": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6072": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6073": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6074": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6075": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6076": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6077": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6079": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6080": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6081": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6082": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6083": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17CB"
    },
    "6086": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6087": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2924"
    },
    "6090": {
      "fn": "CLHouse.GetProposalList",
      "jump": "i",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6091": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6092": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6093": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6094": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1818"
    },
    "6097": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6098": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6099": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6101": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "LT",
      "path": "50"
    },
    "6102": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17ED"
    },
    "6105": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6106": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "6109": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6110": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6111": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6112": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DIV",
      "path": "50"
    },
    "6113": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MUL",
      "path": "50"
    },
    "6114": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6115": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6116": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6117": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6119": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6120": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6121": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1818"
    },
    "6124": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6125": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6126": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6127": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6128": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6129": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6130": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6132": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6133": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6135": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6137": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "KECCAK256",
      "path": "50"
    },
    "6138": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6139": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6140": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6141": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6142": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6143": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6144": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6145": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6147": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6148": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6149": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6151": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6152": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6153": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6154": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "GT",
      "path": "50"
    },
    "6155": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17FB"
    },
    "6158": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6159": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6160": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6161": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SUB",
      "path": "50"
    },
    "6162": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6164": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "AND",
      "path": "50"
    },
    "6165": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6166": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6167": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6168": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6169": {
      "op": "POP"
    },
    "6170": {
      "op": "POP"
    },
    "6171": {
      "op": "POP"
    },
    "6172": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6173": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6174": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6175": {
      "op": "POP"
    },
    "6176": {
      "op": "POP"
    },
    "6177": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x2"
    },
    "6179": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6180": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6181": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6182": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6184": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6185": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6186": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6187": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6188": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6189": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6190": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6191": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3"
    },
    "6193": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6194": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6195": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6196": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6198": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6199": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6200": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6201": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "6203": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6204": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6205": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6206": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "6208": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6209": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6210": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6211": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x5"
    },
    "6213": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6214": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6215": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6216": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "6218": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6219": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6220": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "AND",
      "path": "50"
    },
    "6221": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6222": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6223": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x80"
    },
    "6225": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP6",
      "path": "50"
    },
    "6226": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6227": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6228": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "6231": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6232": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6233": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DIV",
      "path": "50"
    },
    "6234": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "AND",
      "path": "50"
    },
    "6235": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6236": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6237": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xA0"
    },
    "6239": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6240": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6241": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6242": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x6"
    },
    "6244": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6245": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6246": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6247": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6248": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC0"
    },
    "6250": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6251": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6252": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6253": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6254": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6255": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6256": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6257": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "6259": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6260": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6261": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6262": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6263": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6264": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "ADD",
      "path": "50"
    },
    "6265": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1723"
    },
    "6268": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        17387,
        17406
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6269": {
      "offset": [
        1038,
        1082
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6270": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x85"
    },
    "6272": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6273": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6274": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6275": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6276": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "LT",
      "path": "47"
    },
    "6277": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x188D"
    },
    "6280": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6281": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6283": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6284": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "REVERT",
      "path": "47"
    },
    "6285": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6286": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6288": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6289": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6290": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6291": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6293": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6294": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6295": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6296": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "6298": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6299": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6300": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "MUL",
      "path": "47"
    },
    "6301": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "ADD",
      "path": "47"
    },
    "6302": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6303": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6304": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6306": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6307": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "ADD",
      "path": "47"
    },
    "6308": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6309": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "6311": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6312": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "ADD",
      "path": "47"
    },
    "6313": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6314": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "6316": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6317": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP4",
      "path": "47"
    },
    "6318": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "ADD",
      "path": "47"
    },
    "6319": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6326": {
      "op": "SHL"
    },
    "6327": {
      "op": "SUB"
    },
    "6328": {
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6329": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6330": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "AND",
      "path": "47"
    },
    "6331": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6332": {
      "op": "POP"
    },
    "6333": {
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6334": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6335": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6336": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "AND",
      "path": "47"
    },
    "6337": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6338": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "AND",
      "path": "47"
    },
    "6339": {
      "fn": "CLHouse.GetProposalList",
      "offset": [
        1038,
        1082
      ],
      "op": "DUP5",
      "path": "47"
    },
    "6340": {
      "fn": "CLHouse.GetProposalList",
      "jump": "o",
      "offset": [
        1038,
        1082
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6341": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6342": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3885
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "6344": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3885
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "6345": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6347": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6348": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6349": {
      "op": "PUSH4",
      "value": "0xA327AB69"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6356": {
      "op": "SHL"
    },
    "6357": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6358": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6359": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6360": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6361": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3851,
        3872
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6363": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3851,
        3872
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6370": {
      "op": "SHL"
    },
    "6371": {
      "op": "SUB"
    },
    "6372": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3885
      ],
      "op": "AND",
      "path": "50"
    },
    "6373": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3885
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6374": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3899
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "6379": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3899
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6380": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "6382": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6383": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6384": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "ADD",
      "path": "50"
    },
    "6385": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6386": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6388": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6389": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6390": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6391": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6392": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6393": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SUB",
      "path": "50"
    },
    "6394": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "ADD",
      "path": "50"
    },
    "6395": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6396": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3885
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6397": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "GAS",
      "path": "50"
    },
    "6398": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "6399": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6400": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6401": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "6402": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x190F"
    },
    "6405": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6406": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6407": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6409": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6410": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6411": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6412": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6414": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "REVERT",
      "path": "50"
    },
    "6415": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6416": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "POP",
      "path": "50"
    },
    "6417": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "POP",
      "path": "50"
    },
    "6418": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "POP",
      "path": "50"
    },
    "6419": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "POP",
      "path": "50"
    },
    "6420": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6422": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6423": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6424": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6426": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "NOT",
      "path": "50"
    },
    "6427": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6429": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6430": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "ADD",
      "path": "50"
    },
    "6431": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "AND",
      "path": "50"
    },
    "6432": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6433": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "ADD",
      "path": "50"
    },
    "6434": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6435": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6437": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6438": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "POP",
      "path": "50"
    },
    "6439": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6440": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "ADD",
      "path": "50"
    },
    "6441": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6442": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1933"
    },
    "6445": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6446": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6447": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "6450": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3875,
        3901
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6451": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3875,
        3901
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6452": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3851,
        3901
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6453": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3851,
        3901
      ],
      "op": "POP",
      "path": "50"
    },
    "6454": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3970,
        3988
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6456": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4007
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6463": {
      "op": "SHL"
    },
    "6464": {
      "op": "SUB"
    },
    "6465": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4020
      ],
      "op": "AND",
      "path": "50"
    },
    "6466": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4135,
        4142
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6467": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4160,
        4168
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6468": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4186,
        4200
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6469": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4218,
        4228
      ],
      "op": "DUP7",
      "path": "50"
    },
    "6470": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6472": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6473": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "6475": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "ADD",
      "path": "50"
    },
    "6476": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1958"
    },
    "6479": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "6480": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "6481": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "6482": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6483": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6484": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2B9B"
    },
    "6487": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        4034,
        4242
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6488": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6489": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6491": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6492": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6495": {
      "op": "NOT"
    },
    "6496": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6497": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "DUP5",
      "path": "50"
    },
    "6498": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SUB",
      "path": "50"
    },
    "6499": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "ADD",
      "path": "50"
    },
    "6500": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6501": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6502": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6503": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6504": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6505": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6507": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6508": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "ADD",
      "path": "50"
    },
    "6509": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6510": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6517": {
      "op": "SHL"
    },
    "6518": {
      "op": "SUB"
    },
    "6519": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "AND",
      "path": "50"
    },
    "6520": {
      "op": "PUSH4",
      "value": "0x18567541"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6527": {
      "op": "SHL"
    },
    "6528": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "OR",
      "path": "50"
    },
    "6529": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6530": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6531": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6532": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x198D"
    },
    "6535": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6536": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4034,
        4242
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6537": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "6540": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        3994,
        4252
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6541": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6542": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6544": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6546": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6547": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6548": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6549": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "SUB",
      "path": "50"
    },
    "6550": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6551": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP6",
      "path": "50"
    },
    "6552": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "GAS",
      "path": "50"
    },
    "6553": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "6554": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6555": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "POP",
      "path": "50"
    },
    "6556": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "POP",
      "path": "50"
    },
    "6557": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6558": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6559": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6561": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP2",
      "path": "50"
    },
    "6562": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "EQ",
      "path": "50"
    },
    "6563": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x19C8"
    },
    "6566": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6567": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6569": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6570": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6571": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "POP",
      "path": "50"
    },
    "6572": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "6574": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "NOT",
      "path": "50"
    },
    "6575": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "6577": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6578": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "ADD",
      "path": "50"
    },
    "6579": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "AND",
      "path": "50"
    },
    "6580": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6581": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "ADD",
      "path": "50"
    },
    "6582": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6584": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6585": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6586": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6587": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "6588": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6589": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6591": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "6593": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "DUP5",
      "path": "50"
    },
    "6594": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "ADD",
      "path": "50"
    },
    "6595": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6596": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x19CD"
    },
    "6599": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6600": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6601": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "6603": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "6604": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "POP",
      "path": "50"
    },
    "6605": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6606": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3994,
        4252
      ],
      "op": "POP",
      "path": "50"
    },
    "6607": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3969,
        4252
      ],
      "op": "POP",
      "path": "50"
    },
    "6608": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3969,
        4252
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "6609": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3969,
        4252
      ],
      "op": "POP",
      "path": "50"
    },
    "6610": {
      "branch": 12,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4268,
        4281
      ],
      "op": "DUP1",
      "path": "50",
      "statement": 8
    },
    "6611": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4263,
        4495
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x19E3"
    },
    "6614": {
      "branch": 12,
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4263,
        4495
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "6615": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4342,
        4346
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "6617": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4336,
        4347
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "6618": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4376,
        4392
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "6619": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4432,
        4436
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6620": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4429,
        4430
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "6622": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4424,
        4427
      ],
      "op": "DUP4",
      "path": "50"
    },
    "6623": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4409,
        4437
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "6624": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4466,
        4470
      ],
      "op": "DUP1",
      "path": "50"
    },
    "6625": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4461,
        4464
      ],
      "op": "DUP3",
      "path": "50"
    },
    "6626": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4454,
        4471
      ],
      "op": "REVERT",
      "path": "50"
    },
    "6627": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        4263,
        4495
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "6628": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3841,
        4501
      ],
      "op": "POP",
      "path": "50"
    },
    "6629": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3841,
        4501
      ],
      "op": "POP",
      "path": "50"
    },
    "6630": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "POP",
      "path": "50"
    },
    "6631": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "POP",
      "path": "50"
    },
    "6632": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "POP",
      "path": "50"
    },
    "6633": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        3675,
        4501
      ],
      "op": "POP",
      "path": "50"
    },
    "6634": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        3675,
        4501
      ],
      "op": "JUMP",
      "path": "50"
    },
    "6635": {
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6636": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xA5"
    },
    "6638": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6640": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6641": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6642": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6643": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6645": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6646": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6647": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6648": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6650": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6651": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP5",
      "path": "47"
    },
    "6652": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6653": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6654": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6655": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6656": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6657": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6658": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6659": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6660": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6661": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6662": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6663": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6665": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6666": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6667": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6668": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6669": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "6671": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6672": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP5",
      "path": "47"
    },
    "6673": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "AND",
      "path": "47"
    },
    "6674": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6675": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "6678": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6679": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6680": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DIV",
      "path": "47"
    },
    "6681": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "AND",
      "path": "47"
    },
    "6682": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6683": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6684": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6685": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A25"
    },
    "6688": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6689": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "6692": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6693": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6694": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6695": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6697": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6698": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6700": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6701": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6702": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DIV",
      "path": "47"
    },
    "6703": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MUL",
      "path": "47"
    },
    "6704": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6706": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6707": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6709": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "6710": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6711": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6712": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6713": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6715": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6716": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6717": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6718": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6719": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6720": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6721": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6722": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6723": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6725": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6726": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6727": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6728": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6729": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A51"
    },
    "6732": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6733": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "6736": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6737": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6738": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6739": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "6740": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A9E"
    },
    "6743": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6744": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6745": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6747": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "LT",
      "path": "47"
    },
    "6748": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A73"
    },
    "6751": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6752": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "6755": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6756": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6757": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6758": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DIV",
      "path": "47"
    },
    "6759": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MUL",
      "path": "47"
    },
    "6760": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6761": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6762": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6763": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6765": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6766": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6767": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A9E"
    },
    "6770": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6771": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6772": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6773": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6774": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6775": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6776": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6778": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6779": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6781": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6783": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6784": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6785": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6786": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6787": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6788": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6789": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6790": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6791": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6793": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6794": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6795": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6797": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6798": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6799": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6800": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "GT",
      "path": "47"
    },
    "6801": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1A81"
    },
    "6804": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6805": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6806": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6807": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SUB",
      "path": "47"
    },
    "6808": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6810": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "AND",
      "path": "47"
    },
    "6811": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6812": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "ADD",
      "path": "47"
    },
    "6813": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6814": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6815": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "POP",
      "path": "47"
    },
    "6816": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "POP",
      "path": "47"
    },
    "6817": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "POP",
      "path": "47"
    },
    "6818": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "POP",
      "path": "47"
    },
    "6819": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "POP",
      "path": "47"
    },
    "6820": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6821": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "POP",
      "path": "47"
    },
    "6822": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        1374,
        1441
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6823": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        1374,
        1441
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6824": {
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6825": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x83"
    },
    "6827": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6828": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6829": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6830": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6831": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "LT",
      "path": "47"
    },
    "6832": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1AB8"
    },
    "6835": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6836": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6838": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6839": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "REVERT",
      "path": "47"
    },
    "6840": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6841": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6843": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6844": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6845": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6846": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6848": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6849": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6850": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6851": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x7"
    },
    "6853": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6854": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6855": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MUL",
      "path": "47"
    },
    "6856": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6857": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6858": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6859": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6861": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6862": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6863": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6864": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6871": {
      "op": "SHL"
    },
    "6872": {
      "op": "SUB"
    },
    "6873": {
      "offset": [
        957,
        990
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6874": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "AND",
      "path": "47"
    },
    "6875": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6881": {
      "op": "SHL"
    },
    "6882": {
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6883": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6884": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DIV",
      "path": "47"
    },
    "6885": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "6887": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "AND",
      "path": "47"
    },
    "6888": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6889": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6890": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1AF2"
    },
    "6893": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6894": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "6897": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        957,
        990
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6898": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6899": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6900": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6902": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6903": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6905": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6906": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6907": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DIV",
      "path": "47"
    },
    "6908": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MUL",
      "path": "47"
    },
    "6909": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6911": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6912": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6914": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MLOAD",
      "path": "47"
    },
    "6915": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6916": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6917": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6918": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x40"
    },
    "6920": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6921": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6922": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "6923": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6924": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6925": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6926": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6927": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6928": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6930": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6931": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6932": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6933": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6934": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B1E"
    },
    "6937": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6938": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x2924"
    },
    "6941": {
      "fn": "CLHouse.VoteProposal",
      "jump": "i",
      "offset": [
        957,
        990
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6942": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6943": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6944": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ISZERO",
      "path": "47"
    },
    "6945": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B6B"
    },
    "6948": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6949": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6950": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "6952": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "LT",
      "path": "47"
    },
    "6953": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B40"
    },
    "6956": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "6957": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "6960": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "6961": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6962": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6963": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DIV",
      "path": "47"
    },
    "6964": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MUL",
      "path": "47"
    },
    "6965": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP4",
      "path": "47"
    },
    "6966": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6967": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6968": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6970": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6971": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6972": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B6B"
    },
    "6975": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMP",
      "path": "47"
    },
    "6976": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6977": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP3",
      "path": "47"
    },
    "6978": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6979": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "6980": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6981": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6983": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6984": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "6986": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x0"
    },
    "6988": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "KECCAK256",
      "path": "47"
    },
    "6989": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6990": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "6991": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6992": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "6993": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP2",
      "path": "47"
    },
    "6994": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "MSTORE",
      "path": "47"
    },
    "6995": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "6996": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1"
    },
    "6998": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "6999": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7000": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x20"
    },
    "7002": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "7003": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7004": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7005": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "GT",
      "path": "47"
    },
    "7006": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x1B4E"
    },
    "7009": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPI",
      "path": "47"
    },
    "7010": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7011": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7012": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SUB",
      "path": "47"
    },
    "7013": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x1F"
    },
    "7015": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "AND",
      "path": "47"
    },
    "7016": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP3",
      "path": "47"
    },
    "7017": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "7018": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7019": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "JUMPDEST",
      "path": "47"
    },
    "7020": {
      "op": "POP"
    },
    "7021": {
      "op": "POP"
    },
    "7022": {
      "op": "POP"
    },
    "7023": {
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x2"
    },
    "7025": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP5",
      "path": "47"
    },
    "7026": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "7027": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7028": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x3"
    },
    "7030": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP6",
      "path": "47"
    },
    "7031": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "7032": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7033": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x4"
    },
    "7035": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP7",
      "path": "47"
    },
    "7036": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "7037": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7038": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x5"
    },
    "7040": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP8",
      "path": "47"
    },
    "7041": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "7042": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7043": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0x6"
    },
    "7045": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7046": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP8",
      "path": "47"
    },
    "7047": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "ADD",
      "path": "47"
    },
    "7048": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SLOAD",
      "path": "47"
    },
    "7049": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "7050": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP7",
      "path": "47"
    },
    "7051": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7052": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP6",
      "path": "47"
    },
    "7053": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP2",
      "path": "47"
    },
    "7054": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP5",
      "path": "47"
    },
    "7055": {
      "op": "POP"
    },
    "7056": {
      "offset": [
        957,
        990
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7057": {
      "op": "POP"
    },
    "7058": {
      "offset": [
        957,
        990
      ],
      "op": "PUSH1",
      "path": "47",
      "value": "0xFF"
    },
    "7060": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP1",
      "path": "47"
    },
    "7061": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP4",
      "path": "47"
    },
    "7062": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "AND",
      "path": "47"
    },
    "7063": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP3",
      "path": "47"
    },
    "7064": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "PUSH2",
      "path": "47",
      "value": "0x100"
    },
    "7067": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7068": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DIV",
      "path": "47"
    },
    "7069": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "AND",
      "path": "47"
    },
    "7070": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "SWAP1",
      "path": "47"
    },
    "7071": {
      "fn": "CLHouse.VoteProposal",
      "offset": [
        957,
        990
      ],
      "op": "DUP10",
      "path": "47"
    },
    "7072": {
      "fn": "CLHouse.VoteProposal",
      "jump": "o",
      "offset": [
        957,
        990
      ],
      "op": "JUMP",
      "path": "47"
    },
    "7073": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7074": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8925,
        8939
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7076": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8956,
        8977
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7077": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xC1"
    },
    "7079": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7081": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7082": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "7083": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7084": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x100"
    },
    "7087": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "EXP",
      "path": "50"
    },
    "7088": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7089": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "DIV",
      "path": "50"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7096": {
      "op": "SHL"
    },
    "7097": {
      "op": "SUB"
    },
    "7098": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        8990
      ],
      "op": "AND",
      "path": "50"
    },
    "7099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7105": {
      "op": "SHL"
    },
    "7106": {
      "op": "SUB"
    },
    "7107": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9004
      ],
      "op": "AND",
      "path": "50"
    },
    "7108": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9004
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xA327AB69"
    },
    "7113": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7115": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7116": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7117": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH4",
      "path": "50",
      "value": "0xFFFFFFFF"
    },
    "7122": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "AND",
      "path": "50"
    },
    "7123": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xE0"
    },
    "7125": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "SHL",
      "path": "50"
    },
    "7126": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7127": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7128": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "7130": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "ADD",
      "path": "50"
    },
    "7131": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7133": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7135": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7136": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7137": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7138": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "SUB",
      "path": "50"
    },
    "7139": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7140": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP7",
      "path": "50"
    },
    "7141": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "GAS",
      "path": "50"
    },
    "7142": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "STATICCALL",
      "path": "50"
    },
    "7143": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "7144": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7145": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "7146": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1BF7"
    },
    "7149": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7150": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7151": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7153": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7154": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7155": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7156": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7158": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "REVERT",
      "path": "50"
    },
    "7159": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7160": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "POP",
      "path": "50"
    },
    "7161": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "POP",
      "path": "50"
    },
    "7162": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "POP",
      "path": "50"
    },
    "7163": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "POP",
      "path": "50"
    },
    "7164": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7166": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7167": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7168": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7170": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "NOT",
      "path": "50"
    },
    "7171": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7173": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7174": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "ADD",
      "path": "50"
    },
    "7175": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "AND",
      "path": "50"
    },
    "7176": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7177": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "ADD",
      "path": "50"
    },
    "7178": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7179": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7181": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7182": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "POP",
      "path": "50"
    },
    "7183": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7184": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "ADD",
      "path": "50"
    },
    "7185": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7186": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C1B"
    },
    "7189": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7190": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7191": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x281B"
    },
    "7194": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        8980,
        9006
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7195": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8980,
        9006
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7196": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8956,
        9006
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7197": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8956,
        9006
      ],
      "op": "POP",
      "path": "50"
    },
    "7198": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9075,
        9093
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7200": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9112
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7207": {
      "op": "SHL"
    },
    "7208": {
      "op": "SUB"
    },
    "7209": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9125
      ],
      "op": "AND",
      "path": "50"
    },
    "7210": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9252,
        9255
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7211": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9273,
        9286
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7212": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9304,
        9316
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7213": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9334,
        9346
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7214": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9364,
        9374
      ],
      "op": "DUP9",
      "path": "50"
    },
    "7215": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7217": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7218": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x24"
    },
    "7220": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "ADD",
      "path": "50"
    },
    "7221": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C42"
    },
    "7224": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP6",
      "path": "50"
    },
    "7225": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP5",
      "path": "50"
    },
    "7226": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "7227": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "7228": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7229": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7230": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2BCE"
    },
    "7233": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        9139,
        9388
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7234": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7235": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7237": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7238": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7241": {
      "op": "NOT"
    },
    "7242": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7243": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "DUP5",
      "path": "50"
    },
    "7244": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SUB",
      "path": "50"
    },
    "7245": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "ADD",
      "path": "50"
    },
    "7246": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7247": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7248": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7249": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7250": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7251": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7253": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7254": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "ADD",
      "path": "50"
    },
    "7255": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7256": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7263": {
      "op": "SHL"
    },
    "7264": {
      "op": "SUB"
    },
    "7265": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "AND",
      "path": "50"
    },
    "7266": {
      "op": "PUSH4",
      "value": "0x6F2D58A7"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7273": {
      "op": "SHL"
    },
    "7274": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "OR",
      "path": "50"
    },
    "7275": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7276": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7277": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7278": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1C77"
    },
    "7281": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7282": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9139,
        9388
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7283": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x2870"
    },
    "7286": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "i",
      "offset": [
        9099,
        9398
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7287": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7288": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7290": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7292": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7293": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7294": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7295": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "SUB",
      "path": "50"
    },
    "7296": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7297": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP6",
      "path": "50"
    },
    "7298": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "GAS",
      "path": "50"
    },
    "7299": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DELEGATECALL",
      "path": "50"
    },
    "7300": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7301": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "POP",
      "path": "50"
    },
    "7302": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "POP",
      "path": "50"
    },
    "7303": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7304": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7305": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7307": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP2",
      "path": "50"
    },
    "7308": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "EQ",
      "path": "50"
    },
    "7309": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1CB2"
    },
    "7312": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7313": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7315": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7316": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7317": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "POP",
      "path": "50"
    },
    "7318": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1F"
    },
    "7320": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "NOT",
      "path": "50"
    },
    "7321": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x3F"
    },
    "7323": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7324": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "ADD",
      "path": "50"
    },
    "7325": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "AND",
      "path": "50"
    },
    "7326": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7327": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "ADD",
      "path": "50"
    },
    "7328": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7330": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7331": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7332": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7333": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "MSTORE",
      "path": "50"
    },
    "7334": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7335": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7337": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "7339": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "DUP5",
      "path": "50"
    },
    "7340": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "ADD",
      "path": "50"
    },
    "7341": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7342": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1CB7"
    },
    "7345": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7346": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7347": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "7349": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "7350": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "POP",
      "path": "50"
    },
    "7351": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7352": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9099,
        9398
      ],
      "op": "POP",
      "path": "50"
    },
    "7353": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9074,
        9398
      ],
      "op": "POP",
      "path": "50"
    },
    "7354": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9074,
        9398
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "7355": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9074,
        9398
      ],
      "op": "POP",
      "path": "50"
    },
    "7356": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9449,
        9453
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "7358": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9443,
        9454
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7359": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9479,
        9495
      ],
      "op": "RETURNDATASIZE",
      "path": "50"
    },
    "7360": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9531,
        9535
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7361": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9528,
        9529
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "7363": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9523,
        9526
      ],
      "op": "DUP4",
      "path": "50"
    },
    "7364": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9508,
        9536
      ],
      "op": "RETURNDATACOPY",
      "path": "50"
    },
    "7365": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9560,
        9573
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7366": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9549,
        9625
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1CCD"
    },
    "7369": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9549,
        9625
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "7370": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9606,
        9610
      ],
      "op": "DUP1",
      "path": "50"
    },
    "7371": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9601,
        9604
      ],
      "op": "DUP3",
      "path": "50"
    },
    "7372": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9594,
        9611
      ],
      "op": "REVERT",
      "path": "50"
    },
    "7373": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9549,
        9625
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "7374": {
      "op": "POP"
    },
    "7375": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9648,
        9658
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "7376": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        9648,
        9658
      ],
      "op": "SWAP9",
      "path": "50"
    },
    "7377": {
      "fn": "CLHouse.PropTxERC20",
      "offset": [
        8718,
        9674
      ],
      "op": "SWAP8",
      "path": "50"
    },
    "7378": {
      "op": "POP"
    },
    "7379": {
      "op": "POP"
    },
    "7380": {
      "op": "POP"
    },
    "7381": {
      "op": "POP"
    },
    "7382": {
      "op": "POP"
    },
    "7383": {
      "op": "POP"
    },
    "7384": {
      "op": "POP"
    },
    "7385": {
      "op": "POP"
    },
    "7386": {
      "fn": "CLHouse.PropTxERC20",
      "jump": "o",
      "offset": [
        8718,
        9674
      ],
      "op": "JUMP",
      "path": "50"
    },
    "7387": {
      "op": "JUMPDEST"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7394": {
      "op": "SHL"
    },
    "7395": {
      "op": "SUB"
    },
    "7396": {
      "op": "DUP2"
    },
    "7397": {
      "op": "AND"
    },
    "7398": {
      "op": "DUP2"
    },
    "7399": {
      "op": "EQ"
    },
    "7400": {
      "op": "PUSH2",
      "value": "0x1CF0"
    },
    "7403": {
      "op": "JUMPI"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7406": {
      "op": "DUP1"
    },
    "7407": {
      "op": "REVERT"
    },
    "7408": {
      "op": "JUMPDEST"
    },
    "7409": {
      "op": "POP"
    },
    "7410": {
      "jump": "o",
      "op": "JUMP"
    },
    "7411": {
      "op": "JUMPDEST"
    },
    "7412": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7419": {
      "op": "SHL"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7422": {
      "op": "MSTORE"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7427": {
      "op": "MSTORE"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7432": {
      "op": "REVERT"
    },
    "7433": {
      "op": "JUMPDEST"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7436": {
      "op": "MLOAD"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7439": {
      "op": "DUP2"
    },
    "7440": {
      "op": "ADD"
    },
    "7441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "op": "SUB"
    },
    "7449": {
      "op": "DUP2"
    },
    "7450": {
      "op": "GT"
    },
    "7451": {
      "op": "DUP3"
    },
    "7452": {
      "op": "DUP3"
    },
    "7453": {
      "op": "LT"
    },
    "7454": {
      "op": "OR"
    },
    "7455": {
      "op": "ISZERO"
    },
    "7456": {
      "op": "PUSH2",
      "value": "0x1D2B"
    },
    "7459": {
      "op": "JUMPI"
    },
    "7460": {
      "op": "PUSH2",
      "value": "0x1D2B"
    },
    "7463": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "7466": {
      "jump": "i",
      "op": "JUMP"
    },
    "7467": {
      "op": "JUMPDEST"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7470": {
      "op": "MSTORE"
    },
    "7471": {
      "op": "SWAP1"
    },
    "7472": {
      "jump": "o",
      "op": "JUMP"
    },
    "7473": {
      "op": "JUMPDEST"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7476": {
      "op": "MLOAD"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7479": {
      "op": "DUP3"
    },
    "7480": {
      "op": "ADD"
    },
    "7481": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7483": {
      "op": "NOT"
    },
    "7484": {
      "op": "AND"
    },
    "7485": {
      "op": "DUP2"
    },
    "7486": {
      "op": "ADD"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7493": {
      "op": "SHL"
    },
    "7494": {
      "op": "SUB"
    },
    "7495": {
      "op": "DUP2"
    },
    "7496": {
      "op": "GT"
    },
    "7497": {
      "op": "DUP3"
    },
    "7498": {
      "op": "DUP3"
    },
    "7499": {
      "op": "LT"
    },
    "7500": {
      "op": "OR"
    },
    "7501": {
      "op": "ISZERO"
    },
    "7502": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "7505": {
      "op": "JUMPI"
    },
    "7506": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "7509": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "7512": {
      "jump": "i",
      "op": "JUMP"
    },
    "7513": {
      "op": "JUMPDEST"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7516": {
      "op": "MSTORE"
    },
    "7517": {
      "op": "SWAP2"
    },
    "7518": {
      "op": "SWAP1"
    },
    "7519": {
      "op": "POP"
    },
    "7520": {
      "jump": "o",
      "op": "JUMP"
    },
    "7521": {
      "op": "JUMPDEST"
    },
    "7522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7524": {
      "op": "DUP3"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7527": {
      "op": "DUP4"
    },
    "7528": {
      "op": "ADD"
    },
    "7529": {
      "op": "SLT"
    },
    "7530": {
      "op": "PUSH2",
      "value": "0x1D72"
    },
    "7533": {
      "op": "JUMPI"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7536": {
      "op": "DUP1"
    },
    "7537": {
      "op": "REVERT"
    },
    "7538": {
      "op": "JUMPDEST"
    },
    "7539": {
      "op": "DUP2"
    },
    "7540": {
      "op": "CALLDATALOAD"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7547": {
      "op": "SHL"
    },
    "7548": {
      "op": "SUB"
    },
    "7549": {
      "op": "DUP2"
    },
    "7550": {
      "op": "GT"
    },
    "7551": {
      "op": "ISZERO"
    },
    "7552": {
      "op": "PUSH2",
      "value": "0x1D8B"
    },
    "7555": {
      "op": "JUMPI"
    },
    "7556": {
      "op": "PUSH2",
      "value": "0x1D8B"
    },
    "7559": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "7562": {
      "jump": "i",
      "op": "JUMP"
    },
    "7563": {
      "op": "JUMPDEST"
    },
    "7564": {
      "op": "PUSH2",
      "value": "0x1D9E"
    },
    "7567": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7569": {
      "op": "DUP3"
    },
    "7570": {
      "op": "ADD"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7573": {
      "op": "NOT"
    },
    "7574": {
      "op": "AND"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7577": {
      "op": "ADD"
    },
    "7578": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7581": {
      "jump": "i",
      "op": "JUMP"
    },
    "7582": {
      "op": "JUMPDEST"
    },
    "7583": {
      "op": "DUP2"
    },
    "7584": {
      "op": "DUP2"
    },
    "7585": {
      "op": "MSTORE"
    },
    "7586": {
      "op": "DUP5"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7589": {
      "op": "DUP4"
    },
    "7590": {
      "op": "DUP7"
    },
    "7591": {
      "op": "ADD"
    },
    "7592": {
      "op": "ADD"
    },
    "7593": {
      "op": "GT"
    },
    "7594": {
      "op": "ISZERO"
    },
    "7595": {
      "op": "PUSH2",
      "value": "0x1DB3"
    },
    "7598": {
      "op": "JUMPI"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7601": {
      "op": "DUP1"
    },
    "7602": {
      "op": "REVERT"
    },
    "7603": {
      "op": "JUMPDEST"
    },
    "7604": {
      "op": "DUP2"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7607": {
      "op": "DUP6"
    },
    "7608": {
      "op": "ADD"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7611": {
      "op": "DUP4"
    },
    "7612": {
      "op": "ADD"
    },
    "7613": {
      "op": "CALLDATACOPY"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7616": {
      "op": "SWAP2"
    },
    "7617": {
      "op": "DUP2"
    },
    "7618": {
      "op": "ADD"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7621": {
      "op": "ADD"
    },
    "7622": {
      "op": "SWAP2"
    },
    "7623": {
      "op": "SWAP1"
    },
    "7624": {
      "op": "SWAP2"
    },
    "7625": {
      "op": "MSTORE"
    },
    "7626": {
      "op": "SWAP4"
    },
    "7627": {
      "op": "SWAP3"
    },
    "7628": {
      "op": "POP"
    },
    "7629": {
      "op": "POP"
    },
    "7630": {
      "op": "POP"
    },
    "7631": {
      "jump": "o",
      "op": "JUMP"
    },
    "7632": {
      "op": "JUMPDEST"
    },
    "7633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7635": {
      "op": "DUP1"
    },
    "7636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7638": {
      "op": "DUP1"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7641": {
      "op": "DUP6"
    },
    "7642": {
      "op": "DUP8"
    },
    "7643": {
      "op": "SUB"
    },
    "7644": {
      "op": "SLT"
    },
    "7645": {
      "op": "ISZERO"
    },
    "7646": {
      "op": "PUSH2",
      "value": "0x1DE6"
    },
    "7649": {
      "op": "JUMPI"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7652": {
      "op": "DUP1"
    },
    "7653": {
      "op": "REVERT"
    },
    "7654": {
      "op": "JUMPDEST"
    },
    "7655": {
      "op": "DUP5"
    },
    "7656": {
      "op": "CALLDATALOAD"
    },
    "7657": {
      "op": "PUSH2",
      "value": "0x1DF1"
    },
    "7660": {
      "op": "DUP2"
    },
    "7661": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7664": {
      "jump": "i",
      "op": "JUMP"
    },
    "7665": {
      "op": "JUMPDEST"
    },
    "7666": {
      "op": "SWAP4"
    },
    "7667": {
      "op": "POP"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7670": {
      "op": "DUP6"
    },
    "7671": {
      "op": "ADD"
    },
    "7672": {
      "op": "CALLDATALOAD"
    },
    "7673": {
      "op": "SWAP3"
    },
    "7674": {
      "op": "POP"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7677": {
      "op": "DUP6"
    },
    "7678": {
      "op": "ADD"
    },
    "7679": {
      "op": "CALLDATALOAD"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7684": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7686": {
      "op": "SHL"
    },
    "7687": {
      "op": "SUB"
    },
    "7688": {
      "op": "DUP2"
    },
    "7689": {
      "op": "GT"
    },
    "7690": {
      "op": "ISZERO"
    },
    "7691": {
      "op": "PUSH2",
      "value": "0x1E13"
    },
    "7694": {
      "op": "JUMPI"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7697": {
      "op": "DUP1"
    },
    "7698": {
      "op": "REVERT"
    },
    "7699": {
      "op": "JUMPDEST"
    },
    "7700": {
      "op": "PUSH2",
      "value": "0x1E1F"
    },
    "7703": {
      "op": "DUP8"
    },
    "7704": {
      "op": "DUP3"
    },
    "7705": {
      "op": "DUP9"
    },
    "7706": {
      "op": "ADD"
    },
    "7707": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "7710": {
      "jump": "i",
      "op": "JUMP"
    },
    "7711": {
      "op": "JUMPDEST"
    },
    "7712": {
      "op": "SWAP5"
    },
    "7713": {
      "op": "SWAP8"
    },
    "7714": {
      "op": "SWAP4"
    },
    "7715": {
      "op": "SWAP7"
    },
    "7716": {
      "op": "POP"
    },
    "7717": {
      "op": "SWAP4"
    },
    "7718": {
      "op": "SWAP5"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7721": {
      "op": "ADD"
    },
    "7722": {
      "op": "CALLDATALOAD"
    },
    "7723": {
      "op": "SWAP4"
    },
    "7724": {
      "op": "POP"
    },
    "7725": {
      "op": "POP"
    },
    "7726": {
      "op": "POP"
    },
    "7727": {
      "jump": "o",
      "op": "JUMP"
    },
    "7728": {
      "op": "JUMPDEST"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7731": {
      "op": "DUP1"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7734": {
      "op": "DUP1"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7737": {
      "op": "DUP6"
    },
    "7738": {
      "op": "DUP8"
    },
    "7739": {
      "op": "SUB"
    },
    "7740": {
      "op": "SLT"
    },
    "7741": {
      "op": "ISZERO"
    },
    "7742": {
      "op": "PUSH2",
      "value": "0x1E46"
    },
    "7745": {
      "op": "JUMPI"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7748": {
      "op": "DUP1"
    },
    "7749": {
      "op": "REVERT"
    },
    "7750": {
      "op": "JUMPDEST"
    },
    "7751": {
      "op": "DUP5"
    },
    "7752": {
      "op": "CALLDATALOAD"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7757": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7759": {
      "op": "SHL"
    },
    "7760": {
      "op": "SUB"
    },
    "7761": {
      "op": "DUP1"
    },
    "7762": {
      "op": "DUP3"
    },
    "7763": {
      "op": "GT"
    },
    "7764": {
      "op": "ISZERO"
    },
    "7765": {
      "op": "PUSH2",
      "value": "0x1E5D"
    },
    "7768": {
      "op": "JUMPI"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7771": {
      "op": "DUP1"
    },
    "7772": {
      "op": "REVERT"
    },
    "7773": {
      "op": "JUMPDEST"
    },
    "7774": {
      "op": "PUSH2",
      "value": "0x1E69"
    },
    "7777": {
      "op": "DUP9"
    },
    "7778": {
      "op": "DUP4"
    },
    "7779": {
      "op": "DUP10"
    },
    "7780": {
      "op": "ADD"
    },
    "7781": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "7784": {
      "jump": "i",
      "op": "JUMP"
    },
    "7785": {
      "op": "JUMPDEST"
    },
    "7786": {
      "op": "SWAP6"
    },
    "7787": {
      "op": "POP"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7790": {
      "op": "DUP8"
    },
    "7791": {
      "op": "ADD"
    },
    "7792": {
      "op": "CALLDATALOAD"
    },
    "7793": {
      "op": "SWAP2"
    },
    "7794": {
      "op": "POP"
    },
    "7795": {
      "op": "DUP1"
    },
    "7796": {
      "op": "DUP3"
    },
    "7797": {
      "op": "GT"
    },
    "7798": {
      "op": "ISZERO"
    },
    "7799": {
      "op": "PUSH2",
      "value": "0x1E7F"
    },
    "7802": {
      "op": "JUMPI"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7805": {
      "op": "DUP1"
    },
    "7806": {
      "op": "REVERT"
    },
    "7807": {
      "op": "JUMPDEST"
    },
    "7808": {
      "op": "PUSH2",
      "value": "0x1E8B"
    },
    "7811": {
      "op": "DUP9"
    },
    "7812": {
      "op": "DUP4"
    },
    "7813": {
      "op": "DUP10"
    },
    "7814": {
      "op": "ADD"
    },
    "7815": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "7818": {
      "jump": "i",
      "op": "JUMP"
    },
    "7819": {
      "op": "JUMPDEST"
    },
    "7820": {
      "op": "SWAP5"
    },
    "7821": {
      "op": "POP"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7824": {
      "op": "DUP8"
    },
    "7825": {
      "op": "ADD"
    },
    "7826": {
      "op": "CALLDATALOAD"
    },
    "7827": {
      "op": "SWAP2"
    },
    "7828": {
      "op": "POP"
    },
    "7829": {
      "op": "PUSH2",
      "value": "0x1E9D"
    },
    "7832": {
      "op": "DUP3"
    },
    "7833": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7836": {
      "jump": "i",
      "op": "JUMP"
    },
    "7837": {
      "op": "JUMPDEST"
    },
    "7838": {
      "op": "SWAP1"
    },
    "7839": {
      "op": "SWAP3"
    },
    "7840": {
      "op": "POP"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7843": {
      "op": "DUP7"
    },
    "7844": {
      "op": "ADD"
    },
    "7845": {
      "op": "CALLDATALOAD"
    },
    "7846": {
      "op": "SWAP1"
    },
    "7847": {
      "op": "DUP1"
    },
    "7848": {
      "op": "DUP3"
    },
    "7849": {
      "op": "GT"
    },
    "7850": {
      "op": "ISZERO"
    },
    "7851": {
      "op": "PUSH2",
      "value": "0x1EB3"
    },
    "7854": {
      "op": "JUMPI"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7857": {
      "op": "DUP1"
    },
    "7858": {
      "op": "REVERT"
    },
    "7859": {
      "op": "JUMPDEST"
    },
    "7860": {
      "op": "POP"
    },
    "7861": {
      "op": "PUSH2",
      "value": "0x1EC0"
    },
    "7864": {
      "op": "DUP8"
    },
    "7865": {
      "op": "DUP3"
    },
    "7866": {
      "op": "DUP9"
    },
    "7867": {
      "op": "ADD"
    },
    "7868": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "7871": {
      "jump": "i",
      "op": "JUMP"
    },
    "7872": {
      "op": "JUMPDEST"
    },
    "7873": {
      "op": "SWAP2"
    },
    "7874": {
      "op": "POP"
    },
    "7875": {
      "op": "POP"
    },
    "7876": {
      "op": "SWAP3"
    },
    "7877": {
      "op": "SWAP6"
    },
    "7878": {
      "op": "SWAP2"
    },
    "7879": {
      "op": "SWAP5"
    },
    "7880": {
      "op": "POP"
    },
    "7881": {
      "op": "SWAP3"
    },
    "7882": {
      "op": "POP"
    },
    "7883": {
      "jump": "o",
      "op": "JUMP"
    },
    "7884": {
      "op": "JUMPDEST"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7887": {
      "op": "DUP1"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7890": {
      "op": "DUP1"
    },
    "7891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7895": {
      "op": "DUP7"
    },
    "7896": {
      "op": "DUP9"
    },
    "7897": {
      "op": "SUB"
    },
    "7898": {
      "op": "SLT"
    },
    "7899": {
      "op": "ISZERO"
    },
    "7900": {
      "op": "PUSH2",
      "value": "0x1EE4"
    },
    "7903": {
      "op": "JUMPI"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7906": {
      "op": "DUP1"
    },
    "7907": {
      "op": "REVERT"
    },
    "7908": {
      "op": "JUMPDEST"
    },
    "7909": {
      "op": "DUP6"
    },
    "7910": {
      "op": "CALLDATALOAD"
    },
    "7911": {
      "op": "PUSH2",
      "value": "0x1EEF"
    },
    "7914": {
      "op": "DUP2"
    },
    "7915": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7918": {
      "jump": "i",
      "op": "JUMP"
    },
    "7919": {
      "op": "JUMPDEST"
    },
    "7920": {
      "op": "SWAP5"
    },
    "7921": {
      "op": "POP"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7924": {
      "op": "DUP7"
    },
    "7925": {
      "op": "ADD"
    },
    "7926": {
      "op": "CALLDATALOAD"
    },
    "7927": {
      "op": "PUSH2",
      "value": "0x1EFF"
    },
    "7930": {
      "op": "DUP2"
    },
    "7931": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "7934": {
      "jump": "i",
      "op": "JUMP"
    },
    "7935": {
      "op": "JUMPDEST"
    },
    "7936": {
      "op": "SWAP4"
    },
    "7937": {
      "op": "POP"
    },
    "7938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7940": {
      "op": "DUP7"
    },
    "7941": {
      "op": "ADD"
    },
    "7942": {
      "op": "CALLDATALOAD"
    },
    "7943": {
      "op": "SWAP3"
    },
    "7944": {
      "op": "POP"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7947": {
      "op": "DUP7"
    },
    "7948": {
      "op": "ADD"
    },
    "7949": {
      "op": "CALLDATALOAD"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7956": {
      "op": "SHL"
    },
    "7957": {
      "op": "SUB"
    },
    "7958": {
      "op": "DUP2"
    },
    "7959": {
      "op": "GT"
    },
    "7960": {
      "op": "ISZERO"
    },
    "7961": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "7964": {
      "op": "JUMPI"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7967": {
      "op": "DUP1"
    },
    "7968": {
      "op": "REVERT"
    },
    "7969": {
      "op": "JUMPDEST"
    },
    "7970": {
      "op": "PUSH2",
      "value": "0x1F2D"
    },
    "7973": {
      "op": "DUP9"
    },
    "7974": {
      "op": "DUP3"
    },
    "7975": {
      "op": "DUP10"
    },
    "7976": {
      "op": "ADD"
    },
    "7977": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "7980": {
      "jump": "i",
      "op": "JUMP"
    },
    "7981": {
      "op": "JUMPDEST"
    },
    "7982": {
      "op": "SWAP6"
    },
    "7983": {
      "op": "SWAP9"
    },
    "7984": {
      "op": "SWAP5"
    },
    "7985": {
      "op": "SWAP8"
    },
    "7986": {
      "op": "POP"
    },
    "7987": {
      "op": "SWAP3"
    },
    "7988": {
      "op": "SWAP6"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7991": {
      "op": "ADD"
    },
    "7992": {
      "op": "CALLDATALOAD"
    },
    "7993": {
      "op": "SWAP4"
    },
    "7994": {
      "op": "SWAP3"
    },
    "7995": {
      "op": "POP"
    },
    "7996": {
      "op": "POP"
    },
    "7997": {
      "op": "POP"
    },
    "7998": {
      "jump": "o",
      "op": "JUMP"
    },
    "7999": {
      "op": "JUMPDEST"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8004": {
      "op": "DUP3"
    },
    "8005": {
      "op": "DUP5"
    },
    "8006": {
      "op": "SUB"
    },
    "8007": {
      "op": "SLT"
    },
    "8008": {
      "op": "ISZERO"
    },
    "8009": {
      "op": "PUSH2",
      "value": "0x1F51"
    },
    "8012": {
      "op": "JUMPI"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8015": {
      "op": "DUP1"
    },
    "8016": {
      "op": "REVERT"
    },
    "8017": {
      "op": "JUMPDEST"
    },
    "8018": {
      "op": "POP"
    },
    "8019": {
      "op": "CALLDATALOAD"
    },
    "8020": {
      "op": "SWAP2"
    },
    "8021": {
      "op": "SWAP1"
    },
    "8022": {
      "op": "POP"
    },
    "8023": {
      "jump": "o",
      "op": "JUMP"
    },
    "8024": {
      "op": "JUMPDEST"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8027": {
      "op": "JUMPDEST"
    },
    "8028": {
      "op": "DUP4"
    },
    "8029": {
      "op": "DUP2"
    },
    "8030": {
      "op": "LT"
    },
    "8031": {
      "op": "ISZERO"
    },
    "8032": {
      "op": "PUSH2",
      "value": "0x1F73"
    },
    "8035": {
      "op": "JUMPI"
    },
    "8036": {
      "op": "DUP2"
    },
    "8037": {
      "op": "DUP2"
    },
    "8038": {
      "op": "ADD"
    },
    "8039": {
      "op": "MLOAD"
    },
    "8040": {
      "op": "DUP4"
    },
    "8041": {
      "op": "DUP3"
    },
    "8042": {
      "op": "ADD"
    },
    "8043": {
      "op": "MSTORE"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8046": {
      "op": "ADD"
    },
    "8047": {
      "op": "PUSH2",
      "value": "0x1F5B"
    },
    "8050": {
      "op": "JUMP"
    },
    "8051": {
      "op": "JUMPDEST"
    },
    "8052": {
      "op": "DUP4"
    },
    "8053": {
      "op": "DUP2"
    },
    "8054": {
      "op": "GT"
    },
    "8055": {
      "op": "ISZERO"
    },
    "8056": {
      "op": "PUSH2",
      "value": "0x1631"
    },
    "8059": {
      "op": "JUMPI"
    },
    "8060": {
      "op": "POP"
    },
    "8061": {
      "op": "POP"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8064": {
      "op": "SWAP2"
    },
    "8065": {
      "op": "ADD"
    },
    "8066": {
      "op": "MSTORE"
    },
    "8067": {
      "jump": "o",
      "op": "JUMP"
    },
    "8068": {
      "op": "JUMPDEST"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8071": {
      "op": "DUP2"
    },
    "8072": {
      "op": "MLOAD"
    },
    "8073": {
      "op": "DUP1"
    },
    "8074": {
      "op": "DUP5"
    },
    "8075": {
      "op": "MSTORE"
    },
    "8076": {
      "op": "PUSH2",
      "value": "0x1F9C"
    },
    "8079": {
      "op": "DUP2"
    },
    "8080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8082": {
      "op": "DUP7"
    },
    "8083": {
      "op": "ADD"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8086": {
      "op": "DUP7"
    },
    "8087": {
      "op": "ADD"
    },
    "8088": {
      "op": "PUSH2",
      "value": "0x1F58"
    },
    "8091": {
      "jump": "i",
      "op": "JUMP"
    },
    "8092": {
      "op": "JUMPDEST"
    },
    "8093": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8095": {
      "op": "ADD"
    },
    "8096": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8098": {
      "op": "NOT"
    },
    "8099": {
      "op": "AND"
    },
    "8100": {
      "op": "SWAP3"
    },
    "8101": {
      "op": "SWAP1"
    },
    "8102": {
      "op": "SWAP3"
    },
    "8103": {
      "op": "ADD"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8106": {
      "op": "ADD"
    },
    "8107": {
      "op": "SWAP3"
    },
    "8108": {
      "op": "SWAP2"
    },
    "8109": {
      "op": "POP"
    },
    "8110": {
      "op": "POP"
    },
    "8111": {
      "jump": "o",
      "op": "JUMP"
    },
    "8112": {
      "op": "JUMPDEST"
    },
    "8113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8119": {
      "op": "SHL"
    },
    "8120": {
      "op": "SUB"
    },
    "8121": {
      "op": "DUP5"
    },
    "8122": {
      "op": "AND"
    },
    "8123": {
      "op": "DUP2"
    },
    "8124": {
      "op": "MSTORE"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8129": {
      "op": "DUP3"
    },
    "8130": {
      "op": "ADD"
    },
    "8131": {
      "op": "DUP2"
    },
    "8132": {
      "op": "SWAP1"
    },
    "8133": {
      "op": "MSTORE"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8136": {
      "op": "SWAP1"
    },
    "8137": {
      "op": "PUSH2",
      "value": "0x1FD4"
    },
    "8140": {
      "op": "SWAP1"
    },
    "8141": {
      "op": "DUP4"
    },
    "8142": {
      "op": "ADD"
    },
    "8143": {
      "op": "DUP6"
    },
    "8144": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "8147": {
      "jump": "i",
      "op": "JUMP"
    },
    "8148": {
      "op": "JUMPDEST"
    },
    "8149": {
      "op": "SWAP1"
    },
    "8150": {
      "op": "POP"
    },
    "8151": {
      "op": "DUP3"
    },
    "8152": {
      "op": "ISZERO"
    },
    "8153": {
      "op": "ISZERO"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8156": {
      "op": "DUP4"
    },
    "8157": {
      "op": "ADD"
    },
    "8158": {
      "op": "MSTORE"
    },
    "8159": {
      "op": "SWAP5"
    },
    "8160": {
      "op": "SWAP4"
    },
    "8161": {
      "op": "POP"
    },
    "8162": {
      "op": "POP"
    },
    "8163": {
      "op": "POP"
    },
    "8164": {
      "op": "POP"
    },
    "8165": {
      "jump": "o",
      "op": "JUMP"
    },
    "8166": {
      "op": "JUMPDEST"
    },
    "8167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8173": {
      "op": "SHL"
    },
    "8174": {
      "op": "SUB"
    },
    "8175": {
      "op": "DUP7"
    },
    "8176": {
      "op": "AND"
    },
    "8177": {
      "op": "DUP2"
    },
    "8178": {
      "op": "MSTORE"
    },
    "8179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8183": {
      "op": "DUP3"
    },
    "8184": {
      "op": "ADD"
    },
    "8185": {
      "op": "DUP2"
    },
    "8186": {
      "op": "SWAP1"
    },
    "8187": {
      "op": "MSTORE"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8190": {
      "op": "SWAP1"
    },
    "8191": {
      "op": "PUSH2",
      "value": "0x200A"
    },
    "8194": {
      "op": "SWAP1"
    },
    "8195": {
      "op": "DUP4"
    },
    "8196": {
      "op": "ADD"
    },
    "8197": {
      "op": "DUP8"
    },
    "8198": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "8201": {
      "jump": "i",
      "op": "JUMP"
    },
    "8202": {
      "op": "JUMPDEST"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8205": {
      "op": "DUP4"
    },
    "8206": {
      "op": "ADD"
    },
    "8207": {
      "op": "SWAP6"
    },
    "8208": {
      "op": "SWAP1"
    },
    "8209": {
      "op": "SWAP6"
    },
    "8210": {
      "op": "MSTORE"
    },
    "8211": {
      "op": "POP"
    },
    "8212": {
      "op": "SWAP2"
    },
    "8213": {
      "op": "ISZERO"
    },
    "8214": {
      "op": "ISZERO"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8217": {
      "op": "DUP4"
    },
    "8218": {
      "op": "ADD"
    },
    "8219": {
      "op": "MSTORE"
    },
    "8220": {
      "op": "ISZERO"
    },
    "8221": {
      "op": "ISZERO"
    },
    "8222": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8224": {
      "op": "SWAP1"
    },
    "8225": {
      "op": "SWAP2"
    },
    "8226": {
      "op": "ADD"
    },
    "8227": {
      "op": "MSTORE"
    },
    "8228": {
      "op": "SWAP3"
    },
    "8229": {
      "op": "SWAP2"
    },
    "8230": {
      "op": "POP"
    },
    "8231": {
      "op": "POP"
    },
    "8232": {
      "jump": "o",
      "op": "JUMP"
    },
    "8233": {
      "op": "JUMPDEST"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8238": {
      "op": "DUP1"
    },
    "8239": {
      "op": "DUP4"
    },
    "8240": {
      "op": "ADD"
    },
    "8241": {
      "op": "DUP2"
    },
    "8242": {
      "op": "DUP5"
    },
    "8243": {
      "op": "MSTORE"
    },
    "8244": {
      "op": "DUP1"
    },
    "8245": {
      "op": "DUP6"
    },
    "8246": {
      "op": "MLOAD"
    },
    "8247": {
      "op": "DUP1"
    },
    "8248": {
      "op": "DUP4"
    },
    "8249": {
      "op": "MSTORE"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8252": {
      "op": "SWAP3"
    },
    "8253": {
      "op": "POP"
    },
    "8254": {
      "op": "DUP3"
    },
    "8255": {
      "op": "DUP7"
    },
    "8256": {
      "op": "ADD"
    },
    "8257": {
      "op": "SWAP2"
    },
    "8258": {
      "op": "POP"
    },
    "8259": {
      "op": "DUP3"
    },
    "8260": {
      "op": "DUP2"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8263": {
      "op": "SHL"
    },
    "8264": {
      "op": "DUP8"
    },
    "8265": {
      "op": "ADD"
    },
    "8266": {
      "op": "ADD"
    },
    "8267": {
      "op": "DUP5"
    },
    "8268": {
      "op": "DUP9"
    },
    "8269": {
      "op": "ADD"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8272": {
      "op": "JUMPDEST"
    },
    "8273": {
      "op": "DUP4"
    },
    "8274": {
      "op": "DUP2"
    },
    "8275": {
      "op": "LT"
    },
    "8276": {
      "op": "ISZERO"
    },
    "8277": {
      "op": "PUSH2",
      "value": "0x20A9"
    },
    "8280": {
      "op": "JUMPI"
    },
    "8281": {
      "op": "DUP9"
    },
    "8282": {
      "op": "DUP4"
    },
    "8283": {
      "op": "SUB"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8286": {
      "op": "NOT"
    },
    "8287": {
      "op": "ADD"
    },
    "8288": {
      "op": "DUP6"
    },
    "8289": {
      "op": "MSTORE"
    },
    "8290": {
      "op": "DUP2"
    },
    "8291": {
      "op": "MLOAD"
    },
    "8292": {
      "op": "DUP1"
    },
    "8293": {
      "op": "MLOAD"
    },
    "8294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8300": {
      "op": "SHL"
    },
    "8301": {
      "op": "SUB"
    },
    "8302": {
      "op": "AND"
    },
    "8303": {
      "op": "DUP5"
    },
    "8304": {
      "op": "MSTORE"
    },
    "8305": {
      "op": "DUP8"
    },
    "8306": {
      "op": "DUP2"
    },
    "8307": {
      "op": "ADD"
    },
    "8308": {
      "op": "MLOAD"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8311": {
      "op": "DUP10"
    },
    "8312": {
      "op": "DUP7"
    },
    "8313": {
      "op": "ADD"
    },
    "8314": {
      "op": "DUP2"
    },
    "8315": {
      "op": "SWAP1"
    },
    "8316": {
      "op": "MSTORE"
    },
    "8317": {
      "op": "SWAP1"
    },
    "8318": {
      "op": "PUSH2",
      "value": "0x2089"
    },
    "8321": {
      "op": "DUP3"
    },
    "8322": {
      "op": "DUP8"
    },
    "8323": {
      "op": "ADD"
    },
    "8324": {
      "op": "DUP3"
    },
    "8325": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "8328": {
      "jump": "i",
      "op": "JUMP"
    },
    "8329": {
      "op": "JUMPDEST"
    },
    "8330": {
      "op": "SWAP3"
    },
    "8331": {
      "op": "DUP10"
    },
    "8332": {
      "op": "ADD"
    },
    "8333": {
      "op": "MLOAD"
    },
    "8334": {
      "op": "ISZERO"
    },
    "8335": {
      "op": "ISZERO"
    },
    "8336": {
      "op": "SWAP6"
    },
    "8337": {
      "op": "DUP10"
    },
    "8338": {
      "op": "ADD"
    },
    "8339": {
      "op": "SWAP6"
    },
    "8340": {
      "op": "SWAP1"
    },
    "8341": {
      "op": "SWAP6"
    },
    "8342": {
      "op": "MSTORE"
    },
    "8343": {
      "op": "POP"
    },
    "8344": {
      "op": "SWAP5"
    },
    "8345": {
      "op": "DUP8"
    },
    "8346": {
      "op": "ADD"
    },
    "8347": {
      "op": "SWAP5"
    },
    "8348": {
      "op": "SWAP3"
    },
    "8349": {
      "op": "POP"
    },
    "8350": {
      "op": "SWAP1"
    },
    "8351": {
      "op": "DUP7"
    },
    "8352": {
      "op": "ADD"
    },
    "8353": {
      "op": "SWAP1"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8356": {
      "op": "ADD"
    },
    "8357": {
      "op": "PUSH2",
      "value": "0x2050"
    },
    "8360": {
      "op": "JUMP"
    },
    "8361": {
      "op": "JUMPDEST"
    },
    "8362": {
      "op": "POP"
    },
    "8363": {
      "op": "SWAP1"
    },
    "8364": {
      "op": "SWAP9"
    },
    "8365": {
      "op": "SWAP8"
    },
    "8366": {
      "op": "POP"
    },
    "8367": {
      "op": "POP"
    },
    "8368": {
      "op": "POP"
    },
    "8369": {
      "op": "POP"
    },
    "8370": {
      "op": "POP"
    },
    "8371": {
      "op": "POP"
    },
    "8372": {
      "op": "POP"
    },
    "8373": {
      "op": "POP"
    },
    "8374": {
      "jump": "o",
      "op": "JUMP"
    },
    "8375": {
      "op": "JUMPDEST"
    },
    "8376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8378": {
      "op": "DUP1"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8381": {
      "op": "DUP1"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8384": {
      "op": "DUP6"
    },
    "8385": {
      "op": "DUP8"
    },
    "8386": {
      "op": "SUB"
    },
    "8387": {
      "op": "SLT"
    },
    "8388": {
      "op": "ISZERO"
    },
    "8389": {
      "op": "PUSH2",
      "value": "0x20CD"
    },
    "8392": {
      "op": "JUMPI"
    },
    "8393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8395": {
      "op": "DUP1"
    },
    "8396": {
      "op": "REVERT"
    },
    "8397": {
      "op": "JUMPDEST"
    },
    "8398": {
      "op": "DUP5"
    },
    "8399": {
      "op": "CALLDATALOAD"
    },
    "8400": {
      "op": "PUSH2",
      "value": "0x20D8"
    },
    "8403": {
      "op": "DUP2"
    },
    "8404": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "8407": {
      "jump": "i",
      "op": "JUMP"
    },
    "8408": {
      "op": "JUMPDEST"
    },
    "8409": {
      "op": "SWAP4"
    },
    "8410": {
      "op": "POP"
    },
    "8411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8413": {
      "op": "DUP6"
    },
    "8414": {
      "op": "ADD"
    },
    "8415": {
      "op": "CALLDATALOAD"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8422": {
      "op": "SHL"
    },
    "8423": {
      "op": "SUB"
    },
    "8424": {
      "op": "DUP1"
    },
    "8425": {
      "op": "DUP3"
    },
    "8426": {
      "op": "GT"
    },
    "8427": {
      "op": "ISZERO"
    },
    "8428": {
      "op": "PUSH2",
      "value": "0x20F4"
    },
    "8431": {
      "op": "JUMPI"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8434": {
      "op": "DUP1"
    },
    "8435": {
      "op": "REVERT"
    },
    "8436": {
      "op": "JUMPDEST"
    },
    "8437": {
      "op": "PUSH2",
      "value": "0x2100"
    },
    "8440": {
      "op": "DUP9"
    },
    "8441": {
      "op": "DUP4"
    },
    "8442": {
      "op": "DUP10"
    },
    "8443": {
      "op": "ADD"
    },
    "8444": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "8447": {
      "jump": "i",
      "op": "JUMP"
    },
    "8448": {
      "op": "JUMPDEST"
    },
    "8449": {
      "op": "SWAP5"
    },
    "8450": {
      "op": "POP"
    },
    "8451": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8453": {
      "op": "DUP8"
    },
    "8454": {
      "op": "ADD"
    },
    "8455": {
      "op": "CALLDATALOAD"
    },
    "8456": {
      "op": "SWAP4"
    },
    "8457": {
      "op": "POP"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8460": {
      "op": "DUP8"
    },
    "8461": {
      "op": "ADD"
    },
    "8462": {
      "op": "CALLDATALOAD"
    },
    "8463": {
      "op": "SWAP2"
    },
    "8464": {
      "op": "POP"
    },
    "8465": {
      "op": "DUP1"
    },
    "8466": {
      "op": "DUP3"
    },
    "8467": {
      "op": "GT"
    },
    "8468": {
      "op": "ISZERO"
    },
    "8469": {
      "op": "PUSH2",
      "value": "0x1EB3"
    },
    "8472": {
      "op": "JUMPI"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8475": {
      "op": "DUP1"
    },
    "8476": {
      "op": "REVERT"
    },
    "8477": {
      "op": "JUMPDEST"
    },
    "8478": {
      "op": "DUP1"
    },
    "8479": {
      "op": "CALLDATALOAD"
    },
    "8480": {
      "op": "DUP1"
    },
    "8481": {
      "op": "ISZERO"
    },
    "8482": {
      "op": "ISZERO"
    },
    "8483": {
      "op": "DUP2"
    },
    "8484": {
      "op": "EQ"
    },
    "8485": {
      "op": "PUSH2",
      "value": "0x212D"
    },
    "8488": {
      "op": "JUMPI"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8491": {
      "op": "DUP1"
    },
    "8492": {
      "op": "REVERT"
    },
    "8493": {
      "op": "JUMPDEST"
    },
    "8494": {
      "op": "SWAP2"
    },
    "8495": {
      "op": "SWAP1"
    },
    "8496": {
      "op": "POP"
    },
    "8497": {
      "jump": "o",
      "op": "JUMP"
    },
    "8498": {
      "op": "JUMPDEST"
    },
    "8499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8501": {
      "op": "DUP1"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8504": {
      "op": "DUP1"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8507": {
      "op": "DUP1"
    },
    "8508": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8510": {
      "op": "DUP8"
    },
    "8511": {
      "op": "DUP10"
    },
    "8512": {
      "op": "SUB"
    },
    "8513": {
      "op": "SLT"
    },
    "8514": {
      "op": "ISZERO"
    },
    "8515": {
      "op": "PUSH2",
      "value": "0x214B"
    },
    "8518": {
      "op": "JUMPI"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8521": {
      "op": "DUP1"
    },
    "8522": {
      "op": "REVERT"
    },
    "8523": {
      "op": "JUMPDEST"
    },
    "8524": {
      "op": "DUP7"
    },
    "8525": {
      "op": "CALLDATALOAD"
    },
    "8526": {
      "op": "PUSH2",
      "value": "0x2156"
    },
    "8529": {
      "op": "DUP2"
    },
    "8530": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "8533": {
      "jump": "i",
      "op": "JUMP"
    },
    "8534": {
      "op": "JUMPDEST"
    },
    "8535": {
      "op": "SWAP6"
    },
    "8536": {
      "op": "POP"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8539": {
      "op": "DUP8"
    },
    "8540": {
      "op": "ADD"
    },
    "8541": {
      "op": "CALLDATALOAD"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8546": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8548": {
      "op": "SHL"
    },
    "8549": {
      "op": "SUB"
    },
    "8550": {
      "op": "DUP1"
    },
    "8551": {
      "op": "DUP3"
    },
    "8552": {
      "op": "GT"
    },
    "8553": {
      "op": "ISZERO"
    },
    "8554": {
      "op": "PUSH2",
      "value": "0x2172"
    },
    "8557": {
      "op": "JUMPI"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8560": {
      "op": "DUP1"
    },
    "8561": {
      "op": "REVERT"
    },
    "8562": {
      "op": "JUMPDEST"
    },
    "8563": {
      "op": "PUSH2",
      "value": "0x217E"
    },
    "8566": {
      "op": "DUP11"
    },
    "8567": {
      "op": "DUP4"
    },
    "8568": {
      "op": "DUP12"
    },
    "8569": {
      "op": "ADD"
    },
    "8570": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "8573": {
      "jump": "i",
      "op": "JUMP"
    },
    "8574": {
      "op": "JUMPDEST"
    },
    "8575": {
      "op": "SWAP7"
    },
    "8576": {
      "op": "POP"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8579": {
      "op": "DUP10"
    },
    "8580": {
      "op": "ADD"
    },
    "8581": {
      "op": "CALLDATALOAD"
    },
    "8582": {
      "op": "SWAP2"
    },
    "8583": {
      "op": "POP"
    },
    "8584": {
      "op": "DUP1"
    },
    "8585": {
      "op": "DUP3"
    },
    "8586": {
      "op": "GT"
    },
    "8587": {
      "op": "ISZERO"
    },
    "8588": {
      "op": "PUSH2",
      "value": "0x2194"
    },
    "8591": {
      "op": "JUMPI"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8594": {
      "op": "DUP1"
    },
    "8595": {
      "op": "REVERT"
    },
    "8596": {
      "op": "JUMPDEST"
    },
    "8597": {
      "op": "PUSH2",
      "value": "0x21A0"
    },
    "8600": {
      "op": "DUP11"
    },
    "8601": {
      "op": "DUP4"
    },
    "8602": {
      "op": "DUP12"
    },
    "8603": {
      "op": "ADD"
    },
    "8604": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "8607": {
      "jump": "i",
      "op": "JUMP"
    },
    "8608": {
      "op": "JUMPDEST"
    },
    "8609": {
      "op": "SWAP6"
    },
    "8610": {
      "op": "POP"
    },
    "8611": {
      "op": "PUSH2",
      "value": "0x21AE"
    },
    "8614": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8616": {
      "op": "DUP11"
    },
    "8617": {
      "op": "ADD"
    },
    "8618": {
      "op": "PUSH2",
      "value": "0x211D"
    },
    "8621": {
      "jump": "i",
      "op": "JUMP"
    },
    "8622": {
      "op": "JUMPDEST"
    },
    "8623": {
      "op": "SWAP5"
    },
    "8624": {
      "op": "POP"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8627": {
      "op": "DUP10"
    },
    "8628": {
      "op": "ADD"
    },
    "8629": {
      "op": "CALLDATALOAD"
    },
    "8630": {
      "op": "SWAP4"
    },
    "8631": {
      "op": "POP"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8634": {
      "op": "DUP10"
    },
    "8635": {
      "op": "ADD"
    },
    "8636": {
      "op": "CALLDATALOAD"
    },
    "8637": {
      "op": "SWAP2"
    },
    "8638": {
      "op": "POP"
    },
    "8639": {
      "op": "DUP1"
    },
    "8640": {
      "op": "DUP3"
    },
    "8641": {
      "op": "GT"
    },
    "8642": {
      "op": "ISZERO"
    },
    "8643": {
      "op": "PUSH2",
      "value": "0x21CB"
    },
    "8646": {
      "op": "JUMPI"
    },
    "8647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8649": {
      "op": "DUP1"
    },
    "8650": {
      "op": "REVERT"
    },
    "8651": {
      "op": "JUMPDEST"
    },
    "8652": {
      "op": "POP"
    },
    "8653": {
      "op": "PUSH2",
      "value": "0x21D8"
    },
    "8656": {
      "op": "DUP10"
    },
    "8657": {
      "op": "DUP3"
    },
    "8658": {
      "op": "DUP11"
    },
    "8659": {
      "op": "ADD"
    },
    "8660": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "8663": {
      "jump": "i",
      "op": "JUMP"
    },
    "8664": {
      "op": "JUMPDEST"
    },
    "8665": {
      "op": "SWAP2"
    },
    "8666": {
      "op": "POP"
    },
    "8667": {
      "op": "POP"
    },
    "8668": {
      "op": "SWAP3"
    },
    "8669": {
      "op": "SWAP6"
    },
    "8670": {
      "op": "POP"
    },
    "8671": {
      "op": "SWAP3"
    },
    "8672": {
      "op": "SWAP6"
    },
    "8673": {
      "op": "POP"
    },
    "8674": {
      "op": "SWAP3"
    },
    "8675": {
      "op": "SWAP6"
    },
    "8676": {
      "jump": "o",
      "op": "JUMP"
    },
    "8677": {
      "op": "JUMPDEST"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8682": {
      "op": "DUP3"
    },
    "8683": {
      "op": "DUP5"
    },
    "8684": {
      "op": "SUB"
    },
    "8685": {
      "op": "SLT"
    },
    "8686": {
      "op": "ISZERO"
    },
    "8687": {
      "op": "PUSH2",
      "value": "0x21F7"
    },
    "8690": {
      "op": "JUMPI"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8693": {
      "op": "DUP1"
    },
    "8694": {
      "op": "REVERT"
    },
    "8695": {
      "op": "JUMPDEST"
    },
    "8696": {
      "op": "DUP2"
    },
    "8697": {
      "op": "CALLDATALOAD"
    },
    "8698": {
      "op": "PUSH2",
      "value": "0x2202"
    },
    "8701": {
      "op": "DUP2"
    },
    "8702": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "8705": {
      "jump": "i",
      "op": "JUMP"
    },
    "8706": {
      "op": "JUMPDEST"
    },
    "8707": {
      "op": "SWAP4"
    },
    "8708": {
      "op": "SWAP3"
    },
    "8709": {
      "op": "POP"
    },
    "8710": {
      "op": "POP"
    },
    "8711": {
      "op": "POP"
    },
    "8712": {
      "jump": "o",
      "op": "JUMP"
    },
    "8713": {
      "op": "JUMPDEST"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8716": {
      "op": "DUP3"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8719": {
      "op": "DUP4"
    },
    "8720": {
      "op": "ADD"
    },
    "8721": {
      "op": "SLT"
    },
    "8722": {
      "op": "PUSH2",
      "value": "0x221A"
    },
    "8725": {
      "op": "JUMPI"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8728": {
      "op": "DUP1"
    },
    "8729": {
      "op": "REVERT"
    },
    "8730": {
      "op": "JUMPDEST"
    },
    "8731": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8733": {
      "op": "MLOAD"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8736": {
      "op": "DUP2"
    },
    "8737": {
      "op": "ADD"
    },
    "8738": {
      "op": "DUP2"
    },
    "8739": {
      "op": "DUP2"
    },
    "8740": {
      "op": "LT"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8747": {
      "op": "SHL"
    },
    "8748": {
      "op": "SUB"
    },
    "8749": {
      "op": "DUP3"
    },
    "8750": {
      "op": "GT"
    },
    "8751": {
      "op": "OR"
    },
    "8752": {
      "op": "ISZERO"
    },
    "8753": {
      "op": "PUSH2",
      "value": "0x223C"
    },
    "8756": {
      "op": "JUMPI"
    },
    "8757": {
      "op": "PUSH2",
      "value": "0x223C"
    },
    "8760": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "8763": {
      "jump": "i",
      "op": "JUMP"
    },
    "8764": {
      "op": "JUMPDEST"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8767": {
      "op": "MSTORE"
    },
    "8768": {
      "op": "DUP1"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8771": {
      "op": "DUP5"
    },
    "8772": {
      "op": "ADD"
    },
    "8773": {
      "op": "DUP6"
    },
    "8774": {
      "op": "DUP2"
    },
    "8775": {
      "op": "GT"
    },
    "8776": {
      "op": "ISZERO"
    },
    "8777": {
      "op": "PUSH2",
      "value": "0x2251"
    },
    "8780": {
      "op": "JUMPI"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8783": {
      "op": "DUP1"
    },
    "8784": {
      "op": "REVERT"
    },
    "8785": {
      "op": "JUMPDEST"
    },
    "8786": {
      "op": "DUP5"
    },
    "8787": {
      "op": "JUMPDEST"
    },
    "8788": {
      "op": "DUP2"
    },
    "8789": {
      "op": "DUP2"
    },
    "8790": {
      "op": "LT"
    },
    "8791": {
      "op": "ISZERO"
    },
    "8792": {
      "op": "PUSH2",
      "value": "0x2274"
    },
    "8795": {
      "op": "JUMPI"
    },
    "8796": {
      "op": "DUP1"
    },
    "8797": {
      "op": "CALLDATALOAD"
    },
    "8798": {
      "op": "PUSH2",
      "value": "0x2266"
    },
    "8801": {
      "op": "DUP2"
    },
    "8802": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "8805": {
      "jump": "i",
      "op": "JUMP"
    },
    "8806": {
      "op": "JUMPDEST"
    },
    "8807": {
      "op": "DUP4"
    },
    "8808": {
      "op": "MSTORE"
    },
    "8809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8811": {
      "op": "SWAP3"
    },
    "8812": {
      "op": "DUP4"
    },
    "8813": {
      "op": "ADD"
    },
    "8814": {
      "op": "SWAP3"
    },
    "8815": {
      "op": "ADD"
    },
    "8816": {
      "op": "PUSH2",
      "value": "0x2253"
    },
    "8819": {
      "op": "JUMP"
    },
    "8820": {
      "op": "JUMPDEST"
    },
    "8821": {
      "op": "POP"
    },
    "8822": {
      "op": "SWAP2"
    },
    "8823": {
      "op": "SWAP6"
    },
    "8824": {
      "op": "SWAP5"
    },
    "8825": {
      "op": "POP"
    },
    "8826": {
      "op": "POP"
    },
    "8827": {
      "op": "POP"
    },
    "8828": {
      "op": "POP"
    },
    "8829": {
      "op": "POP"
    },
    "8830": {
      "jump": "o",
      "op": "JUMP"
    },
    "8831": {
      "op": "JUMPDEST"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8838": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8840": {
      "op": "SHL"
    },
    "8841": {
      "op": "SUB"
    },
    "8842": {
      "op": "DUP3"
    },
    "8843": {
      "op": "GT"
    },
    "8844": {
      "op": "ISZERO"
    },
    "8845": {
      "op": "PUSH2",
      "value": "0x2298"
    },
    "8848": {
      "op": "JUMPI"
    },
    "8849": {
      "op": "PUSH2",
      "value": "0x2298"
    },
    "8852": {
      "op": "PUSH2",
      "value": "0x1CF3"
    },
    "8855": {
      "jump": "i",
      "op": "JUMP"
    },
    "8856": {
      "op": "JUMPDEST"
    },
    "8857": {
      "op": "POP"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8860": {
      "op": "SHL"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8863": {
      "op": "ADD"
    },
    "8864": {
      "op": "SWAP1"
    },
    "8865": {
      "jump": "o",
      "op": "JUMP"
    },
    "8866": {
      "op": "JUMPDEST"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8869": {
      "op": "DUP3"
    },
    "8870": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8872": {
      "op": "DUP4"
    },
    "8873": {
      "op": "ADD"
    },
    "8874": {
      "op": "SLT"
    },
    "8875": {
      "op": "PUSH2",
      "value": "0x22B3"
    },
    "8878": {
      "op": "JUMPI"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8881": {
      "op": "DUP1"
    },
    "8882": {
      "op": "REVERT"
    },
    "8883": {
      "op": "JUMPDEST"
    },
    "8884": {
      "op": "DUP2"
    },
    "8885": {
      "op": "CALLDATALOAD"
    },
    "8886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8888": {
      "op": "PUSH2",
      "value": "0x22C8"
    },
    "8891": {
      "op": "PUSH2",
      "value": "0x22C3"
    },
    "8894": {
      "op": "DUP4"
    },
    "8895": {
      "op": "PUSH2",
      "value": "0x227F"
    },
    "8898": {
      "jump": "i",
      "op": "JUMP"
    },
    "8899": {
      "op": "JUMPDEST"
    },
    "8900": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "8903": {
      "jump": "i",
      "op": "JUMP"
    },
    "8904": {
      "op": "JUMPDEST"
    },
    "8905": {
      "op": "DUP3"
    },
    "8906": {
      "op": "DUP2"
    },
    "8907": {
      "op": "MSTORE"
    },
    "8908": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8910": {
      "op": "SWAP3"
    },
    "8911": {
      "op": "SWAP1"
    },
    "8912": {
      "op": "SWAP3"
    },
    "8913": {
      "op": "SHL"
    },
    "8914": {
      "op": "DUP5"
    },
    "8915": {
      "op": "ADD"
    },
    "8916": {
      "op": "DUP2"
    },
    "8917": {
      "op": "ADD"
    },
    "8918": {
      "op": "SWAP2"
    },
    "8919": {
      "op": "DUP2"
    },
    "8920": {
      "op": "DUP2"
    },
    "8921": {
      "op": "ADD"
    },
    "8922": {
      "op": "SWAP1"
    },
    "8923": {
      "op": "DUP7"
    },
    "8924": {
      "op": "DUP5"
    },
    "8925": {
      "op": "GT"
    },
    "8926": {
      "op": "ISZERO"
    },
    "8927": {
      "op": "PUSH2",
      "value": "0x22E7"
    },
    "8930": {
      "op": "JUMPI"
    },
    "8931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8933": {
      "op": "DUP1"
    },
    "8934": {
      "op": "REVERT"
    },
    "8935": {
      "op": "JUMPDEST"
    },
    "8936": {
      "op": "DUP3"
    },
    "8937": {
      "op": "DUP7"
    },
    "8938": {
      "op": "ADD"
    },
    "8939": {
      "op": "JUMPDEST"
    },
    "8940": {
      "op": "DUP5"
    },
    "8941": {
      "op": "DUP2"
    },
    "8942": {
      "op": "LT"
    },
    "8943": {
      "op": "ISZERO"
    },
    "8944": {
      "op": "PUSH2",
      "value": "0x230B"
    },
    "8947": {
      "op": "JUMPI"
    },
    "8948": {
      "op": "DUP1"
    },
    "8949": {
      "op": "CALLDATALOAD"
    },
    "8950": {
      "op": "PUSH2",
      "value": "0x22FE"
    },
    "8953": {
      "op": "DUP2"
    },
    "8954": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "8957": {
      "jump": "i",
      "op": "JUMP"
    },
    "8958": {
      "op": "JUMPDEST"
    },
    "8959": {
      "op": "DUP4"
    },
    "8960": {
      "op": "MSTORE"
    },
    "8961": {
      "op": "SWAP2"
    },
    "8962": {
      "op": "DUP4"
    },
    "8963": {
      "op": "ADD"
    },
    "8964": {
      "op": "SWAP2"
    },
    "8965": {
      "op": "DUP4"
    },
    "8966": {
      "op": "ADD"
    },
    "8967": {
      "op": "PUSH2",
      "value": "0x22EB"
    },
    "8970": {
      "op": "JUMP"
    },
    "8971": {
      "op": "JUMPDEST"
    },
    "8972": {
      "op": "POP"
    },
    "8973": {
      "op": "SWAP7"
    },
    "8974": {
      "op": "SWAP6"
    },
    "8975": {
      "op": "POP"
    },
    "8976": {
      "op": "POP"
    },
    "8977": {
      "op": "POP"
    },
    "8978": {
      "op": "POP"
    },
    "8979": {
      "op": "POP"
    },
    "8980": {
      "op": "POP"
    },
    "8981": {
      "jump": "o",
      "op": "JUMP"
    },
    "8982": {
      "op": "JUMPDEST"
    },
    "8983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8985": {
      "op": "DUP1"
    },
    "8986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8988": {
      "op": "DUP1"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8991": {
      "op": "DUP1"
    },
    "8992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8994": {
      "op": "DUP1"
    },
    "8995": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "8998": {
      "op": "DUP10"
    },
    "8999": {
      "op": "DUP12"
    },
    "9000": {
      "op": "SUB"
    },
    "9001": {
      "op": "SLT"
    },
    "9002": {
      "op": "ISZERO"
    },
    "9003": {
      "op": "PUSH2",
      "value": "0x2333"
    },
    "9006": {
      "op": "JUMPI"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9009": {
      "op": "DUP1"
    },
    "9010": {
      "op": "REVERT"
    },
    "9011": {
      "op": "JUMPDEST"
    },
    "9012": {
      "op": "DUP9"
    },
    "9013": {
      "op": "CALLDATALOAD"
    },
    "9014": {
      "op": "PUSH2",
      "value": "0x233E"
    },
    "9017": {
      "op": "DUP2"
    },
    "9018": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "9021": {
      "jump": "i",
      "op": "JUMP"
    },
    "9022": {
      "op": "JUMPDEST"
    },
    "9023": {
      "op": "SWAP8"
    },
    "9024": {
      "op": "POP"
    },
    "9025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9027": {
      "op": "DUP10"
    },
    "9028": {
      "op": "DUP2"
    },
    "9029": {
      "op": "ADD"
    },
    "9030": {
      "op": "CALLDATALOAD"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9037": {
      "op": "SHL"
    },
    "9038": {
      "op": "SUB"
    },
    "9039": {
      "op": "DUP1"
    },
    "9040": {
      "op": "DUP3"
    },
    "9041": {
      "op": "GT"
    },
    "9042": {
      "op": "ISZERO"
    },
    "9043": {
      "op": "PUSH2",
      "value": "0x235B"
    },
    "9046": {
      "op": "JUMPI"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9049": {
      "op": "DUP1"
    },
    "9050": {
      "op": "REVERT"
    },
    "9051": {
      "op": "JUMPDEST"
    },
    "9052": {
      "op": "PUSH2",
      "value": "0x2367"
    },
    "9055": {
      "op": "DUP14"
    },
    "9056": {
      "op": "DUP4"
    },
    "9057": {
      "op": "DUP15"
    },
    "9058": {
      "op": "ADD"
    },
    "9059": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "9062": {
      "jump": "i",
      "op": "JUMP"
    },
    "9063": {
      "op": "JUMPDEST"
    },
    "9064": {
      "op": "SWAP10"
    },
    "9065": {
      "op": "POP"
    },
    "9066": {
      "op": "PUSH2",
      "value": "0x2375"
    },
    "9069": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9071": {
      "op": "DUP14"
    },
    "9072": {
      "op": "ADD"
    },
    "9073": {
      "op": "PUSH2",
      "value": "0x211D"
    },
    "9076": {
      "jump": "i",
      "op": "JUMP"
    },
    "9077": {
      "op": "JUMPDEST"
    },
    "9078": {
      "op": "SWAP9"
    },
    "9079": {
      "op": "POP"
    },
    "9080": {
      "op": "PUSH2",
      "value": "0x2383"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9085": {
      "op": "DUP14"
    },
    "9086": {
      "op": "ADD"
    },
    "9087": {
      "op": "PUSH2",
      "value": "0x211D"
    },
    "9090": {
      "jump": "i",
      "op": "JUMP"
    },
    "9091": {
      "op": "JUMPDEST"
    },
    "9092": {
      "op": "SWAP8"
    },
    "9093": {
      "op": "POP"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9096": {
      "op": "DUP13"
    },
    "9097": {
      "op": "ADD"
    },
    "9098": {
      "op": "CALLDATALOAD"
    },
    "9099": {
      "op": "SWAP7"
    },
    "9100": {
      "op": "POP"
    },
    "9101": {
      "op": "DUP13"
    },
    "9102": {
      "op": "PUSH1",
      "value": "0xBF"
    },
    "9104": {
      "op": "DUP14"
    },
    "9105": {
      "op": "ADD"
    },
    "9106": {
      "op": "SLT"
    },
    "9107": {
      "op": "PUSH2",
      "value": "0x239B"
    },
    "9110": {
      "op": "JUMPI"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9113": {
      "op": "DUP1"
    },
    "9114": {
      "op": "REVERT"
    },
    "9115": {
      "op": "JUMPDEST"
    },
    "9116": {
      "op": "PUSH2",
      "value": "0x23A3"
    },
    "9119": {
      "op": "PUSH2",
      "value": "0x1D09"
    },
    "9122": {
      "jump": "i",
      "op": "JUMP"
    },
    "9123": {
      "op": "JUMPDEST"
    },
    "9124": {
      "op": "SWAP2"
    },
    "9125": {
      "op": "POP"
    },
    "9126": {
      "op": "DUP2"
    },
    "9127": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9130": {
      "op": "DUP14"
    },
    "9131": {
      "op": "ADD"
    },
    "9132": {
      "op": "DUP15"
    },
    "9133": {
      "op": "DUP2"
    },
    "9134": {
      "op": "GT"
    },
    "9135": {
      "op": "ISZERO"
    },
    "9136": {
      "op": "PUSH2",
      "value": "0x23B8"
    },
    "9139": {
      "op": "JUMPI"
    },
    "9140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9142": {
      "op": "DUP1"
    },
    "9143": {
      "op": "REVERT"
    },
    "9144": {
      "op": "JUMPDEST"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9147": {
      "op": "DUP15"
    },
    "9148": {
      "op": "ADD"
    },
    "9149": {
      "op": "JUMPDEST"
    },
    "9150": {
      "op": "DUP2"
    },
    "9151": {
      "op": "DUP2"
    },
    "9152": {
      "op": "LT"
    },
    "9153": {
      "op": "ISZERO"
    },
    "9154": {
      "op": "PUSH2",
      "value": "0x23D4"
    },
    "9157": {
      "op": "JUMPI"
    },
    "9158": {
      "op": "DUP1"
    },
    "9159": {
      "op": "CALLDATALOAD"
    },
    "9160": {
      "op": "DUP6"
    },
    "9161": {
      "op": "MSTORE"
    },
    "9162": {
      "op": "SWAP4"
    },
    "9163": {
      "op": "DUP6"
    },
    "9164": {
      "op": "ADD"
    },
    "9165": {
      "op": "SWAP4"
    },
    "9166": {
      "op": "DUP6"
    },
    "9167": {
      "op": "ADD"
    },
    "9168": {
      "op": "PUSH2",
      "value": "0x23BD"
    },
    "9171": {
      "op": "JUMP"
    },
    "9172": {
      "op": "JUMPDEST"
    },
    "9173": {
      "op": "POP"
    },
    "9174": {
      "op": "DUP2"
    },
    "9175": {
      "op": "SWAP8"
    },
    "9176": {
      "op": "POP"
    },
    "9177": {
      "op": "PUSH2",
      "value": "0x23E2"
    },
    "9180": {
      "op": "DUP16"
    },
    "9181": {
      "op": "DUP3"
    },
    "9182": {
      "op": "PUSH2",
      "value": "0x2209"
    },
    "9185": {
      "jump": "i",
      "op": "JUMP"
    },
    "9186": {
      "op": "JUMPDEST"
    },
    "9187": {
      "op": "SWAP7"
    },
    "9188": {
      "op": "POP"
    },
    "9189": {
      "op": "POP"
    },
    "9190": {
      "op": "POP"
    },
    "9191": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "9194": {
      "op": "DUP13"
    },
    "9195": {
      "op": "ADD"
    },
    "9196": {
      "op": "CALLDATALOAD"
    },
    "9197": {
      "op": "SWAP3"
    },
    "9198": {
      "op": "POP"
    },
    "9199": {
      "op": "DUP1"
    },
    "9200": {
      "op": "DUP4"
    },
    "9201": {
      "op": "GT"
    },
    "9202": {
      "op": "ISZERO"
    },
    "9203": {
      "op": "PUSH2",
      "value": "0x23FB"
    },
    "9206": {
      "op": "JUMPI"
    },
    "9207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9209": {
      "op": "DUP1"
    },
    "9210": {
      "op": "REVERT"
    },
    "9211": {
      "op": "JUMPDEST"
    },
    "9212": {
      "op": "POP"
    },
    "9213": {
      "op": "POP"
    },
    "9214": {
      "op": "PUSH2",
      "value": "0x2409"
    },
    "9217": {
      "op": "DUP12"
    },
    "9218": {
      "op": "DUP3"
    },
    "9219": {
      "op": "DUP13"
    },
    "9220": {
      "op": "ADD"
    },
    "9221": {
      "op": "PUSH2",
      "value": "0x22A2"
    },
    "9224": {
      "jump": "i",
      "op": "JUMP"
    },
    "9225": {
      "op": "JUMPDEST"
    },
    "9226": {
      "op": "SWAP2"
    },
    "9227": {
      "op": "POP"
    },
    "9228": {
      "op": "POP"
    },
    "9229": {
      "op": "SWAP3"
    },
    "9230": {
      "op": "SWAP6"
    },
    "9231": {
      "op": "SWAP9"
    },
    "9232": {
      "op": "POP"
    },
    "9233": {
      "op": "SWAP3"
    },
    "9234": {
      "op": "SWAP6"
    },
    "9235": {
      "op": "SWAP9"
    },
    "9236": {
      "op": "SWAP1"
    },
    "9237": {
      "op": "SWAP4"
    },
    "9238": {
      "op": "SWAP7"
    },
    "9239": {
      "op": "POP"
    },
    "9240": {
      "jump": "o",
      "op": "JUMP"
    },
    "9241": {
      "op": "JUMPDEST"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9244": {
      "op": "DUP2"
    },
    "9245": {
      "op": "MSTORE"
    },
    "9246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9248": {
      "op": "PUSH2",
      "value": "0x2202"
    },
    "9251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9253": {
      "op": "DUP4"
    },
    "9254": {
      "op": "ADD"
    },
    "9255": {
      "op": "DUP5"
    },
    "9256": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "9259": {
      "jump": "i",
      "op": "JUMP"
    },
    "9260": {
      "op": "JUMPDEST"
    },
    "9261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9263": {
      "op": "DUP1"
    },
    "9264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9266": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9268": {
      "op": "DUP5"
    },
    "9269": {
      "op": "DUP7"
    },
    "9270": {
      "op": "SUB"
    },
    "9271": {
      "op": "SLT"
    },
    "9272": {
      "op": "ISZERO"
    },
    "9273": {
      "op": "PUSH2",
      "value": "0x2441"
    },
    "9276": {
      "op": "JUMPI"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9279": {
      "op": "DUP1"
    },
    "9280": {
      "op": "REVERT"
    },
    "9281": {
      "op": "JUMPDEST"
    },
    "9282": {
      "op": "DUP4"
    },
    "9283": {
      "op": "CALLDATALOAD"
    },
    "9284": {
      "op": "SWAP3"
    },
    "9285": {
      "op": "POP"
    },
    "9286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9288": {
      "op": "DUP5"
    },
    "9289": {
      "op": "ADD"
    },
    "9290": {
      "op": "CALLDATALOAD"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9297": {
      "op": "SHL"
    },
    "9298": {
      "op": "SUB"
    },
    "9299": {
      "op": "DUP2"
    },
    "9300": {
      "op": "GT"
    },
    "9301": {
      "op": "ISZERO"
    },
    "9302": {
      "op": "PUSH2",
      "value": "0x245E"
    },
    "9305": {
      "op": "JUMPI"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9308": {
      "op": "DUP1"
    },
    "9309": {
      "op": "REVERT"
    },
    "9310": {
      "op": "JUMPDEST"
    },
    "9311": {
      "op": "PUSH2",
      "value": "0x246A"
    },
    "9314": {
      "op": "DUP7"
    },
    "9315": {
      "op": "DUP3"
    },
    "9316": {
      "op": "DUP8"
    },
    "9317": {
      "op": "ADD"
    },
    "9318": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "9321": {
      "jump": "i",
      "op": "JUMP"
    },
    "9322": {
      "op": "JUMPDEST"
    },
    "9323": {
      "op": "SWAP3"
    },
    "9324": {
      "op": "POP"
    },
    "9325": {
      "op": "POP"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9328": {
      "op": "DUP5"
    },
    "9329": {
      "op": "ADD"
    },
    "9330": {
      "op": "CALLDATALOAD"
    },
    "9331": {
      "op": "SWAP1"
    },
    "9332": {
      "op": "POP"
    },
    "9333": {
      "op": "SWAP3"
    },
    "9334": {
      "op": "POP"
    },
    "9335": {
      "op": "SWAP3"
    },
    "9336": {
      "op": "POP"
    },
    "9337": {
      "op": "SWAP3"
    },
    "9338": {
      "jump": "o",
      "op": "JUMP"
    },
    "9339": {
      "op": "JUMPDEST"
    },
    "9340": {
      "op": "DUP3"
    },
    "9341": {
      "op": "ISZERO"
    },
    "9342": {
      "op": "ISZERO"
    },
    "9343": {
      "op": "DUP2"
    },
    "9344": {
      "op": "MSTORE"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9349": {
      "op": "DUP3"
    },
    "9350": {
      "op": "ADD"
    },
    "9351": {
      "op": "MSTORE"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9354": {
      "op": "PUSH2",
      "value": "0x2496"
    },
    "9357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9359": {
      "op": "DUP4"
    },
    "9360": {
      "op": "ADD"
    },
    "9361": {
      "op": "DUP5"
    },
    "9362": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "9365": {
      "jump": "i",
      "op": "JUMP"
    },
    "9366": {
      "op": "JUMPDEST"
    },
    "9367": {
      "op": "SWAP5"
    },
    "9368": {
      "op": "SWAP4"
    },
    "9369": {
      "op": "POP"
    },
    "9370": {
      "op": "POP"
    },
    "9371": {
      "op": "POP"
    },
    "9372": {
      "op": "POP"
    },
    "9373": {
      "jump": "o",
      "op": "JUMP"
    },
    "9374": {
      "op": "JUMPDEST"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9377": {
      "op": "DUP1"
    },
    "9378": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9380": {
      "op": "DUP4"
    },
    "9381": {
      "op": "DUP6"
    },
    "9382": {
      "op": "SUB"
    },
    "9383": {
      "op": "SLT"
    },
    "9384": {
      "op": "ISZERO"
    },
    "9385": {
      "op": "PUSH2",
      "value": "0x24B1"
    },
    "9388": {
      "op": "JUMPI"
    },
    "9389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9391": {
      "op": "DUP1"
    },
    "9392": {
      "op": "REVERT"
    },
    "9393": {
      "op": "JUMPDEST"
    },
    "9394": {
      "op": "PUSH2",
      "value": "0x24BA"
    },
    "9397": {
      "op": "DUP4"
    },
    "9398": {
      "op": "PUSH2",
      "value": "0x211D"
    },
    "9401": {
      "jump": "i",
      "op": "JUMP"
    },
    "9402": {
      "op": "JUMPDEST"
    },
    "9403": {
      "op": "SWAP2"
    },
    "9404": {
      "op": "POP"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9407": {
      "op": "DUP4"
    },
    "9408": {
      "op": "ADD"
    },
    "9409": {
      "op": "CALLDATALOAD"
    },
    "9410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9416": {
      "op": "SHL"
    },
    "9417": {
      "op": "SUB"
    },
    "9418": {
      "op": "DUP2"
    },
    "9419": {
      "op": "GT"
    },
    "9420": {
      "op": "ISZERO"
    },
    "9421": {
      "op": "PUSH2",
      "value": "0x24D5"
    },
    "9424": {
      "op": "JUMPI"
    },
    "9425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9427": {
      "op": "DUP1"
    },
    "9428": {
      "op": "REVERT"
    },
    "9429": {
      "op": "JUMPDEST"
    },
    "9430": {
      "op": "PUSH2",
      "value": "0x24E1"
    },
    "9433": {
      "op": "DUP6"
    },
    "9434": {
      "op": "DUP3"
    },
    "9435": {
      "op": "DUP7"
    },
    "9436": {
      "op": "ADD"
    },
    "9437": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "9440": {
      "jump": "i",
      "op": "JUMP"
    },
    "9441": {
      "op": "JUMPDEST"
    },
    "9442": {
      "op": "SWAP2"
    },
    "9443": {
      "op": "POP"
    },
    "9444": {
      "op": "POP"
    },
    "9445": {
      "op": "SWAP3"
    },
    "9446": {
      "op": "POP"
    },
    "9447": {
      "op": "SWAP3"
    },
    "9448": {
      "op": "SWAP1"
    },
    "9449": {
      "op": "POP"
    },
    "9450": {
      "jump": "o",
      "op": "JUMP"
    },
    "9451": {
      "op": "JUMPDEST"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9454": {
      "op": "DUP1"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9457": {
      "op": "DUP1"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9460": {
      "op": "DUP6"
    },
    "9461": {
      "op": "DUP8"
    },
    "9462": {
      "op": "SUB"
    },
    "9463": {
      "op": "SLT"
    },
    "9464": {
      "op": "ISZERO"
    },
    "9465": {
      "op": "PUSH2",
      "value": "0x2501"
    },
    "9468": {
      "op": "JUMPI"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9471": {
      "op": "DUP1"
    },
    "9472": {
      "op": "REVERT"
    },
    "9473": {
      "op": "JUMPDEST"
    },
    "9474": {
      "op": "DUP5"
    },
    "9475": {
      "op": "CALLDATALOAD"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9482": {
      "op": "SHL"
    },
    "9483": {
      "op": "SUB"
    },
    "9484": {
      "op": "DUP1"
    },
    "9485": {
      "op": "DUP3"
    },
    "9486": {
      "op": "GT"
    },
    "9487": {
      "op": "ISZERO"
    },
    "9488": {
      "op": "PUSH2",
      "value": "0x2518"
    },
    "9491": {
      "op": "JUMPI"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9494": {
      "op": "DUP1"
    },
    "9495": {
      "op": "REVERT"
    },
    "9496": {
      "op": "JUMPDEST"
    },
    "9497": {
      "op": "DUP2"
    },
    "9498": {
      "op": "DUP8"
    },
    "9499": {
      "op": "ADD"
    },
    "9500": {
      "op": "SWAP2"
    },
    "9501": {
      "op": "POP"
    },
    "9502": {
      "op": "DUP8"
    },
    "9503": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9505": {
      "op": "DUP4"
    },
    "9506": {
      "op": "ADD"
    },
    "9507": {
      "op": "SLT"
    },
    "9508": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "9511": {
      "op": "JUMPI"
    },
    "9512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9514": {
      "op": "DUP1"
    },
    "9515": {
      "op": "REVERT"
    },
    "9516": {
      "op": "JUMPDEST"
    },
    "9517": {
      "op": "DUP2"
    },
    "9518": {
      "op": "CALLDATALOAD"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9521": {
      "op": "PUSH2",
      "value": "0x253C"
    },
    "9524": {
      "op": "PUSH2",
      "value": "0x22C3"
    },
    "9527": {
      "op": "DUP4"
    },
    "9528": {
      "op": "PUSH2",
      "value": "0x227F"
    },
    "9531": {
      "jump": "i",
      "op": "JUMP"
    },
    "9532": {
      "op": "JUMPDEST"
    },
    "9533": {
      "op": "DUP3"
    },
    "9534": {
      "op": "DUP2"
    },
    "9535": {
      "op": "MSTORE"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9538": {
      "op": "SWAP3"
    },
    "9539": {
      "op": "SWAP1"
    },
    "9540": {
      "op": "SWAP3"
    },
    "9541": {
      "op": "SHL"
    },
    "9542": {
      "op": "DUP5"
    },
    "9543": {
      "op": "ADD"
    },
    "9544": {
      "op": "DUP2"
    },
    "9545": {
      "op": "ADD"
    },
    "9546": {
      "op": "SWAP2"
    },
    "9547": {
      "op": "DUP2"
    },
    "9548": {
      "op": "DUP2"
    },
    "9549": {
      "op": "ADD"
    },
    "9550": {
      "op": "SWAP1"
    },
    "9551": {
      "op": "DUP12"
    },
    "9552": {
      "op": "DUP5"
    },
    "9553": {
      "op": "GT"
    },
    "9554": {
      "op": "ISZERO"
    },
    "9555": {
      "op": "PUSH2",
      "value": "0x255B"
    },
    "9558": {
      "op": "JUMPI"
    },
    "9559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9561": {
      "op": "DUP1"
    },
    "9562": {
      "op": "REVERT"
    },
    "9563": {
      "op": "JUMPDEST"
    },
    "9564": {
      "op": "SWAP5"
    },
    "9565": {
      "op": "DUP3"
    },
    "9566": {
      "op": "ADD"
    },
    "9567": {
      "op": "SWAP5"
    },
    "9568": {
      "op": "JUMPDEST"
    },
    "9569": {
      "op": "DUP4"
    },
    "9570": {
      "op": "DUP7"
    },
    "9571": {
      "op": "LT"
    },
    "9572": {
      "op": "ISZERO"
    },
    "9573": {
      "op": "PUSH2",
      "value": "0x2579"
    },
    "9576": {
      "op": "JUMPI"
    },
    "9577": {
      "op": "DUP6"
    },
    "9578": {
      "op": "CALLDATALOAD"
    },
    "9579": {
      "op": "DUP3"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "SWAP5"
    },
    "9582": {
      "op": "DUP3"
    },
    "9583": {
      "op": "ADD"
    },
    "9584": {
      "op": "SWAP5"
    },
    "9585": {
      "op": "SWAP1"
    },
    "9586": {
      "op": "DUP3"
    },
    "9587": {
      "op": "ADD"
    },
    "9588": {
      "op": "SWAP1"
    },
    "9589": {
      "op": "PUSH2",
      "value": "0x2560"
    },
    "9592": {
      "op": "JUMP"
    },
    "9593": {
      "op": "JUMPDEST"
    },
    "9594": {
      "op": "SWAP9"
    },
    "9595": {
      "op": "POP"
    },
    "9596": {
      "op": "PUSH2",
      "value": "0x2588"
    },
    "9599": {
      "op": "SWAP1"
    },
    "9600": {
      "op": "POP"
    },
    "9601": {
      "op": "DUP10"
    },
    "9602": {
      "op": "DUP3"
    },
    "9603": {
      "op": "ADD"
    },
    "9604": {
      "op": "PUSH2",
      "value": "0x211D"
    },
    "9607": {
      "jump": "i",
      "op": "JUMP"
    },
    "9608": {
      "op": "JUMPDEST"
    },
    "9609": {
      "op": "SWAP7"
    },
    "9610": {
      "op": "POP"
    },
    "9611": {
      "op": "POP"
    },
    "9612": {
      "op": "POP"
    },
    "9613": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9615": {
      "op": "DUP8"
    },
    "9616": {
      "op": "ADD"
    },
    "9617": {
      "op": "CALLDATALOAD"
    },
    "9618": {
      "op": "SWAP2"
    },
    "9619": {
      "op": "POP"
    },
    "9620": {
      "op": "DUP1"
    },
    "9621": {
      "op": "DUP3"
    },
    "9622": {
      "op": "GT"
    },
    "9623": {
      "op": "ISZERO"
    },
    "9624": {
      "op": "PUSH2",
      "value": "0x25A0"
    },
    "9627": {
      "op": "JUMPI"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9630": {
      "op": "DUP1"
    },
    "9631": {
      "op": "REVERT"
    },
    "9632": {
      "op": "JUMPDEST"
    },
    "9633": {
      "op": "PUSH2",
      "value": "0x25AC"
    },
    "9636": {
      "op": "DUP9"
    },
    "9637": {
      "op": "DUP4"
    },
    "9638": {
      "op": "DUP10"
    },
    "9639": {
      "op": "ADD"
    },
    "9640": {
      "op": "PUSH2",
      "value": "0x1D61"
    },
    "9643": {
      "jump": "i",
      "op": "JUMP"
    },
    "9644": {
      "op": "JUMPDEST"
    },
    "9645": {
      "op": "SWAP4"
    },
    "9646": {
      "op": "POP"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9649": {
      "op": "DUP8"
    },
    "9650": {
      "op": "ADD"
    },
    "9651": {
      "op": "CALLDATALOAD"
    },
    "9652": {
      "op": "SWAP2"
    },
    "9653": {
      "op": "POP"
    },
    "9654": {
      "op": "DUP1"
    },
    "9655": {
      "op": "DUP3"
    },
    "9656": {
      "op": "GT"
    },
    "9657": {
      "op": "ISZERO"
    },
    "9658": {
      "op": "PUSH2",
      "value": "0x1EB3"
    },
    "9661": {
      "op": "JUMPI"
    },
    "9662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9664": {
      "op": "DUP1"
    },
    "9665": {
      "op": "REVERT"
    },
    "9666": {
      "op": "JUMPDEST"
    },
    "9667": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9674": {
      "op": "SHL"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9677": {
      "op": "MSTORE"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9680": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9682": {
      "op": "MSTORE"
    },
    "9683": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9687": {
      "op": "REVERT"
    },
    "9688": {
      "op": "JUMPDEST"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "9691": {
      "op": "DUP2"
    },
    "9692": {
      "op": "LT"
    },
    "9693": {
      "op": "PUSH2",
      "value": "0x25F6"
    },
    "9696": {
      "op": "JUMPI"
    },
    "9697": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9704": {
      "op": "SHL"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9707": {
      "op": "MSTORE"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9712": {
      "op": "MSTORE"
    },
    "9713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9717": {
      "op": "REVERT"
    },
    "9718": {
      "op": "JUMPDEST"
    },
    "9719": {
      "op": "SWAP1"
    },
    "9720": {
      "op": "MSTORE"
    },
    "9721": {
      "jump": "o",
      "op": "JUMP"
    },
    "9722": {
      "op": "JUMPDEST"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9727": {
      "op": "DUP1"
    },
    "9728": {
      "op": "DUP4"
    },
    "9729": {
      "op": "ADD"
    },
    "9730": {
      "op": "DUP2"
    },
    "9731": {
      "op": "DUP5"
    },
    "9732": {
      "op": "MSTORE"
    },
    "9733": {
      "op": "DUP1"
    },
    "9734": {
      "op": "DUP6"
    },
    "9735": {
      "op": "MLOAD"
    },
    "9736": {
      "op": "DUP1"
    },
    "9737": {
      "op": "DUP4"
    },
    "9738": {
      "op": "MSTORE"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9741": {
      "op": "SWAP3"
    },
    "9742": {
      "op": "POP"
    },
    "9743": {
      "op": "DUP3"
    },
    "9744": {
      "op": "DUP7"
    },
    "9745": {
      "op": "ADD"
    },
    "9746": {
      "op": "SWAP2"
    },
    "9747": {
      "op": "POP"
    },
    "9748": {
      "op": "DUP3"
    },
    "9749": {
      "op": "DUP2"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9752": {
      "op": "SHL"
    },
    "9753": {
      "op": "DUP8"
    },
    "9754": {
      "op": "ADD"
    },
    "9755": {
      "op": "ADD"
    },
    "9756": {
      "op": "DUP5"
    },
    "9757": {
      "op": "DUP9"
    },
    "9758": {
      "op": "ADD"
    },
    "9759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9761": {
      "op": "JUMPDEST"
    },
    "9762": {
      "op": "DUP4"
    },
    "9763": {
      "op": "DUP2"
    },
    "9764": {
      "op": "LT"
    },
    "9765": {
      "op": "ISZERO"
    },
    "9766": {
      "op": "PUSH2",
      "value": "0x20A9"
    },
    "9769": {
      "op": "JUMPI"
    },
    "9770": {
      "op": "DUP9"
    },
    "9771": {
      "op": "DUP4"
    },
    "9772": {
      "op": "SUB"
    },
    "9773": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9775": {
      "op": "NOT"
    },
    "9776": {
      "op": "ADD"
    },
    "9777": {
      "op": "DUP6"
    },
    "9778": {
      "op": "MSTORE"
    },
    "9779": {
      "op": "DUP2"
    },
    "9780": {
      "op": "MLOAD"
    },
    "9781": {
      "op": "DUP1"
    },
    "9782": {
      "op": "MLOAD"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9789": {
      "op": "SHL"
    },
    "9790": {
      "op": "SUB"
    },
    "9791": {
      "op": "AND"
    },
    "9792": {
      "op": "DUP5"
    },
    "9793": {
      "op": "MSTORE"
    },
    "9794": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9797": {
      "op": "DUP9"
    },
    "9798": {
      "op": "DUP3"
    },
    "9799": {
      "op": "ADD"
    },
    "9800": {
      "op": "MLOAD"
    },
    "9801": {
      "op": "PUSH2",
      "value": "0x2654"
    },
    "9804": {
      "op": "DUP11"
    },
    "9805": {
      "op": "DUP8"
    },
    "9806": {
      "op": "ADD"
    },
    "9807": {
      "op": "DUP3"
    },
    "9808": {
      "op": "PUSH2",
      "value": "0x25D8"
    },
    "9811": {
      "jump": "i",
      "op": "JUMP"
    },
    "9812": {
      "op": "JUMPDEST"
    },
    "9813": {
      "op": "POP"
    },
    "9814": {
      "op": "DUP8"
    },
    "9815": {
      "op": "DUP3"
    },
    "9816": {
      "op": "ADD"
    },
    "9817": {
      "op": "MLOAD"
    },
    "9818": {
      "op": "DUP2"
    },
    "9819": {
      "op": "DUP10"
    },
    "9820": {
      "op": "DUP8"
    },
    "9821": {
      "op": "ADD"
    },
    "9822": {
      "op": "MSTORE"
    },
    "9823": {
      "op": "PUSH2",
      "value": "0x266A"
    },
    "9826": {
      "op": "DUP3"
    },
    "9827": {
      "op": "DUP8"
    },
    "9828": {
      "op": "ADD"
    },
    "9829": {
      "op": "DUP3"
    },
    "9830": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "9833": {
      "jump": "i",
      "op": "JUMP"
    },
    "9834": {
      "op": "JUMPDEST"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9837": {
      "op": "DUP5"
    },
    "9838": {
      "op": "DUP2"
    },
    "9839": {
      "op": "ADD"
    },
    "9840": {
      "op": "MLOAD"
    },
    "9841": {
      "op": "SWAP1"
    },
    "9842": {
      "op": "DUP9"
    },
    "9843": {
      "op": "ADD"
    },
    "9844": {
      "op": "MSTORE"
    },
    "9845": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9847": {
      "op": "DUP1"
    },
    "9848": {
      "op": "DUP6"
    },
    "9849": {
      "op": "ADD"
    },
    "9850": {
      "op": "MLOAD"
    },
    "9851": {
      "op": "SWAP1"
    },
    "9852": {
      "op": "DUP9"
    },
    "9853": {
      "op": "ADD"
    },
    "9854": {
      "op": "MSTORE"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9857": {
      "op": "DUP1"
    },
    "9858": {
      "op": "DUP6"
    },
    "9859": {
      "op": "ADD"
    },
    "9860": {
      "op": "MLOAD"
    },
    "9861": {
      "op": "SWAP1"
    },
    "9862": {
      "op": "DUP9"
    },
    "9863": {
      "op": "ADD"
    },
    "9864": {
      "op": "MSTORE"
    },
    "9865": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9867": {
      "op": "DUP1"
    },
    "9868": {
      "op": "DUP6"
    },
    "9869": {
      "op": "ADD"
    },
    "9870": {
      "op": "MLOAD"
    },
    "9871": {
      "op": "ISZERO"
    },
    "9872": {
      "op": "ISZERO"
    },
    "9873": {
      "op": "SWAP1"
    },
    "9874": {
      "op": "DUP9"
    },
    "9875": {
      "op": "ADD"
    },
    "9876": {
      "op": "MSTORE"
    },
    "9877": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9879": {
      "op": "DUP1"
    },
    "9880": {
      "op": "DUP6"
    },
    "9881": {
      "op": "ADD"
    },
    "9882": {
      "op": "MLOAD"
    },
    "9883": {
      "op": "ISZERO"
    },
    "9884": {
      "op": "ISZERO"
    },
    "9885": {
      "op": "SWAP1"
    },
    "9886": {
      "op": "DUP9"
    },
    "9887": {
      "op": "ADD"
    },
    "9888": {
      "op": "MSTORE"
    },
    "9889": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9892": {
      "op": "SWAP4"
    },
    "9893": {
      "op": "DUP5"
    },
    "9894": {
      "op": "ADD"
    },
    "9895": {
      "op": "MLOAD"
    },
    "9896": {
      "op": "SWAP4"
    },
    "9897": {
      "op": "SWAP1"
    },
    "9898": {
      "op": "SWAP7"
    },
    "9899": {
      "op": "ADD"
    },
    "9900": {
      "op": "SWAP3"
    },
    "9901": {
      "op": "SWAP1"
    },
    "9902": {
      "op": "SWAP3"
    },
    "9903": {
      "op": "MSTORE"
    },
    "9904": {
      "op": "POP"
    },
    "9905": {
      "op": "POP"
    },
    "9906": {
      "op": "SWAP4"
    },
    "9907": {
      "op": "DUP7"
    },
    "9908": {
      "op": "ADD"
    },
    "9909": {
      "op": "SWAP4"
    },
    "9910": {
      "op": "SWAP1"
    },
    "9911": {
      "op": "DUP7"
    },
    "9912": {
      "op": "ADD"
    },
    "9913": {
      "op": "SWAP1"
    },
    "9914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9916": {
      "op": "ADD"
    },
    "9917": {
      "op": "PUSH2",
      "value": "0x2621"
    },
    "9920": {
      "op": "JUMP"
    },
    "9921": {
      "op": "JUMPDEST"
    },
    "9922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9924": {
      "op": "DUP1"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9927": {
      "op": "DUP1"
    },
    "9928": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9930": {
      "op": "DUP6"
    },
    "9931": {
      "op": "DUP8"
    },
    "9932": {
      "op": "SUB"
    },
    "9933": {
      "op": "SLT"
    },
    "9934": {
      "op": "ISZERO"
    },
    "9935": {
      "op": "PUSH2",
      "value": "0x26D7"
    },
    "9938": {
      "op": "JUMPI"
    },
    "9939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9941": {
      "op": "DUP1"
    },
    "9942": {
      "op": "REVERT"
    },
    "9943": {
      "op": "JUMPDEST"
    },
    "9944": {
      "op": "DUP5"
    },
    "9945": {
      "op": "CALLDATALOAD"
    },
    "9946": {
      "op": "SWAP4"
    },
    "9947": {
      "op": "POP"
    },
    "9948": {
      "op": "PUSH2",
      "value": "0x26E7"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9953": {
      "op": "DUP7"
    },
    "9954": {
      "op": "ADD"
    },
    "9955": {
      "op": "PUSH2",
      "value": "0x211D"
    },
    "9958": {
      "jump": "i",
      "op": "JUMP"
    },
    "9959": {
      "op": "JUMPDEST"
    },
    "9960": {
      "op": "SWAP3"
    },
    "9961": {
      "op": "POP"
    },
    "9962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9964": {
      "op": "DUP6"
    },
    "9965": {
      "op": "ADD"
    },
    "9966": {
      "op": "CALLDATALOAD"
    },
    "9967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9973": {
      "op": "SHL"
    },
    "9974": {
      "op": "SUB"
    },
    "9975": {
      "op": "DUP1"
    },
    "9976": {
      "op": "DUP3"
    },
    "9977": {
      "op": "GT"
    },
    "9978": {
      "op": "ISZERO"
    },
    "9979": {
      "op": "PUSH2",
      "value": "0x25A0"
    },
    "9982": {
      "op": "JUMPI"
    },
    "9983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9985": {
      "op": "DUP1"
    },
    "9986": {
      "op": "REVERT"
    },
    "9987": {
      "op": "JUMPDEST"
    },
    "9988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9990": {
      "op": "DUP1"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9993": {
      "op": "DUP4"
    },
    "9994": {
      "op": "DUP6"
    },
    "9995": {
      "op": "SUB"
    },
    "9996": {
      "op": "SLT"
    },
    "9997": {
      "op": "ISZERO"
    },
    "9998": {
      "op": "PUSH2",
      "value": "0x2716"
    },
    "10001": {
      "op": "JUMPI"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10004": {
      "op": "DUP1"
    },
    "10005": {
      "op": "REVERT"
    },
    "10006": {
      "op": "JUMPDEST"
    },
    "10007": {
      "op": "DUP3"
    },
    "10008": {
      "op": "CALLDATALOAD"
    },
    "10009": {
      "op": "SWAP2"
    },
    "10010": {
      "op": "POP"
    },
    "10011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10013": {
      "op": "DUP4"
    },
    "10014": {
      "op": "ADD"
    },
    "10015": {
      "op": "CALLDATALOAD"
    },
    "10016": {
      "op": "PUSH2",
      "value": "0x2728"
    },
    "10019": {
      "op": "DUP2"
    },
    "10020": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "10023": {
      "jump": "i",
      "op": "JUMP"
    },
    "10024": {
      "op": "JUMPDEST"
    },
    "10025": {
      "op": "DUP1"
    },
    "10026": {
      "op": "SWAP2"
    },
    "10027": {
      "op": "POP"
    },
    "10028": {
      "op": "POP"
    },
    "10029": {
      "op": "SWAP3"
    },
    "10030": {
      "op": "POP"
    },
    "10031": {
      "op": "SWAP3"
    },
    "10032": {
      "op": "SWAP1"
    },
    "10033": {
      "op": "POP"
    },
    "10034": {
      "jump": "o",
      "op": "JUMP"
    },
    "10035": {
      "op": "JUMPDEST"
    },
    "10036": {
      "op": "DUP4"
    },
    "10037": {
      "op": "ISZERO"
    },
    "10038": {
      "op": "ISZERO"
    },
    "10039": {
      "op": "DUP2"
    },
    "10040": {
      "op": "MSTORE"
    },
    "10041": {
      "op": "DUP3"
    },
    "10042": {
      "op": "ISZERO"
    },
    "10043": {
      "op": "ISZERO"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10046": {
      "op": "DUP3"
    },
    "10047": {
      "op": "ADD"
    },
    "10048": {
      "op": "MSTORE"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10053": {
      "op": "DUP3"
    },
    "10054": {
      "op": "ADD"
    },
    "10055": {
      "op": "MSTORE"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10058": {
      "op": "PUSH2",
      "value": "0x2756"
    },
    "10061": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10063": {
      "op": "DUP4"
    },
    "10064": {
      "op": "ADD"
    },
    "10065": {
      "op": "DUP5"
    },
    "10066": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10069": {
      "jump": "i",
      "op": "JUMP"
    },
    "10070": {
      "op": "JUMPDEST"
    },
    "10071": {
      "op": "SWAP6"
    },
    "10072": {
      "op": "SWAP5"
    },
    "10073": {
      "op": "POP"
    },
    "10074": {
      "op": "POP"
    },
    "10075": {
      "op": "POP"
    },
    "10076": {
      "op": "POP"
    },
    "10077": {
      "op": "POP"
    },
    "10078": {
      "jump": "o",
      "op": "JUMP"
    },
    "10079": {
      "op": "JUMPDEST"
    },
    "10080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10086": {
      "op": "SHL"
    },
    "10087": {
      "op": "SUB"
    },
    "10088": {
      "op": "DUP11"
    },
    "10089": {
      "op": "AND"
    },
    "10090": {
      "op": "DUP2"
    },
    "10091": {
      "op": "MSTORE"
    },
    "10092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10094": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10097": {
      "op": "PUSH2",
      "value": "0x277D"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10102": {
      "op": "DUP5"
    },
    "10103": {
      "op": "ADD"
    },
    "10104": {
      "op": "DUP13"
    },
    "10105": {
      "op": "PUSH2",
      "value": "0x25D8"
    },
    "10108": {
      "jump": "i",
      "op": "JUMP"
    },
    "10109": {
      "op": "JUMPDEST"
    },
    "10110": {
      "op": "DUP1"
    },
    "10111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10113": {
      "op": "DUP5"
    },
    "10114": {
      "op": "ADD"
    },
    "10115": {
      "op": "MSTORE"
    },
    "10116": {
      "op": "PUSH2",
      "value": "0x278F"
    },
    "10119": {
      "op": "DUP2"
    },
    "10120": {
      "op": "DUP5"
    },
    "10121": {
      "op": "ADD"
    },
    "10122": {
      "op": "DUP12"
    },
    "10123": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10126": {
      "jump": "i",
      "op": "JUMP"
    },
    "10127": {
      "op": "JUMPDEST"
    },
    "10128": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10130": {
      "op": "DUP5"
    },
    "10131": {
      "op": "ADD"
    },
    "10132": {
      "op": "SWAP10"
    },
    "10133": {
      "op": "SWAP1"
    },
    "10134": {
      "op": "SWAP10"
    },
    "10135": {
      "op": "MSTORE"
    },
    "10136": {
      "op": "POP"
    },
    "10137": {
      "op": "POP"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10140": {
      "op": "DUP2"
    },
    "10141": {
      "op": "ADD"
    },
    "10142": {
      "op": "SWAP6"
    },
    "10143": {
      "op": "SWAP1"
    },
    "10144": {
      "op": "SWAP6"
    },
    "10145": {
      "op": "MSTORE"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10148": {
      "op": "DUP6"
    },
    "10149": {
      "op": "ADD"
    },
    "10150": {
      "op": "SWAP4"
    },
    "10151": {
      "op": "SWAP1"
    },
    "10152": {
      "op": "SWAP4"
    },
    "10153": {
      "op": "MSTORE"
    },
    "10154": {
      "op": "SWAP1"
    },
    "10155": {
      "op": "ISZERO"
    },
    "10156": {
      "op": "ISZERO"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10159": {
      "op": "DUP5"
    },
    "10160": {
      "op": "ADD"
    },
    "10161": {
      "op": "MSTORE"
    },
    "10162": {
      "op": "ISZERO"
    },
    "10163": {
      "op": "ISZERO"
    },
    "10164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10166": {
      "op": "DUP4"
    },
    "10167": {
      "op": "ADD"
    },
    "10168": {
      "op": "MSTORE"
    },
    "10169": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10172": {
      "op": "SWAP1"
    },
    "10173": {
      "op": "SWAP2"
    },
    "10174": {
      "op": "ADD"
    },
    "10175": {
      "op": "MSTORE"
    },
    "10176": {
      "op": "SWAP4"
    },
    "10177": {
      "op": "SWAP3"
    },
    "10178": {
      "op": "POP"
    },
    "10179": {
      "op": "POP"
    },
    "10180": {
      "op": "POP"
    },
    "10181": {
      "jump": "o",
      "op": "JUMP"
    },
    "10182": {
      "op": "JUMPDEST"
    },
    "10183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10185": {
      "op": "DUP1"
    },
    "10186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10188": {
      "op": "DUP1"
    },
    "10189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10193": {
      "op": "DUP7"
    },
    "10194": {
      "op": "DUP9"
    },
    "10195": {
      "op": "SUB"
    },
    "10196": {
      "op": "SLT"
    },
    "10197": {
      "op": "ISZERO"
    },
    "10198": {
      "op": "PUSH2",
      "value": "0x27DE"
    },
    "10201": {
      "op": "JUMPI"
    },
    "10202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10204": {
      "op": "DUP1"
    },
    "10205": {
      "op": "REVERT"
    },
    "10206": {
      "op": "JUMPDEST"
    },
    "10207": {
      "op": "DUP6"
    },
    "10208": {
      "op": "CALLDATALOAD"
    },
    "10209": {
      "op": "PUSH2",
      "value": "0x27E9"
    },
    "10212": {
      "op": "DUP2"
    },
    "10213": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "10216": {
      "jump": "i",
      "op": "JUMP"
    },
    "10217": {
      "op": "JUMPDEST"
    },
    "10218": {
      "op": "SWAP5"
    },
    "10219": {
      "op": "POP"
    },
    "10220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10222": {
      "op": "DUP7"
    },
    "10223": {
      "op": "ADD"
    },
    "10224": {
      "op": "CALLDATALOAD"
    },
    "10225": {
      "op": "SWAP4"
    },
    "10226": {
      "op": "POP"
    },
    "10227": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10229": {
      "op": "DUP7"
    },
    "10230": {
      "op": "ADD"
    },
    "10231": {
      "op": "CALLDATALOAD"
    },
    "10232": {
      "op": "PUSH2",
      "value": "0x2800"
    },
    "10235": {
      "op": "DUP2"
    },
    "10236": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "10239": {
      "jump": "i",
      "op": "JUMP"
    },
    "10240": {
      "op": "JUMPDEST"
    },
    "10241": {
      "op": "SWAP3"
    },
    "10242": {
      "op": "POP"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10245": {
      "op": "DUP7"
    },
    "10246": {
      "op": "ADD"
    },
    "10247": {
      "op": "CALLDATALOAD"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10252": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10254": {
      "op": "SHL"
    },
    "10255": {
      "op": "SUB"
    },
    "10256": {
      "op": "DUP2"
    },
    "10257": {
      "op": "GT"
    },
    "10258": {
      "op": "ISZERO"
    },
    "10259": {
      "op": "PUSH2",
      "value": "0x1F21"
    },
    "10262": {
      "op": "JUMPI"
    },
    "10263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10265": {
      "op": "DUP1"
    },
    "10266": {
      "op": "REVERT"
    },
    "10267": {
      "op": "JUMPDEST"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10272": {
      "op": "DUP3"
    },
    "10273": {
      "op": "DUP5"
    },
    "10274": {
      "op": "SUB"
    },
    "10275": {
      "op": "SLT"
    },
    "10276": {
      "op": "ISZERO"
    },
    "10277": {
      "op": "PUSH2",
      "value": "0x282D"
    },
    "10280": {
      "op": "JUMPI"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10283": {
      "op": "DUP1"
    },
    "10284": {
      "op": "REVERT"
    },
    "10285": {
      "op": "JUMPDEST"
    },
    "10286": {
      "op": "DUP2"
    },
    "10287": {
      "op": "MLOAD"
    },
    "10288": {
      "op": "PUSH2",
      "value": "0x2202"
    },
    "10291": {
      "op": "DUP2"
    },
    "10292": {
      "op": "PUSH2",
      "value": "0x1CDB"
    },
    "10295": {
      "jump": "i",
      "op": "JUMP"
    },
    "10296": {
      "op": "JUMPDEST"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10299": {
      "op": "DUP1"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10302": {
      "op": "SHL"
    },
    "10303": {
      "op": "SUB"
    },
    "10304": {
      "op": "DUP6"
    },
    "10305": {
      "op": "AND"
    },
    "10306": {
      "op": "DUP2"
    },
    "10307": {
      "op": "MSTORE"
    },
    "10308": {
      "op": "DUP4"
    },
    "10309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10311": {
      "op": "DUP3"
    },
    "10312": {
      "op": "ADD"
    },
    "10313": {
      "op": "MSTORE"
    },
    "10314": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10316": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10318": {
      "op": "DUP3"
    },
    "10319": {
      "op": "ADD"
    },
    "10320": {
      "op": "MSTORE"
    },
    "10321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10323": {
      "op": "PUSH2",
      "value": "0x285F"
    },
    "10326": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10328": {
      "op": "DUP4"
    },
    "10329": {
      "op": "ADD"
    },
    "10330": {
      "op": "DUP6"
    },
    "10331": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10334": {
      "jump": "i",
      "op": "JUMP"
    },
    "10335": {
      "op": "JUMPDEST"
    },
    "10336": {
      "op": "SWAP1"
    },
    "10337": {
      "op": "POP"
    },
    "10338": {
      "op": "DUP3"
    },
    "10339": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10341": {
      "op": "DUP4"
    },
    "10342": {
      "op": "ADD"
    },
    "10343": {
      "op": "MSTORE"
    },
    "10344": {
      "op": "SWAP6"
    },
    "10345": {
      "op": "SWAP5"
    },
    "10346": {
      "op": "POP"
    },
    "10347": {
      "op": "POP"
    },
    "10348": {
      "op": "POP"
    },
    "10349": {
      "op": "POP"
    },
    "10350": {
      "op": "POP"
    },
    "10351": {
      "jump": "o",
      "op": "JUMP"
    },
    "10352": {
      "op": "JUMPDEST"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10355": {
      "op": "DUP3"
    },
    "10356": {
      "op": "MLOAD"
    },
    "10357": {
      "op": "PUSH2",
      "value": "0x2882"
    },
    "10360": {
      "op": "DUP2"
    },
    "10361": {
      "op": "DUP5"
    },
    "10362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10364": {
      "op": "DUP8"
    },
    "10365": {
      "op": "ADD"
    },
    "10366": {
      "op": "PUSH2",
      "value": "0x1F58"
    },
    "10369": {
      "jump": "i",
      "op": "JUMP"
    },
    "10370": {
      "op": "JUMPDEST"
    },
    "10371": {
      "op": "SWAP2"
    },
    "10372": {
      "op": "SWAP1"
    },
    "10373": {
      "op": "SWAP2"
    },
    "10374": {
      "op": "ADD"
    },
    "10375": {
      "op": "SWAP3"
    },
    "10376": {
      "op": "SWAP2"
    },
    "10377": {
      "op": "POP"
    },
    "10378": {
      "op": "POP"
    },
    "10379": {
      "jump": "o",
      "op": "JUMP"
    },
    "10380": {
      "op": "JUMPDEST"
    },
    "10381": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10383": {
      "op": "DUP2"
    },
    "10384": {
      "op": "MSTORE"
    },
    "10385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10387": {
      "op": "PUSH2",
      "value": "0x289F"
    },
    "10390": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10392": {
      "op": "DUP4"
    },
    "10393": {
      "op": "ADD"
    },
    "10394": {
      "op": "DUP8"
    },
    "10395": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10398": {
      "jump": "i",
      "op": "JUMP"
    },
    "10399": {
      "op": "JUMPDEST"
    },
    "10400": {
      "op": "DUP3"
    },
    "10401": {
      "op": "DUP2"
    },
    "10402": {
      "op": "SUB"
    },
    "10403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10405": {
      "op": "DUP5"
    },
    "10406": {
      "op": "ADD"
    },
    "10407": {
      "op": "MSTORE"
    },
    "10408": {
      "op": "PUSH2",
      "value": "0x28B1"
    },
    "10411": {
      "op": "DUP2"
    },
    "10412": {
      "op": "DUP8"
    },
    "10413": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10416": {
      "jump": "i",
      "op": "JUMP"
    },
    "10417": {
      "op": "JUMPDEST"
    },
    "10418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10424": {
      "op": "SHL"
    },
    "10425": {
      "op": "SUB"
    },
    "10426": {
      "op": "DUP7"
    },
    "10427": {
      "op": "AND"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10430": {
      "op": "DUP6"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "MSTORE"
    },
    "10433": {
      "op": "DUP4"
    },
    "10434": {
      "op": "DUP2"
    },
    "10435": {
      "op": "SUB"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10438": {
      "op": "DUP6"
    },
    "10439": {
      "op": "ADD"
    },
    "10440": {
      "op": "MSTORE"
    },
    "10441": {
      "op": "SWAP1"
    },
    "10442": {
      "op": "POP"
    },
    "10443": {
      "op": "PUSH2",
      "value": "0x28D4"
    },
    "10446": {
      "op": "DUP2"
    },
    "10447": {
      "op": "DUP6"
    },
    "10448": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10451": {
      "jump": "i",
      "op": "JUMP"
    },
    "10452": {
      "op": "JUMPDEST"
    },
    "10453": {
      "op": "SWAP8"
    },
    "10454": {
      "op": "SWAP7"
    },
    "10455": {
      "op": "POP"
    },
    "10456": {
      "op": "POP"
    },
    "10457": {
      "op": "POP"
    },
    "10458": {
      "op": "POP"
    },
    "10459": {
      "op": "POP"
    },
    "10460": {
      "op": "POP"
    },
    "10461": {
      "op": "POP"
    },
    "10462": {
      "jump": "o",
      "op": "JUMP"
    },
    "10463": {
      "op": "JUMPDEST"
    },
    "10464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10470": {
      "op": "SHL"
    },
    "10471": {
      "op": "SUB"
    },
    "10472": {
      "op": "DUP7"
    },
    "10473": {
      "op": "DUP2"
    },
    "10474": {
      "op": "AND"
    },
    "10475": {
      "op": "DUP3"
    },
    "10476": {
      "op": "MSTORE"
    },
    "10477": {
      "op": "DUP6"
    },
    "10478": {
      "op": "AND"
    },
    "10479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10481": {
      "op": "DUP3"
    },
    "10482": {
      "op": "ADD"
    },
    "10483": {
      "op": "MSTORE"
    },
    "10484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10486": {
      "op": "DUP2"
    },
    "10487": {
      "op": "ADD"
    },
    "10488": {
      "op": "DUP5"
    },
    "10489": {
      "op": "SWAP1"
    },
    "10490": {
      "op": "MSTORE"
    },
    "10491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10493": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10495": {
      "op": "DUP3"
    },
    "10496": {
      "op": "ADD"
    },
    "10497": {
      "op": "DUP2"
    },
    "10498": {
      "op": "SWAP1"
    },
    "10499": {
      "op": "MSTORE"
    },
    "10500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10502": {
      "op": "SWAP1"
    },
    "10503": {
      "op": "PUSH2",
      "value": "0x2912"
    },
    "10506": {
      "op": "SWAP1"
    },
    "10507": {
      "op": "DUP4"
    },
    "10508": {
      "op": "ADD"
    },
    "10509": {
      "op": "DUP6"
    },
    "10510": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10513": {
      "jump": "i",
      "op": "JUMP"
    },
    "10514": {
      "op": "JUMPDEST"
    },
    "10515": {
      "op": "SWAP1"
    },
    "10516": {
      "op": "POP"
    },
    "10517": {
      "op": "DUP3"
    },
    "10518": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10520": {
      "op": "DUP4"
    },
    "10521": {
      "op": "ADD"
    },
    "10522": {
      "op": "MSTORE"
    },
    "10523": {
      "op": "SWAP7"
    },
    "10524": {
      "op": "SWAP6"
    },
    "10525": {
      "op": "POP"
    },
    "10526": {
      "op": "POP"
    },
    "10527": {
      "op": "POP"
    },
    "10528": {
      "op": "POP"
    },
    "10529": {
      "op": "POP"
    },
    "10530": {
      "op": "POP"
    },
    "10531": {
      "jump": "o",
      "op": "JUMP"
    },
    "10532": {
      "op": "JUMPDEST"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10535": {
      "op": "DUP2"
    },
    "10536": {
      "op": "DUP2"
    },
    "10537": {
      "op": "SHR"
    },
    "10538": {
      "op": "SWAP1"
    },
    "10539": {
      "op": "DUP3"
    },
    "10540": {
      "op": "AND"
    },
    "10541": {
      "op": "DUP1"
    },
    "10542": {
      "op": "PUSH2",
      "value": "0x2938"
    },
    "10545": {
      "op": "JUMPI"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10548": {
      "op": "DUP3"
    },
    "10549": {
      "op": "AND"
    },
    "10550": {
      "op": "SWAP2"
    },
    "10551": {
      "op": "POP"
    },
    "10552": {
      "op": "JUMPDEST"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10555": {
      "op": "DUP3"
    },
    "10556": {
      "op": "LT"
    },
    "10557": {
      "op": "DUP2"
    },
    "10558": {
      "op": "EQ"
    },
    "10559": {
      "op": "ISZERO"
    },
    "10560": {
      "op": "PUSH2",
      "value": "0x2959"
    },
    "10563": {
      "op": "JUMPI"
    },
    "10564": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10571": {
      "op": "SHL"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10574": {
      "op": "MSTORE"
    },
    "10575": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10579": {
      "op": "MSTORE"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10584": {
      "op": "REVERT"
    },
    "10585": {
      "op": "JUMPDEST"
    },
    "10586": {
      "op": "POP"
    },
    "10587": {
      "op": "SWAP2"
    },
    "10588": {
      "op": "SWAP1"
    },
    "10589": {
      "op": "POP"
    },
    "10590": {
      "jump": "o",
      "op": "JUMP"
    },
    "10591": {
      "op": "JUMPDEST"
    },
    "10592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10598": {
      "op": "SHL"
    },
    "10599": {
      "op": "SUB"
    },
    "10600": {
      "op": "DUP6"
    },
    "10601": {
      "op": "AND"
    },
    "10602": {
      "op": "DUP2"
    },
    "10603": {
      "op": "MSTORE"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10608": {
      "op": "DUP3"
    },
    "10609": {
      "op": "ADD"
    },
    "10610": {
      "op": "DUP2"
    },
    "10611": {
      "op": "SWAP1"
    },
    "10612": {
      "op": "MSTORE"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10615": {
      "op": "SWAP1"
    },
    "10616": {
      "op": "PUSH2",
      "value": "0x2983"
    },
    "10619": {
      "op": "SWAP1"
    },
    "10620": {
      "op": "DUP4"
    },
    "10621": {
      "op": "ADD"
    },
    "10622": {
      "op": "DUP7"
    },
    "10623": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10626": {
      "jump": "i",
      "op": "JUMP"
    },
    "10627": {
      "op": "JUMPDEST"
    },
    "10628": {
      "op": "DUP5"
    },
    "10629": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10631": {
      "op": "DUP5"
    },
    "10632": {
      "op": "ADD"
    },
    "10633": {
      "op": "MSTORE"
    },
    "10634": {
      "op": "DUP3"
    },
    "10635": {
      "op": "DUP2"
    },
    "10636": {
      "op": "SUB"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10639": {
      "op": "DUP5"
    },
    "10640": {
      "op": "ADD"
    },
    "10641": {
      "op": "MSTORE"
    },
    "10642": {
      "op": "PUSH2",
      "value": "0x28D4"
    },
    "10645": {
      "op": "DUP2"
    },
    "10646": {
      "op": "DUP6"
    },
    "10647": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10650": {
      "jump": "i",
      "op": "JUMP"
    },
    "10651": {
      "op": "JUMPDEST"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10658": {
      "op": "SHL"
    },
    "10659": {
      "op": "SUB"
    },
    "10660": {
      "op": "DUP8"
    },
    "10661": {
      "op": "AND"
    },
    "10662": {
      "op": "DUP2"
    },
    "10663": {
      "op": "MSTORE"
    },
    "10664": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10668": {
      "op": "DUP3"
    },
    "10669": {
      "op": "ADD"
    },
    "10670": {
      "op": "DUP2"
    },
    "10671": {
      "op": "SWAP1"
    },
    "10672": {
      "op": "MSTORE"
    },
    "10673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10675": {
      "op": "SWAP1"
    },
    "10676": {
      "op": "PUSH2",
      "value": "0x29BF"
    },
    "10679": {
      "op": "SWAP1"
    },
    "10680": {
      "op": "DUP4"
    },
    "10681": {
      "op": "ADD"
    },
    "10682": {
      "op": "DUP9"
    },
    "10683": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10686": {
      "jump": "i",
      "op": "JUMP"
    },
    "10687": {
      "op": "JUMPDEST"
    },
    "10688": {
      "op": "DUP3"
    },
    "10689": {
      "op": "DUP2"
    },
    "10690": {
      "op": "SUB"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10693": {
      "op": "DUP5"
    },
    "10694": {
      "op": "ADD"
    },
    "10695": {
      "op": "MSTORE"
    },
    "10696": {
      "op": "PUSH2",
      "value": "0x29D1"
    },
    "10699": {
      "op": "DUP2"
    },
    "10700": {
      "op": "DUP9"
    },
    "10701": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10704": {
      "jump": "i",
      "op": "JUMP"
    },
    "10705": {
      "op": "JUMPDEST"
    },
    "10706": {
      "op": "SWAP1"
    },
    "10707": {
      "op": "POP"
    },
    "10708": {
      "op": "DUP6"
    },
    "10709": {
      "op": "ISZERO"
    },
    "10710": {
      "op": "ISZERO"
    },
    "10711": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10713": {
      "op": "DUP5"
    },
    "10714": {
      "op": "ADD"
    },
    "10715": {
      "op": "MSTORE"
    },
    "10716": {
      "op": "DUP5"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10719": {
      "op": "DUP5"
    },
    "10720": {
      "op": "ADD"
    },
    "10721": {
      "op": "MSTORE"
    },
    "10722": {
      "op": "DUP3"
    },
    "10723": {
      "op": "DUP2"
    },
    "10724": {
      "op": "SUB"
    },
    "10725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10727": {
      "op": "DUP5"
    },
    "10728": {
      "op": "ADD"
    },
    "10729": {
      "op": "MSTORE"
    },
    "10730": {
      "op": "PUSH2",
      "value": "0x29F3"
    },
    "10733": {
      "op": "DUP2"
    },
    "10734": {
      "op": "DUP6"
    },
    "10735": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10738": {
      "jump": "i",
      "op": "JUMP"
    },
    "10739": {
      "op": "JUMPDEST"
    },
    "10740": {
      "op": "SWAP10"
    },
    "10741": {
      "op": "SWAP9"
    },
    "10742": {
      "op": "POP"
    },
    "10743": {
      "op": "POP"
    },
    "10744": {
      "op": "POP"
    },
    "10745": {
      "op": "POP"
    },
    "10746": {
      "op": "POP"
    },
    "10747": {
      "op": "POP"
    },
    "10748": {
      "op": "POP"
    },
    "10749": {
      "op": "POP"
    },
    "10750": {
      "op": "POP"
    },
    "10751": {
      "jump": "o",
      "op": "JUMP"
    },
    "10752": {
      "op": "JUMPDEST"
    },
    "10753": {
      "op": "DUP1"
    },
    "10754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10756": {
      "op": "JUMPDEST"
    },
    "10757": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10759": {
      "op": "DUP2"
    },
    "10760": {
      "op": "LT"
    },
    "10761": {
      "op": "ISZERO"
    },
    "10762": {
      "op": "PUSH2",
      "value": "0x1631"
    },
    "10765": {
      "op": "JUMPI"
    },
    "10766": {
      "op": "DUP2"
    },
    "10767": {
      "op": "MLOAD"
    },
    "10768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10774": {
      "op": "SHL"
    },
    "10775": {
      "op": "SUB"
    },
    "10776": {
      "op": "AND"
    },
    "10777": {
      "op": "DUP5"
    },
    "10778": {
      "op": "MSTORE"
    },
    "10779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10781": {
      "op": "SWAP4"
    },
    "10782": {
      "op": "DUP5"
    },
    "10783": {
      "op": "ADD"
    },
    "10784": {
      "op": "SWAP4"
    },
    "10785": {
      "op": "SWAP1"
    },
    "10786": {
      "op": "SWAP2"
    },
    "10787": {
      "op": "ADD"
    },
    "10788": {
      "op": "SWAP1"
    },
    "10789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10791": {
      "op": "ADD"
    },
    "10792": {
      "op": "PUSH2",
      "value": "0x2A04"
    },
    "10795": {
      "op": "JUMP"
    },
    "10796": {
      "op": "JUMPDEST"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10799": {
      "op": "DUP2"
    },
    "10800": {
      "op": "MLOAD"
    },
    "10801": {
      "op": "DUP1"
    },
    "10802": {
      "op": "DUP5"
    },
    "10803": {
      "op": "MSTORE"
    },
    "10804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10806": {
      "op": "DUP1"
    },
    "10807": {
      "op": "DUP6"
    },
    "10808": {
      "op": "ADD"
    },
    "10809": {
      "op": "SWAP5"
    },
    "10810": {
      "op": "POP"
    },
    "10811": {
      "op": "DUP1"
    },
    "10812": {
      "op": "DUP5"
    },
    "10813": {
      "op": "ADD"
    },
    "10814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10816": {
      "op": "JUMPDEST"
    },
    "10817": {
      "op": "DUP4"
    },
    "10818": {
      "op": "DUP2"
    },
    "10819": {
      "op": "LT"
    },
    "10820": {
      "op": "ISZERO"
    },
    "10821": {
      "op": "PUSH2",
      "value": "0x2A65"
    },
    "10824": {
      "op": "JUMPI"
    },
    "10825": {
      "op": "DUP2"
    },
    "10826": {
      "op": "MLOAD"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10833": {
      "op": "SHL"
    },
    "10834": {
      "op": "SUB"
    },
    "10835": {
      "op": "AND"
    },
    "10836": {
      "op": "DUP8"
    },
    "10837": {
      "op": "MSTORE"
    },
    "10838": {
      "op": "SWAP6"
    },
    "10839": {
      "op": "DUP3"
    },
    "10840": {
      "op": "ADD"
    },
    "10841": {
      "op": "SWAP6"
    },
    "10842": {
      "op": "SWAP1"
    },
    "10843": {
      "op": "DUP3"
    },
    "10844": {
      "op": "ADD"
    },
    "10845": {
      "op": "SWAP1"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10848": {
      "op": "ADD"
    },
    "10849": {
      "op": "PUSH2",
      "value": "0x2A40"
    },
    "10852": {
      "op": "JUMP"
    },
    "10853": {
      "op": "JUMPDEST"
    },
    "10854": {
      "op": "POP"
    },
    "10855": {
      "op": "SWAP5"
    },
    "10856": {
      "op": "SWAP6"
    },
    "10857": {
      "op": "SWAP5"
    },
    "10858": {
      "op": "POP"
    },
    "10859": {
      "op": "POP"
    },
    "10860": {
      "op": "POP"
    },
    "10861": {
      "op": "POP"
    },
    "10862": {
      "op": "POP"
    },
    "10863": {
      "jump": "o",
      "op": "JUMP"
    },
    "10864": {
      "op": "JUMPDEST"
    },
    "10865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10871": {
      "op": "SHL"
    },
    "10872": {
      "op": "SUB"
    },
    "10873": {
      "op": "DUP10"
    },
    "10874": {
      "op": "AND"
    },
    "10875": {
      "op": "DUP2"
    },
    "10876": {
      "op": "MSTORE"
    },
    "10877": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10882": {
      "op": "DUP1"
    },
    "10883": {
      "op": "DUP4"
    },
    "10884": {
      "op": "ADD"
    },
    "10885": {
      "op": "DUP3"
    },
    "10886": {
      "op": "SWAP1"
    },
    "10887": {
      "op": "MSTORE"
    },
    "10888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10890": {
      "op": "SWAP2"
    },
    "10891": {
      "op": "SWAP1"
    },
    "10892": {
      "op": "PUSH2",
      "value": "0x2A97"
    },
    "10895": {
      "op": "DUP5"
    },
    "10896": {
      "op": "DUP4"
    },
    "10897": {
      "op": "ADD"
    },
    "10898": {
      "op": "DUP13"
    },
    "10899": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "10902": {
      "jump": "i",
      "op": "JUMP"
    },
    "10903": {
      "op": "JUMPDEST"
    },
    "10904": {
      "op": "SWAP2"
    },
    "10905": {
      "op": "POP"
    },
    "10906": {
      "op": "DUP10"
    },
    "10907": {
      "op": "ISZERO"
    },
    "10908": {
      "op": "ISZERO"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10911": {
      "op": "DUP6"
    },
    "10912": {
      "op": "ADD"
    },
    "10913": {
      "op": "MSTORE"
    },
    "10914": {
      "op": "DUP9"
    },
    "10915": {
      "op": "ISZERO"
    },
    "10916": {
      "op": "ISZERO"
    },
    "10917": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10919": {
      "op": "DUP6"
    },
    "10920": {
      "op": "ADD"
    },
    "10921": {
      "op": "MSTORE"
    },
    "10922": {
      "op": "DUP8"
    },
    "10923": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10925": {
      "op": "DUP6"
    },
    "10926": {
      "op": "ADD"
    },
    "10927": {
      "op": "MSTORE"
    },
    "10928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10930": {
      "op": "DUP5"
    },
    "10931": {
      "op": "ADD"
    },
    "10932": {
      "op": "DUP8"
    },
    "10933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10935": {
      "op": "JUMPDEST"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10938": {
      "op": "DUP2"
    },
    "10939": {
      "op": "LT"
    },
    "10940": {
      "op": "ISZERO"
    },
    "10941": {
      "op": "PUSH2",
      "value": "0x2AD4"
    },
    "10944": {
      "op": "JUMPI"
    },
    "10945": {
      "op": "DUP2"
    },
    "10946": {
      "op": "MLOAD"
    },
    "10947": {
      "op": "DUP4"
    },
    "10948": {
      "op": "MSTORE"
    },
    "10949": {
      "op": "SWAP2"
    },
    "10950": {
      "op": "DUP4"
    },
    "10951": {
      "op": "ADD"
    },
    "10952": {
      "op": "SWAP2"
    },
    "10953": {
      "op": "SWAP1"
    },
    "10954": {
      "op": "DUP4"
    },
    "10955": {
      "op": "ADD"
    },
    "10956": {
      "op": "SWAP1"
    },
    "10957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10959": {
      "op": "ADD"
    },
    "10960": {
      "op": "PUSH2",
      "value": "0x2AB7"
    },
    "10963": {
      "op": "JUMP"
    },
    "10964": {
      "op": "JUMPDEST"
    },
    "10965": {
      "op": "POP"
    },
    "10966": {
      "op": "POP"
    },
    "10967": {
      "op": "POP"
    },
    "10968": {
      "op": "POP"
    },
    "10969": {
      "op": "PUSH2",
      "value": "0x2AE6"
    },
    "10972": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10975": {
      "op": "DUP5"
    },
    "10976": {
      "op": "ADD"
    },
    "10977": {
      "op": "DUP7"
    },
    "10978": {
      "op": "PUSH2",
      "value": "0x2A00"
    },
    "10981": {
      "jump": "i",
      "op": "JUMP"
    },
    "10982": {
      "op": "JUMPDEST"
    },
    "10983": {
      "op": "DUP3"
    },
    "10984": {
      "op": "DUP2"
    },
    "10985": {
      "op": "SUB"
    },
    "10986": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "10989": {
      "op": "DUP5"
    },
    "10990": {
      "op": "ADD"
    },
    "10991": {
      "op": "MSTORE"
    },
    "10992": {
      "op": "PUSH2",
      "value": "0x2AF9"
    },
    "10995": {
      "op": "DUP2"
    },
    "10996": {
      "op": "DUP6"
    },
    "10997": {
      "op": "PUSH2",
      "value": "0x2A2C"
    },
    "11000": {
      "jump": "i",
      "op": "JUMP"
    },
    "11001": {
      "op": "JUMPDEST"
    },
    "11002": {
      "op": "SWAP12"
    },
    "11003": {
      "op": "SWAP11"
    },
    "11004": {
      "op": "POP"
    },
    "11005": {
      "op": "POP"
    },
    "11006": {
      "op": "POP"
    },
    "11007": {
      "op": "POP"
    },
    "11008": {
      "op": "POP"
    },
    "11009": {
      "op": "POP"
    },
    "11010": {
      "op": "POP"
    },
    "11011": {
      "op": "POP"
    },
    "11012": {
      "op": "POP"
    },
    "11013": {
      "op": "POP"
    },
    "11014": {
      "op": "POP"
    },
    "11015": {
      "jump": "o",
      "op": "JUMP"
    },
    "11016": {
      "op": "JUMPDEST"
    },
    "11017": {
      "op": "DUP4"
    },
    "11018": {
      "op": "DUP2"
    },
    "11019": {
      "op": "MSTORE"
    },
    "11020": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11024": {
      "op": "DUP3"
    },
    "11025": {
      "op": "ADD"
    },
    "11026": {
      "op": "MSTORE"
    },
    "11027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11029": {
      "op": "PUSH2",
      "value": "0x2B21"
    },
    "11032": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11034": {
      "op": "DUP4"
    },
    "11035": {
      "op": "ADD"
    },
    "11036": {
      "op": "DUP6"
    },
    "11037": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "11040": {
      "jump": "i",
      "op": "JUMP"
    },
    "11041": {
      "op": "JUMPDEST"
    },
    "11042": {
      "op": "SWAP1"
    },
    "11043": {
      "op": "POP"
    },
    "11044": {
      "op": "DUP3"
    },
    "11045": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11047": {
      "op": "DUP4"
    },
    "11048": {
      "op": "ADD"
    },
    "11049": {
      "op": "MSTORE"
    },
    "11050": {
      "op": "SWAP5"
    },
    "11051": {
      "op": "SWAP4"
    },
    "11052": {
      "op": "POP"
    },
    "11053": {
      "op": "POP"
    },
    "11054": {
      "op": "POP"
    },
    "11055": {
      "op": "POP"
    },
    "11056": {
      "jump": "o",
      "op": "JUMP"
    },
    "11057": {
      "op": "JUMPDEST"
    },
    "11058": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11060": {
      "op": "DUP1"
    },
    "11061": {
      "op": "DUP3"
    },
    "11062": {
      "op": "MSTORE"
    },
    "11063": {
      "op": "DUP6"
    },
    "11064": {
      "op": "MLOAD"
    },
    "11065": {
      "op": "SWAP1"
    },
    "11066": {
      "op": "DUP3"
    },
    "11067": {
      "op": "ADD"
    },
    "11068": {
      "op": "DUP2"
    },
    "11069": {
      "op": "SWAP1"
    },
    "11070": {
      "op": "MSTORE"
    },
    "11071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11073": {
      "op": "SWAP1"
    },
    "11074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11076": {
      "op": "SWAP1"
    },
    "11077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11079": {
      "op": "DUP5"
    },
    "11080": {
      "op": "ADD"
    },
    "11081": {
      "op": "SWAP1"
    },
    "11082": {
      "op": "DUP3"
    },
    "11083": {
      "op": "DUP10"
    },
    "11084": {
      "op": "ADD"
    },
    "11085": {
      "op": "DUP5"
    },
    "11086": {
      "op": "JUMPDEST"
    },
    "11087": {
      "op": "DUP3"
    },
    "11088": {
      "op": "DUP2"
    },
    "11089": {
      "op": "LT"
    },
    "11090": {
      "op": "ISZERO"
    },
    "11091": {
      "op": "PUSH2",
      "value": "0x2B6A"
    },
    "11094": {
      "op": "JUMPI"
    },
    "11095": {
      "op": "DUP2"
    },
    "11096": {
      "op": "MLOAD"
    },
    "11097": {
      "op": "DUP5"
    },
    "11098": {
      "op": "MSTORE"
    },
    "11099": {
      "op": "SWAP3"
    },
    "11100": {
      "op": "DUP5"
    },
    "11101": {
      "op": "ADD"
    },
    "11102": {
      "op": "SWAP3"
    },
    "11103": {
      "op": "SWAP1"
    },
    "11104": {
      "op": "DUP5"
    },
    "11105": {
      "op": "ADD"
    },
    "11106": {
      "op": "SWAP1"
    },
    "11107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11109": {
      "op": "ADD"
    },
    "11110": {
      "op": "PUSH2",
      "value": "0x2B4E"
    },
    "11113": {
      "op": "JUMP"
    },
    "11114": {
      "op": "JUMPDEST"
    },
    "11115": {
      "op": "POP"
    },
    "11116": {
      "op": "POP"
    },
    "11117": {
      "op": "POP"
    },
    "11118": {
      "op": "DUP7"
    },
    "11119": {
      "op": "ISZERO"
    },
    "11120": {
      "op": "ISZERO"
    },
    "11121": {
      "op": "DUP3"
    },
    "11122": {
      "op": "DUP6"
    },
    "11123": {
      "op": "ADD"
    },
    "11124": {
      "op": "MSTORE"
    },
    "11125": {
      "op": "DUP4"
    },
    "11126": {
      "op": "DUP2"
    },
    "11127": {
      "op": "SUB"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11130": {
      "op": "DUP6"
    },
    "11131": {
      "op": "ADD"
    },
    "11132": {
      "op": "MSTORE"
    },
    "11133": {
      "op": "PUSH2",
      "value": "0x2B86"
    },
    "11136": {
      "op": "DUP2"
    },
    "11137": {
      "op": "DUP8"
    },
    "11138": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "11141": {
      "jump": "i",
      "op": "JUMP"
    },
    "11142": {
      "op": "JUMPDEST"
    },
    "11143": {
      "op": "SWAP2"
    },
    "11144": {
      "op": "POP"
    },
    "11145": {
      "op": "POP"
    },
    "11146": {
      "op": "DUP3"
    },
    "11147": {
      "op": "DUP2"
    },
    "11148": {
      "op": "SUB"
    },
    "11149": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11151": {
      "op": "DUP5"
    },
    "11152": {
      "op": "ADD"
    },
    "11153": {
      "op": "MSTORE"
    },
    "11154": {
      "op": "PUSH2",
      "value": "0x28D4"
    },
    "11157": {
      "op": "DUP2"
    },
    "11158": {
      "op": "DUP6"
    },
    "11159": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "11162": {
      "jump": "i",
      "op": "JUMP"
    },
    "11163": {
      "op": "JUMPDEST"
    },
    "11164": {
      "op": "DUP5"
    },
    "11165": {
      "op": "DUP2"
    },
    "11166": {
      "op": "MSTORE"
    },
    "11167": {
      "op": "DUP4"
    },
    "11168": {
      "op": "ISZERO"
    },
    "11169": {
      "op": "ISZERO"
    },
    "11170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11172": {
      "op": "DUP3"
    },
    "11173": {
      "op": "ADD"
    },
    "11174": {
      "op": "MSTORE"
    },
    "11175": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11179": {
      "op": "DUP3"
    },
    "11180": {
      "op": "ADD"
    },
    "11181": {
      "op": "MSTORE"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11184": {
      "op": "PUSH2",
      "value": "0x2BBC"
    },
    "11187": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11189": {
      "op": "DUP4"
    },
    "11190": {
      "op": "ADD"
    },
    "11191": {
      "op": "DUP6"
    },
    "11192": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "11195": {
      "jump": "i",
      "op": "JUMP"
    },
    "11196": {
      "op": "JUMPDEST"
    },
    "11197": {
      "op": "DUP3"
    },
    "11198": {
      "op": "DUP2"
    },
    "11199": {
      "op": "SUB"
    },
    "11200": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11202": {
      "op": "DUP5"
    },
    "11203": {
      "op": "ADD"
    },
    "11204": {
      "op": "MSTORE"
    },
    "11205": {
      "op": "PUSH2",
      "value": "0x28D4"
    },
    "11208": {
      "op": "DUP2"
    },
    "11209": {
      "op": "DUP6"
    },
    "11210": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "11213": {
      "jump": "i",
      "op": "JUMP"
    },
    "11214": {
      "op": "JUMPDEST"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11221": {
      "op": "SHL"
    },
    "11222": {
      "op": "SUB"
    },
    "11223": {
      "op": "DUP7"
    },
    "11224": {
      "op": "DUP2"
    },
    "11225": {
      "op": "AND"
    },
    "11226": {
      "op": "DUP3"
    },
    "11227": {
      "op": "MSTORE"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11230": {
      "op": "DUP3"
    },
    "11231": {
      "op": "ADD"
    },
    "11232": {
      "op": "DUP7"
    },
    "11233": {
      "op": "SWAP1"
    },
    "11234": {
      "op": "MSTORE"
    },
    "11235": {
      "op": "DUP5"
    },
    "11236": {
      "op": "AND"
    },
    "11237": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11239": {
      "op": "DUP3"
    },
    "11240": {
      "op": "ADD"
    },
    "11241": {
      "op": "MSTORE"
    },
    "11242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11244": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11246": {
      "op": "DUP3"
    },
    "11247": {
      "op": "ADD"
    },
    "11248": {
      "op": "DUP2"
    },
    "11249": {
      "op": "SWAP1"
    },
    "11250": {
      "op": "MSTORE"
    },
    "11251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11253": {
      "op": "SWAP1"
    },
    "11254": {
      "op": "PUSH2",
      "value": "0x2912"
    },
    "11257": {
      "op": "SWAP1"
    },
    "11258": {
      "op": "DUP4"
    },
    "11259": {
      "op": "ADD"
    },
    "11260": {
      "op": "DUP6"
    },
    "11261": {
      "op": "PUSH2",
      "value": "0x1F84"
    },
    "11264": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "068bc94deb3158285e23156bab01618134e212d3",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"../CLCore/CLStorage.sol\";\n\n\n/// @title Contract to implement and test the basic fuctions of CLHouses\n/// @author Leonardo Urrego\n/// @notice This contract for test only the most basic interactions\ncontract CLHouse is CLStorage, Initializable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /// @notice Create a new CLH\n    /// @dev Some parameters can be ignored depending on the governance model\n    /// @param _owner The address of the deployed wallet\n    /// @param _houseName Name given by the owner\n    /// @param _housePrivate If is set to 1, the CLH is set to private\n    /// @param _houseOpen If is set to 1, the CLH is set to Open\n    /// @param _govModel keccak256 hash of the governance model, see the __GOV_* constans\n    /// @param _govRules Array for goverment rules see `enum gRule`\n    /// @param _CLC Array for CL Contracts and others see `enum eCLC`\n    /// @param _ManagerWallets Whitelist of address for invitate as managers\n    function Init(\n        address _owner, \n        string memory _houseName,\n        bool _housePrivate,\n        bool _houseOpen,\n        bytes32 _govModel,\n        uint256[3] memory _govRules,\n        address[5] memory _CLC,\n        address[] memory _ManagerWallets\n    )\n        external\n        reinitializer( __UPGRADEABLE_CLH_VERSION__ )\n    {\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = _CLC[ uint256( eCLC.CLLConstructorCLH ) ].delegatecall(\n            abi.encodeWithSignature(\n                \"__CLHConstructor(address,string,bool,bool,bytes32,uint256[3],address[5],address[])\",\n                _owner, \n                _houseName,\n                _housePrivate,\n                _houseOpen,\n                _govModel,\n                _govRules,\n                _CLC,\n                _ManagerWallets\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Execute (or reject) a proposal computing the votes and the governance model\n    /// @dev Normally is called internally after each vote\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @return status True if the proposal can be execute, false in other cases\n    /// @return message result of the transaction\n    function ExecProp(\n        uint256 _propId\n    )\n        public\n        returns(\n            bool status,\n            string memory message\n        )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature(\n                \"ExecProp(uint256)\",\n                _propId\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n\n        return ( true , \"Success executed proposal\" );\n    }\n\n    /// @notice Used to vote a proposal\n    /// @dev After vote the proposal automatically try to be executed\n    /// @param _propId ID of the proposal, based on `arrProposals`\n    /// @param _support True for accept, false to reject\n    /// @param _justification About your vote\n    function VoteProposal(\n        uint256 _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        public\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"VoteProposal(uint256,bool,string,bytes)\",\n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    /// @notice Generate a new proposal to invite a new user\n    /// @dev the execution of this proposal only create an invitation \n    /// @param _walletAddr  Address of the new user\n    /// @param _name Can be the nickname or other reference to the User\n    /// @param _description A text for the proposal\n    /// @param _isManager True if is for a manager\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropInviteUser(\n        address _walletAddr,\n        string memory _name,\n        string memory _description,\n        bool _isManager,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropInviteUser(address,string,string,bool,uint256,bytes)\",\n                _walletAddr,\n                _name,\n                _description,\n                _isManager,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for remove a user\n    /// @dev The user can be a managaer\n    /// @param _walletAddr user Address to be removed\n    /// @param _description About the proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRemoveUser(\n        address _walletAddr,\n        string memory _description,\n        uint256 _delayTime,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRemoveUser(address,string,uint256,bytes)\",\n                _walletAddr,\n                _description,\n                _delayTime,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxWei(\n        address _to,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxWei(address,uint256,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice generate a new proposal to transfer ETH in weis\n    /// @dev When execute this proposal, the transfer is made\n    /// @param _to Recipient address\n    /// @param _amountOutCLV Amount to transfer (in wei)\n    /// @param _description About this proposal\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropTxERC20(\n        address _to,\n        uint256 _amountOutCLV,\n        address _tokenOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropTxERC20(address,uint256,address,string,uint256)\",\n                _to,\n                _amountOutCLV,\n                _tokenOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a new proposal for change some governance parameters\n    /// @dev When execute this proposal the new values will be set\n    /// @param _newApprovPercentage The new percentaje for accept or reject a proposal\n    /// @param _description About the new proposal \n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropGovRules(\n        uint256 _newApprovPercentage,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 propId )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropGovRules(uint256,string,uint256)\",\n                _newApprovPercentage,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            propId := mload(ptr)\n        }\n    }\n\n    /// @notice Generate a proposal from a user that want to join to the CLH\n    /// @dev Only avaiable in public CLH\n    /// @param _name Nickname or other user identification\n    /// @param _description About the request\n    /// @param _signerWallet Address of signer to check OffChain signature\n    /// @return propId ID of the new proposal, based on `arrProposals`\n    function PropRequestToJoin(\n        string memory _name,\n        string memory _description,\n        address _signerWallet,\n        bytes memory _signature\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropRequestToJoin(string,string,address,bytes)\",\n                _name,\n                _description,\n                _signerWallet,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice For an user that have an invitation pending\n    /// @param _acceptance True for accept the invitation\n    function AcceptRejectInvitation(\n        bool _acceptance,\n        bytes memory _signature\n    )\n        external\n    {\n        address CLLUserManagement = CCLFACTORY.CLLUserManagement();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLUserManagement.delegatecall(\n            abi.encodeWithSignature( \n                \"AcceptRejectInvitation(bool,bytes)\",\n                _acceptance,\n                _signature\n            )\n        );\n\n        if( !successDGTCLL ) {\n            assembly {\n                let ptr := mload(0x40)\n                let size := returndatasize()\n                returndatacopy(ptr, 0, size)\n                revert(ptr, size)\n            }\n        }\n    }\n\n    function PropSwapERC20(\n        address _tokenOutCLV,\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSwapERC20(address,address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropSellERC20(\n        address _tokenOutCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropSellERC20(address,uint256,string,uint256)\",\n                _tokenOutCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    function PropBuyERC20(\n        address _tokenInCLV,\n        uint256 _amountOutCLV,\n        string memory _description,\n        uint256 _delayTime\n    )\n        external\n        returns( uint256 )\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"PropBuyERC20(address,uint256,string,uint256)\",\n                _tokenInCLV,\n                _amountOutCLV,\n                _description,\n                _delayTime\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n\n    /// @notice Vote for multiple proposal\n    /// @param _propId Array with ID of the proposal to votes\n    /// @param _support is the Vote (True or False) for all proposals\n    /// @param _justification Description of the vote\n    function bulkVote(\n        uint256[] memory _propId,\n        bool _support,\n        string memory _justification,\n        bytes memory _signature\n    )\n        external\n    {\n        address CLLGovernance = CCLFACTORY.CLLGovernance();\n        /// @custom:oz-upgrades-unsafe-allow delegatecall\n        (bool successDGTCLL, ) = CLLGovernance.delegatecall(\n            abi.encodeWithSignature( \n                \"bulkVote(uint256[],bool,string,bytes)\",\n                _propId,\n                _support,\n                _justification,\n                _signature\n            )\n        );\n\n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            if iszero( successDGTCLL ) {\n                revert(ptr, size)\n            }\n            return(ptr, size)\n        }\n    }\n\n    /// @notice Length of arrUsers array\n    function GetArrUsersLength() external view returns( uint256 ){\n        return arrUsers.length;\n    }\n\n    /// @notice Length of arrProposals array\n    function GetArrProposalsLength() external view returns( uint256 ){\n        return arrProposals.length;\n    }\n\n    /// @notice The list of all Proposals\n    /// @return arrProposals the array with all proposals\n    function GetProposalList() external view returns( strProposal[] memory ) {\n        return arrProposals;\n    }\n\n    /// @notice Get complete array of arrDataPropUser\n    /// @return arrDataPropUser the array with all data\n    function GetArrDataPropUser() external view returns( strDataUser[] memory ) {\n        return arrDataPropUser;\n    }\n}",
  "sourceMap": "327:17319:50:-:0;;;431:53;;;;;;;;;-1:-1:-1;455:22:50;:20;:22::i;:::-;327:17319;;5366:279:18;5434:13;;-1:-1:-1;;;5434:13:18;;;;5433:14;5425:66;;;;-1:-1:-1;;;5425:66:18;;216:2:62;5425:66:18;;;198:21:62;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:62;;;338:37;392:19;;5425:66:18;;;;;;;;5505:12;;5520:15;-1:-1:-1;;;5505:12:18;;;;;:30;5501:138;;;5551:12;:30;;-1:-1:-1;;;;5551:30:18;-1:-1:-1;;;5551:30:18;;;5600:28;;5566:15;564:36:62;;5600:28:18;;552:2:62;537:18;5600:28:18;;;;;;;5501:138;5366:279::o;422:184:62:-;327:17319:50;;;;;;",
  "sourcePath": "contracts/CLHouse/CLHouse.sol",
  "type": "contract"
}